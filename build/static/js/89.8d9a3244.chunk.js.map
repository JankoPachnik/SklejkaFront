{"version":3,"sources":["pages/uikit/RangeSliders.js","components/PageTitle.js"],"names":["RangeSliders","Component","constructor","props","super","onSlide","index","value","percent","selectedVals","this","state","textValue","toFixed","setState","onSlide2","selectedRanges","1","2","bind","render","Fragment","breadCrumbItems","label","path","active","title","xl","className","range","min","max","start","connect","handle","un","step","PageTitle","to","map","item","key"],"mappings":"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","file":"static/js/89.8d9a3244.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Row, Col, Card, CardBody } from 'reactstrap';\r\nimport Nouislider from 'nouislider-react';\r\nimport 'nouislider/distribute/nouislider.css';\r\n\r\nimport PageTitle from '../../components/PageTitle';\r\n\r\n// RangeSliders\r\nclass RangeSliders extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            selectedVals: { 1: { textValue: 20, percent: 20 }, 2: { textValue: 20, percent: 20 } },\r\n            selectedRanges: { 1: '20-45', 2: '20-45' },\r\n        };\r\n\r\n        this.onSlide = this.onSlide.bind(this);\r\n        this.onSlide2 = this.onSlide2.bind(this);\r\n    }\r\n\r\n    onSlide = (index, value, percent) => {\r\n        let selectedVals = { ...this.state.selectedVals };\r\n        selectedVals[index] = {\r\n            textValue: value[0].toFixed(2),\r\n            percent: percent[0].toFixed(2),\r\n        };\r\n        this.setState({ selectedVals: selectedVals });\r\n    };\r\n\r\n    onSlide2 = (index, value) => {\r\n        let selectedRanges = { ...this.state.selectedRanges };\r\n        selectedRanges[index] = value[0].toFixed(2) + '-' + value[1].toFixed(2);\r\n        this.setState({ selectedRanges: selectedRanges });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <PageTitle\r\n                    breadCrumbItems={[\r\n                        { label: 'UI', path: '/ui/rangesliders' },\r\n                        { label: 'Extended UI', path: '/ui/rangesliders' },\r\n                        { label: 'Range Sliders', path: '/ui/rangesliders', active: true },\r\n                    ]}\r\n                    title={'Range Sliders'}\r\n                />\r\n\r\n                <Row>\r\n                    <Col xl={6}>\r\n                        <Card>\r\n                            <CardBody>\r\n                                <h4 className=\"header-title\">Single</h4>\r\n                                <p className=\"text-muted font-14\">Slider with single selecrtor</p>\r\n\r\n                                <Nouislider\r\n                                    range={{ min: 0, max: 100 }}\r\n                                    start={[20]}\r\n                                    connect\r\n                                    onSlide={(render, handle, value, un, percent) => this.onSlide(1, value, percent)}\r\n                                />\r\n                                <p className=\"mt-2 mb-0\">\r\n                                    Value:{' '}\r\n                                    {this.state.selectedVals ? (\r\n                                        <span>\r\n                                            {this.state.selectedVals[1]['textValue']}, &nbsp;\r\n                                            {this.state.selectedVals[1]['percent']}%\r\n                                        </span>\r\n                                    ) : null}\r\n                                </p>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </Col>\r\n\r\n                    <Col xl={6}>\r\n                        <Card>\r\n                            <CardBody>\r\n                                <h4 className=\"header-title\">Range</h4>\r\n                                <p className=\"text-muted font-14\">Slider with range selecrtor</p>\r\n\r\n                                <Nouislider\r\n                                    range={{ min: 10, max: 150 }}\r\n                                    start={[20, 45]}\r\n                                    connect\r\n                                    onSlide={(render, handle, value, un, percent) => this.onSlide2(1, value)}\r\n                                />\r\n                                <p className=\"mt-2 mb-0\">\r\n                                    Value:{' '}\r\n                                    {this.state.selectedRanges ? <span>{this.state.selectedRanges[1]}</span> : null}\r\n                                </p>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                    <Col xl={6}>\r\n                        <Card>\r\n                            <CardBody>\r\n                                <h4 className=\"header-title\">Slider Step</h4>\r\n                                <p className=\"text-muted font-14\">Slider with step value</p>\r\n\r\n                                <Nouislider\r\n                                    range={{ min: 0, max: 100 }}\r\n                                    start={[20]}\r\n                                    step={10}\r\n                                    connect\r\n                                    onSlide={(render, handle, value, un, percent) => this.onSlide(2, value, percent)}\r\n                                />\r\n                                <p className=\"mt-2 mb-0\">\r\n                                    Value:{' '}\r\n                                    {this.state.selectedVals ? (\r\n                                        <span>\r\n                                            {this.state.selectedVals[2]['textValue']}, &nbsp;\r\n                                            {this.state.selectedVals[2]['percent']}%\r\n                                        </span>\r\n                                    ) : null}\r\n                                </p>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </Col>\r\n\r\n                    <Col xl={6}>\r\n                        <Card>\r\n                            <CardBody>\r\n                                <h4 className=\"header-title\">Range Slider with Steps</h4>\r\n                                <p className=\"text-muted font-14\">Slider with range selecrtor with fixed step value</p>\r\n\r\n                                <Nouislider\r\n                                    range={{ min: 10, max: 150 }}\r\n                                    start={[20, 45]}\r\n                                    step={15}\r\n                                    connect\r\n                                    onSlide={(render, handle, value, un, percent) => this.onSlide2(2, value)}\r\n                                />\r\n                                <p className=\"mt-2 mb-0\">\r\n                                    Value:{' '}\r\n                                    {this.state.selectedRanges ? <span>{this.state.selectedRanges[2]}</span> : null}\r\n                                </p>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RangeSliders;\r\n","// @flow\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Col, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\n\r\ntype PageTitleProps = {\r\n    breadCrumbItems: PropTypes.object,\r\n    title: string,\r\n};\r\n\r\n/**\r\n * PageTitle\r\n */\r\nconst PageTitle = (props: PageTitleProps) => {\r\n    return (\r\n        <Row>\r\n            <Col>\r\n                <div className=\"page-title-box\">\r\n                    <div className=\"page-title-right\">\r\n                        <Breadcrumb>\r\n                            <BreadcrumbItem>\r\n                                <Link to=\"/\">Sklejeczka</Link>\r\n                            </BreadcrumbItem>\r\n                            {props.breadCrumbItems.map((item, index) => {\r\n                                return item.active ? (\r\n                                    <BreadcrumbItem active key={index}>\r\n                                        {item.label}\r\n                                    </BreadcrumbItem>\r\n                                ) : (\r\n                                    <BreadcrumbItem key={index}>\r\n                                        <Link to={item.path}>{item.label}</Link>\r\n                                    </BreadcrumbItem>\r\n                                );\r\n                            })}\r\n                        </Breadcrumb>\r\n                    </div>\r\n                    <h4 className=\"page-title\">{props.title}</h4>\r\n                </div>\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default PageTitle;\r\n"],"sourceRoot":""}
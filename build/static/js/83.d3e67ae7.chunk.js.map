{"version":3,"sources":["pages/charts/Brite/BarChart.js","pages/charts/Brite/HorizontalBarChart.js","pages/charts/Brite/StepChart.js","pages/charts/Brite/DonutChart.js","pages/charts/Brite/LineChart.js","pages/charts/Brite/index.js","components/PageTitle.js"],"names":["ResponsiveBarChart","withResponsiveness","Bar","BarChart","Card","CardBody","className","style","width","height","isAnimated","data","name","value","isHorizontal","betweenBarsPadding","colorSchema","margin","top","left","bottom","right","HorizontalBarChart","enableLabels","percentageAxisToMaxRatio","labelsNumberFormat","ResponsiveStepChart","Step","StepChart","key","DonutChart","donutData","id","quantity","percentage","render","Row","Col","internalRadius","hasFixedHighlightedSlice","numberFormat","LineChart","dataByTopic","topic","topicName","dates","date","fullDate","props","aspectRatio","tooltipThreshold","grid","topicLabel","title","dateLabel","valueLabel","BriteChart","Fragment","PageTitle","breadCrumbItems","label","path","active","xl","to","map","item","index"],"mappings":"gMAKA,MAAMA,EAAqBC,6BAAmBC,OAuC/BC,MApCE,IAiBT,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,wBAAIC,UAAU,qBAAd,aACA,yBAAKA,UAAU,gBAAgBC,MAnBf,CACxBC,MAAO,OACPC,OAAQ,UAkBI,kBAACT,EAAD,CACIU,YAAY,EACZC,KAjBC,CACjB,CAAEC,KAAM,MAAOC,MAAO,MACtB,CAAED,KAAM,MAAOC,MAAO,KACtB,CAAED,KAAM,MAAOC,MAAO,KACtB,CAAED,KAAM,MAAOC,MAAO,MACtB,CAAED,KAAM,MAAOC,MAAO,MACtB,CAAED,KAAM,MAAOC,MAAO,MACtB,CAAED,KAAM,MAAOC,MAAO,OAWNC,cAAc,EACdL,OAAQ,IACRM,mBAAoB,GACpBC,YAAa,CAAC,WACdC,OAAQ,CAAEC,IAAK,GAAIC,KAAM,GAAIC,OAAQ,GAAIC,MAAO,SC/BxE,MAAMrB,EAAqBC,6BAAmBC,OAwC/BoB,MArCY,IAiBnB,kBAAClB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,wBAAIC,UAAU,qBAAd,wBACA,yBAAKA,UAAU,gBAAgBC,MAnBf,CACxBC,MAAO,OACPC,OAAQ,UAkBI,kBAAC,EAAD,CACIE,KAhBC,CACjB,CAAEC,KAAM,MAAOC,MAAO,MACtB,CAAED,KAAM,MAAOC,MAAO,KACtB,CAAED,KAAM,MAAOC,MAAO,KACtB,CAAED,KAAM,MAAOC,MAAO,MACtB,CAAED,KAAM,MAAOC,MAAO,MACtB,CAAED,KAAM,MAAOC,MAAO,MACtB,CAAED,KAAM,MAAOC,MAAO,OAUNC,cAAc,EACdL,OAAQ,IACRc,cAAc,EACdC,yBAA0B,IAC1BC,mBAAoB,EACpBT,YAAa,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WAChFC,OAAQ,CAAEC,IAAK,GAAIC,KAAM,GAAIC,OAAQ,GAAIC,MAAO,SChCxE,MAAMK,EAAsBzB,6BAAmB0B,QAmChCC,MAhCG,IAiBV,kBAACxB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,wBAAIC,UAAU,qBAAd,cACA,yBAAKA,UAAU,iBAAiBC,MAnBhB,CACxBC,MAAO,OACPC,OAAQ,UAkBI,kBAACiB,EAAD,CACIf,KAhBH,CACb,CAAEkB,IAAK,YAAahB,MAAO,KAC3B,CAAEgB,IAAK,OAAQhB,MAAO,KACtB,CAAEgB,IAAK,QAAShB,MAAO,KACvB,CAAEgB,IAAK,QAAShB,MAAO,KACvB,CAAEgB,IAAK,SAAUhB,MAAO,KACxB,CAAEgB,IAAK,UAAWhB,MAAO,KACzB,CAAEgB,IAAK,iBAAkBhB,MAAO,KAUhBJ,OAAQ,IACRQ,OAAQ,CAAEC,IAAK,GAAIG,MAAO,GAAID,OAAQ,GAAID,KAAM,SCqBzDW,MA/CI,KACf,MAAMC,EAAY,CACd,CAAEnB,KAAM,QAASoB,GAAI,EAAGC,SAAU,GAAIC,WAAY,GAClD,CAAEtB,KAAM,UAAWoB,GAAI,EAAGC,SAAU,IAAKC,WAAY,IACrD,CAAEtB,KAAM,WAAYoB,GAAI,EAAGC,SAAU,IAAKC,WAAY,IACtD,CAAEtB,KAAM,UAAWoB,GAAI,EAAGC,SAAU,IAAKC,WAAY,IACrD,CAAEtB,KAAM,YAAaoB,GAAI,EAAGC,SAAU,GAAIC,WAAY,GACtD,CAAEtB,KAAM,QAASoB,GAAI,EAAGC,SAAU,IAAKC,WAAY,KAGvD,OACI,kBAAC9B,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,wBAAIC,UAAU,qBAAd,eACA,yBAAKA,UAAU,mBACX,kBAAC,sBAAD,CACI6B,OAAQ,IACJ,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAAC,QAAD,CACI1B,KAAMoB,EACNtB,OAAQ,IACR6B,eAAgB,GAChBtB,YAAa,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,WACrEN,YAAY,EACZ6B,0BAA0B,KAGlC,kBAACF,EAAA,EAAD,KACI,kBAAC,SAAD,CACI1B,KAAMoB,EACNtB,OAAQ,IACRD,MAAO,IACPgC,aAAc,IACdxB,YAAa,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,WACrEC,OAAQ,CAAEC,IAAK,GAAIE,OAAQ,GAAID,KAAM,EAAGE,MAAO,cC8GxEoB,MAjJG,IA+HV,kBAACrC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,wBAAIC,UAAU,qBAAd,cACA,yBAAKA,UAAU,iBAAiBC,MAjIhB,CACxBC,MAAO,SAiIK,kBAAC,UAAD,CACIG,KAhHH,CACb+B,YAAa,CACT,CACIC,MAAO,IACPC,UAAW,gBACXC,MAAO,CACH,CACIC,KAAM,2BACNjC,MAAO,EACPkC,SAAU,4BAEd,CACID,KAAM,2BACNjC,MAAO,EACPkC,SAAU,4BAEd,CACID,KAAM,2BACNjC,MAAO,EACPkC,SAAU,4BAEd,CACID,KAAM,2BACNjC,MAAO,EACPkC,SAAU,4BAEd,CACID,KAAM,2BACNjC,MAAO,EACPkC,SAAU,4BAEd,CACID,KAAM,2BACNjC,MAAO,EACPkC,SAAU,4BAEd,CACID,KAAM,2BACNjC,MAAO,EACPkC,SAAU,4BAEd,CACID,KAAM,2BACNjC,MAAO,EACPkC,SAAU,4BAEd,CACID,KAAM,0BACNjC,MAAO,EACPkC,SAAU,4BAEd,CACID,KAAM,2BACNjC,MAAO,EACPkC,SAAU,4BAEd,CACID,KAAM,2BACNjC,MAAO,EACPkC,SAAU,4BAEd,CACID,KAAM,2BACNjC,MAAO,EACPkC,SAAU,4BAEd,CACID,KAAM,2BACNjC,MAAO,EACPkC,SAAU,4BAEd,CACID,KAAM,2BACNjC,MAAO,EACPkC,SAAU,4BAEd,CACID,KAAM,2BACNjC,MAAO,EACPkC,SAAU,4BAEd,CACID,KAAM,2BACNjC,MAAO,EACPkC,SAAU,4BAEd,CACID,KAAM,2BACNjC,MAAO,EACPkC,SAAU,4BAEd,CACID,KAAM,2BACNjC,MAAO,EACPkC,SAAU,4BAEd,CACID,KAAM,2BACNjC,MAAO,EACPkC,SAAU,gCAcVZ,OAhIDa,GACf,kBAAC,sBAAD,CACIb,OAAQ,EAAG3B,WACP,kBAAC,OAAD,eACIE,YAAY,EACZF,MAAOA,EACPyC,YAAa,GACbC,iBAAkB,IAClBC,KAAM,cACFH,MAwHAI,WAAW,SACXC,MAAM,cACNC,UAAW,OACXC,WAAY,aC3FrBC,UAxCI,IAEX,kBAAC,IAAMC,SAAP,KACI,kBAACC,EAAA,EAAD,CACIC,gBAAiB,CACb,CAAEC,MAAO,SAAUC,KAAM,0BACzB,CAAED,MAAO,QAASC,KAAM,yBAA0BC,QAAQ,IAE9DT,MAAO,iBAGX,kBAACjB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAK0B,GAAI,GACL,kBAAC,EAAD,OAGJ,kBAAC1B,EAAA,EAAD,CAAK0B,GAAI,GACL,kBAAC,EAAD,QAIR,kBAAC3B,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAK0B,GAAI,GACL,kBAAC,EAAD,OAGJ,kBAAC1B,EAAA,EAAD,CAAK0B,GAAI,GACL,kBAAC,EAAD,QAIR,kBAAC3B,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAK0B,GAAI,GACL,kBAAC,EAAD,U,gCC5CpB,kEA2CeL,IA9BIV,GAEX,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,yBAAK1C,UAAU,kBACX,yBAAKA,UAAU,oBACX,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAM0D,GAAG,KAAT,eAEHhB,EAAMW,gBAAgBM,IAAI,CAACC,EAAMC,IACvBD,EAAKJ,OACR,kBAAC,IAAD,CAAgBA,QAAM,EAACjC,IAAKsC,GACvBD,EAAKN,OAGV,kBAAC,IAAD,CAAgB/B,IAAKsC,GACjB,kBAAC,IAAD,CAAMH,GAAIE,EAAKL,MAAOK,EAAKN,WAM/C,wBAAItD,UAAU,cAAc0C,EAAMK","file":"static/js/83.d3e67ae7.chunk.js","sourcesContent":["// @flow\r\nimport React from 'react';\r\nimport { Card, CardBody } from 'reactstrap';\r\nimport { Bar, withResponsiveness } from 'britecharts-react';\r\n\r\nconst ResponsiveBarChart = withResponsiveness(Bar);\r\n\r\n// simple bar chart\r\nconst BarChart = () => {\r\n    const chartContainerStyle = {\r\n        width: '100%',\r\n        height: '300px',\r\n    };\r\n\r\n    const barChartData = [\r\n        { name: 'Mon', value: 2100 },\r\n        { name: 'Tue', value: 5000 },\r\n        { name: 'Wed', value: 4000 },\r\n        { name: 'Thu', value: 5500 },\r\n        { name: 'Fri', value: 6500 },\r\n        { name: 'Sat', value: 4500 },\r\n        { name: 'Sun', value: 3500 },\r\n    ];\r\n\r\n    return (\r\n        <Card>\r\n            <CardBody>\r\n                <h4 className=\"header-title mb-4\">Bar Chart</h4>\r\n                <div className=\"bar-container\" style={chartContainerStyle}>\r\n                    <ResponsiveBarChart\r\n                        isAnimated={false}\r\n                        data={barChartData}\r\n                        isHorizontal={false}\r\n                        height={300}\r\n                        betweenBarsPadding={0.5}\r\n                        colorSchema={['#39afd1']}\r\n                        margin={{ top: 10, left: 55, bottom: 20, right: 10 }}\r\n                    />\r\n                </div>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default BarChart;\r\n","// @flow\r\nimport React from 'react';\r\nimport { Card, CardBody } from 'reactstrap';\r\nimport { Bar, withResponsiveness } from 'britecharts-react';\r\n\r\nconst ResponsiveBarChart = withResponsiveness(Bar);\r\n\r\n// simple horizontal bar chart\r\nconst HorizontalBarChart = () => {\r\n    const chartContainerStyle = {\r\n        width: '100%',\r\n        height: '300px',\r\n    };\r\n\r\n    const barChartData = [\r\n        { name: 'Mon', value: 2100 },\r\n        { name: 'Tue', value: 5000 },\r\n        { name: 'Wed', value: 4000 },\r\n        { name: 'Thu', value: 5500 },\r\n        { name: 'Fri', value: 6500 },\r\n        { name: 'Sat', value: 4500 },\r\n        { name: 'Sun', value: 3500 },\r\n    ];\r\n\r\n    return (\r\n        <Card>\r\n            <CardBody>\r\n                <h4 className=\"header-title mb-4\">Horizontal Bar Chart</h4>\r\n                <div className=\"bar-container\" style={chartContainerStyle}>\r\n                    <ResponsiveBarChart\r\n                        data={barChartData}\r\n                        isHorizontal={true}\r\n                        height={300}\r\n                        enableLabels={true}\r\n                        percentageAxisToMaxRatio={1.3}\r\n                        labelsNumberFormat={1}\r\n                        colorSchema={['#727cf5', '#0acf97', '#6c757d', '#fa5c7c', '#ffbc00', '#39afd1', '#e3eaef']}\r\n                        margin={{ top: 10, left: 50, bottom: 20, right: 10 }}\r\n                    />\r\n                </div>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default HorizontalBarChart;\r\n","// @flow\r\nimport React from 'react';\r\nimport { Card, CardBody } from 'reactstrap';\r\nimport { Step, withResponsiveness } from 'britecharts-react';\r\n\r\nconst ResponsiveStepChart = withResponsiveness(Step);\r\n\r\n// step chart\r\nconst StepChart = () => {\r\n    const chartContainerStyle = {\r\n        width: '100%',\r\n        height: '300px',\r\n    };\r\n\r\n    const stepData = [\r\n        { key: 'Appetizer', value: 400 },\r\n        { key: 'Soup', value: 300 },\r\n        { key: 'Salad', value: 300 },\r\n        { key: 'Lunch', value: 250 },\r\n        { key: 'Dinner', value: 220 },\r\n        { key: 'Dessert', value: 100 },\r\n        { key: 'Midnight snack', value: 20 },\r\n    ];\r\n\r\n    return (\r\n        <Card>\r\n            <CardBody>\r\n                <h4 className=\"header-title mb-4\">Step Chart</h4>\r\n                <div className=\"step-container\" style={chartContainerStyle}>\r\n                    <ResponsiveStepChart\r\n                        data={stepData}\r\n                        height={300}\r\n                        margin={{ top: 40, right: 40, bottom: 80, left: 50 }}\r\n                    />\r\n                </div>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default StepChart;\r\n","// @flow\r\nimport React from 'react';\r\nimport { Card, CardBody, Row, Col } from 'reactstrap';\r\nimport { Donut, Legend, ResponsiveContainer } from 'britecharts-react';\r\n\r\n// donut chart\r\nconst DonutChart = () => {\r\n    const donutData = [\r\n        { name: 'Shiny', id: 1, quantity: 86, percentage: 5 },\r\n        { name: 'Blazing', id: 2, quantity: 300, percentage: 18 },\r\n        { name: 'Dazzling', id: 3, quantity: 276, percentage: 16 },\r\n        { name: 'Radiant', id: 4, quantity: 195, percentage: 11 },\r\n        { name: 'Sparkling', id: 5, quantity: 36, percentage: 2 },\r\n        { name: 'Other', id: 0, quantity: 814, percentage: 48 },\r\n    ];\r\n\r\n    return (\r\n        <Card>\r\n            <CardBody>\r\n                <h4 className=\"header-title mb-4\">Donut Chart</h4>\r\n                <div className=\"donut-container\">\r\n                    <ResponsiveContainer\r\n                        render={() => (\r\n                            <Row>\r\n                                <Col>\r\n                                    <Donut\r\n                                        data={donutData}\r\n                                        height={300}\r\n                                        internalRadius={80}\r\n                                        colorSchema={['#727cf5', '#0acf97', '#6c757d', '#fa5c7c', '#ffbc00', '#39afd1']}\r\n                                        isAnimated={false}\r\n                                        hasFixedHighlightedSlice={true}\r\n                                    />\r\n                                </Col>\r\n                                <Col>\r\n                                    <Legend\r\n                                        data={donutData}\r\n                                        height={200}\r\n                                        width={250}\r\n                                        numberFormat={'s'}\r\n                                        colorSchema={['#727cf5', '#0acf97', '#6c757d', '#fa5c7c', '#ffbc00', '#39afd1']}\r\n                                        margin={{ top: 10, bottom: 10, left: 0, right: 30 }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                        )}\r\n                    />\r\n                </div>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default DonutChart;\r\n","// @flow\r\nimport React from 'react';\r\nimport { Card, CardBody } from 'reactstrap';\r\nimport { Line, Tooltip, ResponsiveContainer } from 'britecharts-react';\r\n\r\n// simple line chart\r\nconst LineChart = () => {\r\n    const chartContainerStyle = {\r\n        width: '100%',\r\n    };\r\n\r\n    const renderLine = props => (\r\n        <ResponsiveContainer\r\n            render={({ width }) => (\r\n                <Line\r\n                    isAnimated={false}\r\n                    width={width}\r\n                    aspectRatio={0.7}\r\n                    tooltipThreshold={100}\r\n                    grid={'horizontal'}\r\n                    {...props}\r\n                />\r\n            )}\r\n        />\r\n    );\r\n\r\n    const lineData = {\r\n        dataByTopic: [\r\n            {\r\n                topic: 103,\r\n                topicName: 'San Francisco',\r\n                dates: [\r\n                    {\r\n                        date: '2018-06-27T07:00:00.000Z',\r\n                        value: 1,\r\n                        fullDate: '2018-06-27T07:00:00.000Z',\r\n                    },\r\n                    {\r\n                        date: '2018-06-28T07:00:00.000Z',\r\n                        value: 1,\r\n                        fullDate: '2018-06-28T07:00:00.000Z',\r\n                    },\r\n                    {\r\n                        date: '2018-06-29T07:00:00.000Z',\r\n                        value: 4,\r\n                        fullDate: '2018-06-29T07:00:00.000Z',\r\n                    },\r\n                    {\r\n                        date: '2018-06-30T07:00:00.000Z',\r\n                        value: 2,\r\n                        fullDate: '2018-06-30T07:00:00.000Z',\r\n                    },\r\n                    {\r\n                        date: '2018-07-01T07:00:00.000Z',\r\n                        value: 3,\r\n                        fullDate: '2018-07-01T07:00:00.000Z',\r\n                    },\r\n                    {\r\n                        date: '2018-07-02T07:00:00.000Z',\r\n                        value: 3,\r\n                        fullDate: '2018-07-02T07:00:00.000Z',\r\n                    },\r\n                    {\r\n                        date: '2018-07-03T07:00:00.000Z',\r\n                        value: 0,\r\n                        fullDate: '2018-07-03T07:00:00.000Z',\r\n                    },\r\n                    {\r\n                        date: '2018-07-04T07:00:00.000Z',\r\n                        value: 3,\r\n                        fullDate: '2018-07-04T07:00:00.000Z',\r\n                    },\r\n                    {\r\n                        date: '2018-07-05T07:00:00.000',\r\n                        value: 1,\r\n                        fullDate: '2018-07-05T07:00:00.000Z',\r\n                    },\r\n                    {\r\n                        date: '2018-07-06T07:00:00.000Z',\r\n                        value: 2,\r\n                        fullDate: '2018-07-06T07:00:00.000Z',\r\n                    },\r\n                    {\r\n                        date: '2018-07-07T07:00:00.000Z',\r\n                        value: 0,\r\n                        fullDate: '2018-07-07T07:00:00.000Z',\r\n                    },\r\n                    {\r\n                        date: '2018-07-08T07:00:00.000Z',\r\n                        value: 2,\r\n                        fullDate: '2018-07-08T07:00:00.000Z',\r\n                    },\r\n                    {\r\n                        date: '2018-07-09T07:00:00.000Z',\r\n                        value: 1,\r\n                        fullDate: '2018-07-09T07:00:00.000Z',\r\n                    },\r\n                    {\r\n                        date: '2018-07-10T07:00:00.000Z',\r\n                        value: 4,\r\n                        fullDate: '2018-07-10T07:00:00.000Z',\r\n                    },\r\n                    {\r\n                        date: '2018-07-11T07:00:00.000Z',\r\n                        value: 2,\r\n                        fullDate: '2018-07-11T07:00:00.000Z',\r\n                    },\r\n                    {\r\n                        date: '2018-07-12T07:00:00.000Z',\r\n                        value: 1,\r\n                        fullDate: '2018-07-12T07:00:00.000Z',\r\n                    },\r\n                    {\r\n                        date: '2018-07-13T07:00:00.000Z',\r\n                        value: 6,\r\n                        fullDate: '2018-07-13T07:00:00.000Z',\r\n                    },\r\n                    {\r\n                        date: '2018-07-14T07:00:00.000Z',\r\n                        value: 5,\r\n                        fullDate: '2018-07-14T07:00:00.000Z',\r\n                    },\r\n                    {\r\n                        date: '2018-07-15T07:00:00.000Z',\r\n                        value: 2,\r\n                        fullDate: '2018-07-15T07:00:00.000Z',\r\n                    },\r\n                ],\r\n            },\r\n        ],\r\n    };\r\n\r\n    return (\r\n        <Card>\r\n            <CardBody>\r\n                <h4 className=\"header-title mb-4\">Line Chart</h4>\r\n                <div className=\"line-container\" style={chartContainerStyle}>\r\n                    <Tooltip\r\n                        data={lineData}\r\n                        render={renderLine}\r\n                        topicLabel=\"topics\"\r\n                        title=\"Sample Data\"\r\n                        dateLabel={'date'}\r\n                        valueLabel={'value'}\r\n                    />\r\n                </div>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default LineChart;\r\n","// @flow\r\nimport React from 'react';\r\nimport { Row, Col } from 'reactstrap';\r\n\r\nimport PageTitle from '../../../components/PageTitle';\r\n\r\nimport BarChart from './BarChart';\r\nimport HorizontalBarChart from './HorizontalBarChart';\r\nimport StepChart from './StepChart';\r\nimport DonutChart from './DonutChart';\r\nimport LineChart from './LineChart';\r\n\r\nconst BriteChart = () => {\r\n    return (\r\n        <React.Fragment>\r\n            <PageTitle\r\n                breadCrumbItems={[\r\n                    { label: 'Charts', path: '/features/charts/brite' },\r\n                    { label: 'Brite', path: '/features/charts/brite', active: true },\r\n                ]}\r\n                title={'Brite Charts'}\r\n            />\r\n\r\n            <Row>\r\n                <Col xl={6}>\r\n                    <BarChart />\r\n                </Col>\r\n\r\n                <Col xl={6}>\r\n                    <HorizontalBarChart />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col xl={6}>\r\n                    <StepChart />\r\n                </Col>\r\n\r\n                <Col xl={6}>\r\n                    <DonutChart />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col xl={6}>\r\n                    <LineChart />\r\n                </Col>\r\n            </Row>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default BriteChart;\r\n","// @flow\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Col, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\n\r\ntype PageTitleProps = {\r\n    breadCrumbItems: PropTypes.object,\r\n    title: string,\r\n};\r\n\r\n/**\r\n * PageTitle\r\n */\r\nconst PageTitle = (props: PageTitleProps) => {\r\n    return (\r\n        <Row>\r\n            <Col>\r\n                <div className=\"page-title-box\">\r\n                    <div className=\"page-title-right\">\r\n                        <Breadcrumb>\r\n                            <BreadcrumbItem>\r\n                                <Link to=\"/\">Sklejeczka</Link>\r\n                            </BreadcrumbItem>\r\n                            {props.breadCrumbItems.map((item, index) => {\r\n                                return item.active ? (\r\n                                    <BreadcrumbItem active key={index}>\r\n                                        {item.label}\r\n                                    </BreadcrumbItem>\r\n                                ) : (\r\n                                    <BreadcrumbItem key={index}>\r\n                                        <Link to={item.path}>{item.label}</Link>\r\n                                    </BreadcrumbItem>\r\n                                );\r\n                            })}\r\n                        </Breadcrumb>\r\n                    </div>\r\n                    <h4 className=\"page-title\">{props.title}</h4>\r\n                </div>\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default PageTitle;\r\n"],"sourceRoot":""}
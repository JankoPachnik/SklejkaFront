{"version":3,"sources":["redux/appMenu/constants.js","constants/layout.js","redux/layout/actions.js","redux/auth/actions.js","helpers/authUtils.js","redux/appMenu/actions.js","routes/index.js","routes/Routes.js","helpers/fake-backend.js","App.js","serviceWorker.js","redux/layout/reducers.js","redux/auth/reducers.js","redux/appMenu/reducers.js","redux/reducers.js","helpers/api.js","redux/auth/saga.js","redux/layout/saga.js","redux/appMenu/utils.js","redux/appMenu/saga.js","redux/sagas.js","redux/store.js","index.js","redux/auth/constants.js","redux/layout/constants.js"],"names":["INIT_MENU","INIT_MENU_SUCCESS","CHANGE_ACTIVE_MENU_FROM_LOCATION","CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS","LAYOUT_VERTICAL","LAYOUT_HORIZONTAL","LAYOUT_DETACHED","LAYOUT_WIDTH_FLUID","LAYOUT_WIDTH_BOXED","LEFT_SIDEBAR_THEME_DEFAULT","LEFT_SIDEBAR_THEME_LIGHT","LEFT_SIDEBAR_THEME_DARK","LEFT_SIDEBAR_TYPE_FIXED","LEFT_SIDEBAR_TYPE_CONDENSED","LEFT_SIDEBAR_TYPE_SCROLLABLE","changeLayout","layout","type","CHANGE_LAYOUT","payload","changeLayoutWidth","width","CHANGE_LAYOUT_WIDTH","changeSidebarTheme","theme","CHANGE_SIDEBAR_THEME","changeSidebarType","sidebarType","CHANGE_SIDEBAR_TYPE","showRightSidebar","SHOW_RIGHT_SIDEBAR","hideRightSidebar","HIDE_RIGHT_SIDEBAR","loginUser","username","password","LOGIN_USER","loginUserSuccess","user","LOGIN_USER_SUCCESS","loginUserFailed","error","LOGIN_USER_FAILED","registerUser","fullname","email","REGISTER_USER","registerUserSuccess","REGISTER_USER_SUCCESS","registerUserFailed","REGISTER_USER_FAILED","logoutUser","history","LOGOUT_USER","forgetPassword","FORGET_PASSWORD","forgetPasswordSuccess","passwordResetStatus","FORGET_PASSWORD_SUCCESS","forgetPasswordFailed","FORGET_PASSWORD_FAILED","isUserAuthenticated","getLoggedInUser","decoded","jwtDecode","token","currentTime","Date","now","exp","console","warn","Cookies","get","JSON","parse","initMenu","initMenuSuccess","menuItems","changeActiveMenuFromLocation","changeActiveMenuFromLocationSuccess","activatedMenuItemIds","Login","React","lazy","Logout","Register","ForgetPassword","Confirm","EcommerceDashboard","CalendarApp","ProjectDetail","ProjectForm","EcommerceProducts","Orders","OrderDetails","Customers","ChatApp","Kanban","EmailDetail","Starter","Profile","ErrorPageNotFound","ServerError","FAQ","Pricing","Accordions","Alerts","Badges","Buttons","Cards","Carousel","Dropdowns","ListGroups","Modals","Tabs","Toasts","Grid","Popovers","Progress","Ribbons","Tooltips","Typography","Spinners","Widgets","DragDrop","RangeSliders","Ratings","MDIIcons","Dripicons","Unicons","BasicForms","FormValidation","FormAdvanced","FormWizard","FileUpload","Editors","ApexChart","BriteChart","ChartJs","BasicTables","AdvancedTables","GoogleMaps","PrivateRoute","Component","component","roles","rest","render","props","to","pathname","state","from","location","loggedInUser","indexOf","role","rootRoute","path","exact","route","dashboardRoutes","name","icon","header","children","badge","variant","text","appRoutes","pageRoutes","authRoutes","Route","uiRoutes","allRoutes","authProtectedRoutes","allFlattenRoutes","flattenRoutes","routes","flatRoutes","forEach","item","push","loading","AuthLayout","Loadable","loader","loaded","default","VerticalLayout","HorizontalLayout","DetachedLayout","Routes","getLayout","layoutCls","layoutType","layoutConstants","nextProps","nextState","oldLayout","this","newLayout","stringify","Layout","map","index","key","connect","Auth","users","id","firstName","lastName","realFetch","window","fetch","url","opts","Promise","resolve","reject","setTimeout","endsWith","method","params","body","filteredUsers","filter","length","responseJson","ok","json","split","newUser","message","headers","Authorization","then","response","configureFakeBackend","App","Boolean","hostname","match","INIT_STATE","layoutWidth","leftSideBarTheme","leftSideBarType","action","TOGGLE_RIGHT_SIDEBAR","AppMenu","combineReducers","fetchJSON","options","status","catch","login","logout","register","watchLoginUser","watchLogoutUser","watchRegisterUser","watchForgetPassword","authSaga","setSession","cookies","set","remove","call","put","takeEvery","all","fork","changeLeftSidebarTheme","changeLeftSidebarType","toggleRightSidebar","watchChangeLayoutType","watchChangeLayoutWidth","watchChangeLeftSidebarTheme","watchChangeLeftSidebarType","watchToggleRightSidebar","watchShowRightSidebar","watchHideRightSidebar","LayoutSaga","changeBodyAttribute","attribute","value","document","setAttribute","manageBodyClass","cssClass","classList","add","toggle","changeLeftSidebarThemeAction","changeSidebarTypeAction","changeLayoutWidthAction","uuid","assignIdAndParent","parentId","active","initMenuAndItems","watchMenuInit","watchMenuChange","appMenuSaga","getActivatedMenuItemIds","matchingItems","menuItem","assignIds","rootSaga","getState","layoutSaga","sagaMiddleware","createSagaMiddleware","middlewares","ReactDOM","store","initialState","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducers","applyMiddleware","run","sagas","configureStore","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.60e2ab8c.chunk.js","sourcesContent":["/* APP MENU */\nexport const INIT_MENU = 'INIT_MENU';\nexport const INIT_MENU_SUCCESS = 'INIT_MENU_SUCCESS';\nexport const CHANGE_ACTIVE_MENU_FROM_LOCATION = 'CHANGE_ACTIVE_MENU_FROM_LOCATION';\nexport const CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS = 'CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS';\n","/* Layout types and other constants */\n\nexport const LAYOUT_VERTICAL = 'vertical';\nexport const LAYOUT_HORIZONTAL = 'topnav';\nexport const LAYOUT_DETACHED = 'detached';\n\nexport const LAYOUT_WIDTH_FLUID = 'fluid';\nexport const LAYOUT_WIDTH_BOXED = 'boxed';\n\nexport const LEFT_SIDEBAR_THEME_DEFAULT = 'default';\nexport const LEFT_SIDEBAR_THEME_LIGHT = 'light';\nexport const LEFT_SIDEBAR_THEME_DARK = 'dark';\n\nexport const LEFT_SIDEBAR_TYPE_FIXED = 'fixed';\nexport const LEFT_SIDEBAR_TYPE_CONDENSED = 'condensed';\nexport const LEFT_SIDEBAR_TYPE_SCROLLABLE = 'scrollable';\n","// @flow\nimport {\n    CHANGE_LAYOUT,\n    CHANGE_LAYOUT_WIDTH,\n    CHANGE_SIDEBAR_THEME,\n    CHANGE_SIDEBAR_TYPE,\n    TOGGLE_RIGHT_SIDEBAR,\n    SHOW_RIGHT_SIDEBAR,\n    HIDE_RIGHT_SIDEBAR,\n} from './constants';\n\ntype LayoutAction = { type: string, payload?: string | null };\n\nexport const changeLayout = (layout: string): LayoutAction => ({\n    type: CHANGE_LAYOUT,\n    payload: layout,\n});\n\nexport const changeLayoutWidth = (width: string): LayoutAction => ({\n    type: CHANGE_LAYOUT_WIDTH,\n    payload: width,\n});\n\nexport const changeSidebarTheme = (theme: string): LayoutAction => ({\n    type: CHANGE_SIDEBAR_THEME,\n    payload: theme,\n});\n\nexport const changeSidebarType = (sidebarType: string): LayoutAction => ({\n    type: CHANGE_SIDEBAR_TYPE,\n    payload: sidebarType,\n});\n\nexport const toggleRightSidebar = (): LayoutAction => ({\n    type: TOGGLE_RIGHT_SIDEBAR,\n    payload: null,\n});\n\nexport const showRightSidebar = (): LayoutAction => ({\n    type: SHOW_RIGHT_SIDEBAR,\n    payload: null,\n});\n\nexport const hideRightSidebar = (): LayoutAction => ({\n    type: HIDE_RIGHT_SIDEBAR,\n    payload: null,\n});\n","// @flow\nimport {\n    LOGIN_USER,\n    LOGIN_USER_SUCCESS,\n    LOGIN_USER_FAILED,\n    LOGOUT_USER,\n    REGISTER_USER,\n    REGISTER_USER_SUCCESS,\n    REGISTER_USER_FAILED,\n    FORGET_PASSWORD,\n    FORGET_PASSWORD_SUCCESS,\n    FORGET_PASSWORD_FAILED,\n} from './constants';\n\ntype AuthAction = { type: string, payload: {} | string };\n\nexport const loginUser = (username: string, password: string): AuthAction => ({\n    type: LOGIN_USER,\n    payload: { username, password },\n});\n\nexport const loginUserSuccess = (user: string): AuthAction => ({\n    type: LOGIN_USER_SUCCESS,\n    payload: user,\n});\n\nexport const loginUserFailed = (error: string): AuthAction => ({\n    type: LOGIN_USER_FAILED,\n    payload: error,\n});\n\nexport const registerUser = (fullname: string, email: string, password: string): AuthAction => ({\n    type: REGISTER_USER,\n    payload: { fullname, email, password },\n});\n\nexport const registerUserSuccess = (user: {}): AuthAction => ({\n    type: REGISTER_USER_SUCCESS,\n    payload: user,\n});\n\nexport const registerUserFailed = (error: string): AuthAction => ({\n    type: REGISTER_USER_FAILED,\n    payload: error,\n});\n\nexport const logoutUser = (history: any): AuthAction => ({\n    type: LOGOUT_USER,\n    payload: { history },\n});\n\nexport const forgetPassword = (username: string): AuthAction => ({\n    type: FORGET_PASSWORD,\n    payload: { username },\n});\n\nexport const forgetPasswordSuccess = (passwordResetStatus: string): AuthAction => ({\n    type: FORGET_PASSWORD_SUCCESS,\n    payload: passwordResetStatus,\n});\n\nexport const forgetPasswordFailed = (error: string): AuthAction => ({\n    type: FORGET_PASSWORD_FAILED,\n    payload: error,\n});\n","// @flow\nimport jwtDecode from 'jwt-decode';\nimport { Cookies } from 'react-cookie';\n\n/**\n * Checks if user is authenticated\n */\nconst isUserAuthenticated = () => {\n    const user = getLoggedInUser();\n    if (!user) {\n        return false;\n    }\n    const decoded = jwtDecode(user.token);\n    const currentTime = Date.now() / 1000;\n    if (decoded.exp < currentTime) {\n        console.warn('access token expired');\n        return false;\n    } else {\n        return true;\n    }\n};\n\n/**\n * Returns the logged in user\n */\nconst getLoggedInUser = () => {\n    const cookies = new Cookies();\n    const user = cookies.get('user');\n    return user ? (typeof user == 'object' ? user : JSON.parse(user)) : null;\n};\n\nexport { isUserAuthenticated, getLoggedInUser };\n","// @flow\nimport {\n    INIT_MENU,\n    INIT_MENU_SUCCESS,\n    CHANGE_ACTIVE_MENU_FROM_LOCATION,\n    CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS,\n} from './constants';\n\ntype DefaultMenuAction = { type: string, payload: {} };\n\nexport const initMenu = (): DefaultMenuAction => ({\n    type: INIT_MENU,\n    payload: {},\n});\n\nexport const initMenuSuccess = (menuItems: Array<{}>): DefaultMenuAction => ({\n    type: INIT_MENU_SUCCESS,\n    payload: { menuItems },\n});\n\nexport const changeActiveMenuFromLocation = (): DefaultMenuAction => ({\n    type: CHANGE_ACTIVE_MENU_FROM_LOCATION,\n    payload: {},\n});\n\nexport const changeActiveMenuFromLocationSuccess = (activatedMenuItemIds: Array<string>): DefaultMenuAction => ({\n    type: CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS,\n    payload: { activatedMenuItemIds },\n});\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { Route } from 'react-router-dom';\n\nimport { isUserAuthenticated, getLoggedInUser } from '../helpers/authUtils';\n\n// lazy load all the views\n\n// auth\nconst Login = React.lazy(() => import('../pages/auth/Login'));\nconst Logout = React.lazy(() => import('../pages/auth/Logout'));\nconst Register = React.lazy(() => import('../pages/auth/Register'));\nconst ForgetPassword = React.lazy(() => import('../pages/auth/ForgetPassword'));\nconst Confirm = React.lazy(() => import('../pages/auth/Confirm'));\n// dashboard\nconst EcommerceDashboard = React.lazy(() => import('../pages/dashboards/Ecommerce'));\n//const CRMDashboard = React.lazy(() => import('../pages/dashboards/CRM'));\n//const AnalyticsDashboard = React.lazy(() => import('../pages/dashboards/Analytics'));\n//const ProjectDashboard = React.lazy(() => import('../pages/dashboards/Project'));\n// apps\nconst CalendarApp = React.lazy(() => import('../pages/apps/Calendar'));\n//const Projects = React.lazy(() => import('../pages/apps/Projects/'));\nconst ProjectDetail = React.lazy(() => import('../pages/apps/Projects/Detail/'));\n//const ProjectGannt = React.lazy(() => import('../pages/apps/Projects/Gantt/'));\nconst ProjectForm = React.lazy(() => import('../pages/apps/Projects/ProjectForm'));\n// - ecommece pages\nconst EcommerceProducts = React.lazy(() => import('../pages/apps/Ecommerce/Products'));\n//const ProductDetails = React.lazy(() => import('../pages/apps/Ecommerce/ProductDetails'));\nconst Orders = React.lazy(() => import('../pages/apps/Ecommerce/Orders'));\nconst OrderDetails = React.lazy(() => import('../pages/apps/Ecommerce/OrderDetails'));\nconst Customers = React.lazy(() => import('../pages/apps/Ecommerce/Customers'));\n//const Cart = React.lazy(() => import('../pages/apps/Ecommerce/Cart'));\n//const Checkout = React.lazy(() => import('../pages/apps/Ecommerce/Checkout/'));\n//const Sellers = React.lazy(() => import('../pages/apps/Ecommerce/Sellers'));\n// chat\nconst ChatApp = React.lazy(() => import('../pages/apps/Chat/'));\n// social\n//const SocialFeed = React.lazy(() => import('../pages/apps/SocialFeed/'));\n// tasks\n//const TaskList = React.lazy(() => import('../pages/apps/Tasks/List/'));\nconst Kanban = React.lazy(() => import('../pages/apps/Tasks/Board/'));\n\n// - email\n//const Inbox = React.lazy(() => import('../pages/apps/Email/Inbox'));\nconst EmailDetail = React.lazy(() => import('../pages/apps/Email/Detail'));\n\n// pages\nconst Starter = React.lazy(() => import('../pages/Starter'));\nconst Profile = React.lazy(() => import('../pages/profile'));\nconst ErrorPageNotFound = React.lazy(() => import('../pages/error/PageNotFound'));\nconst ServerError = React.lazy(() => import('../pages/error/ServerError'));\n\n// - other\n//const Invoice = React.lazy(() => import('../pages/other/Invoice'));\nconst FAQ = React.lazy(() => import('../pages/other/FAQ'));\nconst Pricing = React.lazy(() => import('../pages/other/Pricing'));\n//const Timeline = React.lazy(() => import('../pages/other/Timeline'));\n\n// uikit\nconst Accordions = React.lazy(() => import('../pages/uikit/Accordions'));\nconst Alerts = React.lazy(() => import('../pages/uikit/Alerts'));\nconst Badges = React.lazy(() => import('../pages/uikit/Badges'));\nconst Buttons = React.lazy(() => import('../pages/uikit/Buttons'));\nconst Cards = React.lazy(() => import('../pages/uikit/Cards'));\nconst Carousel = React.lazy(() => import('../pages/uikit/Carousel'));\nconst Dropdowns = React.lazy(() => import('../pages/uikit/Dropdowns'));\nconst ListGroups = React.lazy(() => import('../pages/uikit/ListGroups'));\nconst Modals = React.lazy(() => import('../pages/uikit/Modals'));\nconst Tabs = React.lazy(() => import('../pages/uikit/Tabs'));\nconst Toasts = React.lazy(() => import('../pages/uikit/Toasts'));\nconst Grid = React.lazy(() => import('../pages/uikit/Grid'));\nconst Popovers = React.lazy(() => import('../pages/uikit/Popovers'));\nconst Progress = React.lazy(() => import('../pages/uikit/Progress'));\nconst Ribbons = React.lazy(() => import('../pages/uikit/Ribbons'));\nconst Tooltips = React.lazy(() => import('../pages/uikit/Tooltips'));\nconst Typography = React.lazy(() => import('../pages/uikit/Typography'));\nconst Spinners = React.lazy(() => import('../pages/uikit/Spinners'));\nconst Widgets = React.lazy(() => import('../pages/uikit/Widgets'));\nconst DragDrop = React.lazy(() => import('../pages/uikit/DragDrop'));\nconst RangeSliders = React.lazy(() => import('../pages/uikit/RangeSliders'));\nconst Ratings = React.lazy(() => import('../pages/uikit/Ratings'));\n\nconst MDIIcons = React.lazy(() => import('../pages/uikit/MDIIcons'));\nconst Dripicons = React.lazy(() => import('../pages/uikit/Dripicons'));\nconst Unicons = React.lazy(() => import('../pages/uikit/Unicons'));\n// forms\nconst BasicForms = React.lazy(() => import('../pages/forms/Basic'));\nconst FormValidation = React.lazy(() => import('../pages/forms/Validation'));\nconst FormAdvanced = React.lazy(() => import('../pages/forms/Advanced'));\nconst FormWizard = React.lazy(() => import('../pages/forms/Wizard'));\nconst FileUpload = React.lazy(() => import('../pages/forms/FileUpload'));\nconst Editors = React.lazy(() => import('../pages/forms/Editors'));\n// charts\nconst ApexChart = React.lazy(() => import('../pages/charts/Apex'));\nconst BriteChart = React.lazy(() => import('../pages/charts/Brite'));\nconst ChartJs = React.lazy(() => import('../pages/charts/ChartJs'));\n// tables\nconst BasicTables = React.lazy(() => import('../pages/tables/Basic'));\nconst AdvancedTables = React.lazy(() => import('../pages/tables/Advanced'));\n// maps\nconst GoogleMaps = React.lazy(() => import('../pages/GoogleMaps'));\n\n// handle auth and authorization\n\nconst PrivateRoute = ({ component: Component, roles, ...rest }) => (\n    <Route\n        {...rest}\n        render={props => {\n            if (!isUserAuthenticated()) {\n                // not logged in so redirect to login page with the return url\n                return <Redirect to={{ pathname: '/account/login', state: { from: props.location } }} />;\n            }\n\n            const loggedInUser = getLoggedInUser();\n            // check if route is restricted by role\n            if (roles && roles.indexOf(loggedInUser.role) === -1) {\n                // role not authorised so redirect to home page\n                return <Redirect to={{ pathname: '/' }} />;\n            }\n\n            // authorised so return component\n            return <Component {...props} />;\n        }}\n    />\n);\n\n// root routes\nconst rootRoute = {\n    path: '/',\n    exact: true,\n    component: () => <Redirect to=\"/dashboard/ecommerce\" />,\n    route: PrivateRoute,\n};\n\n// dashboards\nconst dashboardRoutes = {\n    path: '/dashboard',\n    name: 'Dashboards',\n    icon: 'uil-home-alt',\n    header: 'Navigation',\n    children: [\n        /*{\n            path: '/dashboard/analytics',\n            name: 'Analytics',\n            component: AnalyticsDashboard,\n            route: PrivateRoute,\n        },\n        {\n            path: '/dashboard/crm',\n            name: 'CRM',\n            component: CRMDashboard,\n            route: PrivateRoute,\n        },*/\n        {\n            path: '/dashboard/ecommerce',\n            name: 'Ecommerce',\n            badge: {\n                variant: 'success',\n                text: '3',\n            },\n            component: EcommerceDashboard,\n            route: PrivateRoute,\n        },\n        /*{\n            path: '/dashboard/project',\n            name: 'Project',\n            component: ProjectDashboard,\n            route: PrivateRoute,\n        },*/\n    ],\n};\n\nconst calendarAppRoutes = {\n    path: '/apps/calendar',\n    name: 'Calendar',\n    route: PrivateRoute,\n    roles: ['Admin'],\n    icon: 'uil-calender',\n    component: CalendarApp,\n    header: 'Apps',\n};\n\nconst chatAppRoutes = {\n    path: '/apps/chat',\n    name: 'Chat',\n    route: PrivateRoute,\n    roles: ['Admin'],\n    icon: 'uil-comments-alt',\n    component: ChatApp,\n};\n\nconst ecommerceAppRoutes = {\n    path: '/apps/ecommerce',\n    name: 'eCommerce',\n    route: PrivateRoute,\n    roles: ['Admin'],\n    icon: 'uil-store',\n    children: [\n        {\n            path: '/apps/ecommerce/products',\n            name: 'Products',\n            component: EcommerceProducts,\n            route: PrivateRoute,\n        },\n        /*{\n            path: '/apps/ecommerce/details',\n            name: 'Product Details',\n            component: ProductDetails,\n            route: PrivateRoute,\n        },*/\n        {\n            path: '/apps/ecommerce/orders',\n            name: 'Orders',\n            component: Orders,\n            route: PrivateRoute,\n        },\n        {\n            path: '/apps/ecommerce/order/details',\n            name: 'Order Details',\n            component: OrderDetails,\n            route: PrivateRoute,\n        },\n        {\n            path: '/apps/ecommerce/customers',\n            name: 'Customers',\n            component: Customers,\n            route: PrivateRoute,\n        },\n        /*{\n            path: '/apps/ecommerce/shopping-cart',\n            name: 'Shopping Cart',\n            component: Cart,\n            route: PrivateRoute,\n        },\n        {\n            path: '/apps/ecommerce/checkout',\n            name: 'Checkout',\n            component: Checkout,\n            route: PrivateRoute,\n        },\n        {\n            path: '/apps/ecommerce/sellers',\n            name: 'Sellers',\n            component: Sellers,\n            route: PrivateRoute,\n        },*/\n    ],\n};\n\nconst emailAppRoutes = {\n    path: '/apps/email',\n    name: 'Email',\n    route: PrivateRoute,\n    roles: ['Admin'],\n    icon: 'uil-envelope',\n    children: [\n        /*{\n            path: '/apps/email/inbox',\n            name: 'Inbox',\n            component: Inbox,\n            route: PrivateRoute,\n        },*/\n        {\n            path: '/apps/email/details',\n            name: 'Email Details',\n            component: EmailDetail,\n            route: PrivateRoute,\n        },\n    ],\n};\n\nconst projectAppRoutes = {\n    path: '/apps/projects',\n    name: 'Projects',\n    route: PrivateRoute,\n    roles: ['Admin'],\n    icon: 'uil-briefcase',\n\n    children: [\n        /*{\n            path: '/apps/projects/list',\n            name: 'List',\n            component: Projects,\n            route: PrivateRoute,\n        },*/\n        {\n            path: '/apps/projects/:id/details',\n            name: 'Detail',\n            component: ProjectDetail,\n            route: PrivateRoute,\n        },\n        /*{\n            path: '/apps/projects/gantt',\n            name: 'Gantt',\n            component: ProjectGannt,\n            route: PrivateRoute,\n        },*/\n        {\n            path: '/apps/projects/new',\n            name: 'Create Project',\n            component: ProjectForm,\n            route: PrivateRoute,\n        },\n    ],\n};\n\n/*const socialAppRoutes = {\n    path: '/apps/social',\n    name: 'Social Feed',\n    route: PrivateRoute,\n    roles: ['Admin'],\n    icon: 'uil-rss',\n    component: SocialFeed,\n};*/\n\nconst taskAppRoutes = {\n    path: '/apps/tasks',\n    name: 'Tasks',\n    route: PrivateRoute,\n    roles: ['Admin'],\n    icon: 'uil-clipboard-alt',\n    children: [\n        /*{\n            path: '/apps/tasks/list',\n            name: 'Task List',\n            component: TaskList,\n            route: PrivateRoute,\n        },*/\n        {\n            path: '/apps/tasks/kanban',\n            name: 'Kanban',\n            component: Kanban,\n            route: PrivateRoute,\n        },\n    ],\n};\n\nconst appRoutes = [\n    calendarAppRoutes,\n    chatAppRoutes,\n    ecommerceAppRoutes,\n    emailAppRoutes,\n    projectAppRoutes,\n    //socialAppRoutes,\n    taskAppRoutes,\n];\n\n// pages\nconst pageRoutes = {\n    path: '/pages',\n    name: 'Pages',\n    icon: 'uil-copy-alt',\n    header: 'Custom',\n    children: [\n        {\n            path: '/pages/starter',\n            name: 'Starter',\n            component: Starter,\n            route: PrivateRoute,\n        },\n        {\n            path: '/pages/profile',\n            name: 'Profile',\n            component: Profile,\n            route: PrivateRoute,\n        },\n        /*{\n            path: '/pages/invoice',\n            name: 'Invoice',\n            component: Invoice,\n            route: PrivateRoute,\n        },*/\n        {\n            path: '/pages/faq',\n            name: 'FAQ',\n            component: FAQ,\n            route: PrivateRoute,\n        },\n        {\n            path: '/pages/pricing',\n            name: 'Pricing',\n            component: Pricing,\n            route: PrivateRoute,\n        },\n        {\n            path: '/pages/error-404',\n            name: 'Error - 404',\n            component: ErrorPageNotFound,\n            route: PrivateRoute,\n        },\n        {\n            path: '/pages/error-500',\n            name: 'Error - 500',\n            component: ServerError,\n            route: PrivateRoute,\n        },\n        /*{\n            path: '/pages/timeline',\n            name: 'Timeline',\n            component: Timeline,\n            route: PrivateRoute,\n        },*/\n    ],\n};\n\n// auth\nconst authRoutes = {\n    path: '/account',\n    name: 'Auth',\n    children: [\n        {\n            path: '/account/login',\n            name: 'Login',\n            component: Login,\n            route: Route,\n        },\n        {\n            path: '/account/logout',\n            name: 'Logout',\n            component: Logout,\n            route: Route,\n        },\n        {\n            path: '/account/register',\n            name: 'Register',\n            component: Register,\n            route: Route,\n        },\n        {\n            path: '/account/confirm',\n            name: 'Confirm',\n            component: Confirm,\n            route: Route,\n        },\n        {\n            path: '/account/forget-password',\n            name: 'Forget Password',\n            component: ForgetPassword,\n            route: Route,\n        },\n    ],\n};\n\n// ui\nconst uiRoutes = {\n    path: '/ui',\n    name: 'Components',\n    icon: 'uil-package',\n    header: 'UI Elements',\n    children: [\n        {\n            path: '/ui/base',\n            name: 'Base UI',\n            children: [\n                {\n                    path: '/ui/accordions',\n                    name: 'Accordions',\n                    component: Accordions,\n                    route: PrivateRoute,\n                },\n                {\n                    path: '/ui/alerts',\n                    name: 'Alerts',\n                    component: Alerts,\n                    route: PrivateRoute,\n                },\n                {\n                    path: '/ui/badges',\n                    name: 'Badges',\n                    component: Badges,\n                    route: PrivateRoute,\n                },\n                {\n                    path: '/ui/buttons',\n                    name: 'Buttons',\n                    component: Buttons,\n                    route: PrivateRoute,\n                },\n                {\n                    path: '/ui/cards',\n                    name: 'Cards',\n                    component: Cards,\n                    route: PrivateRoute,\n                },\n                {\n                    path: '/ui/carousel',\n                    name: 'Carousel',\n                    component: Carousel,\n                    route: PrivateRoute,\n                },\n                {\n                    path: '/ui/dropdowns',\n                    name: 'Dropdowns',\n                    component: Dropdowns,\n                    route: PrivateRoute,\n                },\n                {\n                    path: '/ui/grid',\n                    name: 'Grid',\n                    component: Grid,\n                    route: PrivateRoute,\n                },\n                {\n                    path: '/ui/listgroups',\n                    name: 'List Groups',\n                    component: ListGroups,\n                    route: PrivateRoute,\n                },\n                {\n                    path: '/ui/modals',\n                    name: 'Modals',\n                    component: Modals,\n                    route: PrivateRoute,\n                },\n                {\n                    path: '/ui/popovers',\n                    name: 'Popovers',\n                    component: Popovers,\n                    route: PrivateRoute,\n                },\n                {\n                    path: '/ui/progress',\n                    name: 'Progress',\n                    component: Progress,\n                    route: PrivateRoute,\n                },\n                {\n                    path: '/ui/ribbons',\n                    name: 'Ribbons',\n                    component: Ribbons,\n                    route: PrivateRoute,\n                },\n                {\n                    path: '/ui/spinners',\n                    name: 'Spinners',\n                    component: Spinners,\n                    route: PrivateRoute,\n                },\n                {\n                    path: '/ui/tabs',\n                    name: 'Tabs',\n                    component: Tabs,\n                    route: PrivateRoute,\n                },\n                {\n                    path: '/ui/toasts',\n                    name: 'Toasts',\n                    component: Toasts,\n                    route: PrivateRoute,\n                },\n                {\n                    path: '/ui/tooltips',\n                    name: 'Tooltips',\n                    component: Tooltips,\n                    route: PrivateRoute,\n                },\n                {\n                    path: '/ui/typography',\n                    name: 'Typography',\n                    component: Typography,\n                    route: PrivateRoute,\n                },\n                {\n                    path: '/ui/widgets',\n                    name: 'Widgets',\n                    component: Widgets,\n                    route: PrivateRoute,\n                },\n            ],\n        },\n        {\n            path: '/ui/extended',\n            name: 'Extended UI',\n            children: [\n                {\n                    path: '/ui/dragdrop',\n                    name: 'Drag and Drop',\n                    component: DragDrop,\n                    route: PrivateRoute,\n                },\n                {\n                    path: '/ui/rangesliders',\n                    name: 'Range Sliders',\n                    component: RangeSliders,\n                    route: PrivateRoute,\n                },\n                {\n                    path: '/ui/ratings',\n                    name: 'Ratings',\n                    component: Ratings,\n                    route: PrivateRoute,\n                },\n            ],\n        },\n        {\n            path: '/ui/icons',\n            name: 'Icons',\n            children: [\n                {\n                    path: '/ui/icons/dripicons',\n                    name: 'Dripicons',\n                    component: Dripicons,\n                    route: PrivateRoute,\n                },\n                {\n                    path: '/ui/icons/mdi',\n                    name: 'Material Design',\n                    component: MDIIcons,\n                    route: PrivateRoute,\n                },\n                {\n                    path: '/ui/icons/unicons',\n                    name: 'Unicons',\n                    component: Unicons,\n                    route: Unicons,\n                },\n            ],\n        },\n        {\n            path: '/ui/forms',\n            name: 'Forms',\n            children: [\n                {\n                    path: '/ui/forms/basic',\n                    name: 'Basic Elements',\n                    component: BasicForms,\n                    route: PrivateRoute,\n                },\n                {\n                    path: '/ui/forms/advanced',\n                    name: 'Form Advanced',\n                    component: FormAdvanced,\n                    route: PrivateRoute,\n                },\n                {\n                    path: '/ui/forms/validation',\n                    name: 'Form Validation',\n                    component: FormValidation,\n                    route: PrivateRoute,\n                },\n                {\n                    path: '/ui/forms/wizard',\n                    name: 'Form Wizard',\n                    component: FormWizard,\n                    route: PrivateRoute,\n                },\n                {\n                    path: '/ui/forms/upload',\n                    name: 'File Upload',\n                    component: FileUpload,\n                    route: PrivateRoute,\n                },\n                {\n                    path: '/ui/forms/editors',\n                    name: 'Editors',\n                    component: Editors,\n                    route: PrivateRoute,\n                },\n            ],\n        },\n        {\n            path: '/ui/charts',\n            name: 'Charts',\n            children: [\n                {\n                    path: '/ui/charts/apex',\n                    name: 'Apex',\n                    component: ApexChart,\n                    route: PrivateRoute,\n                },\n                {\n                    path: '/ui/charts/brite',\n                    name: 'Brite',\n                    component: BriteChart,\n                    route: PrivateRoute,\n                },\n                {\n                    path: '/ui/charts/chartjs',\n                    name: 'Chartjs',\n                    component: ChartJs,\n                    route: PrivateRoute,\n                },\n            ],\n        },\n        {\n            path: '/ui/tables',\n            name: 'Tables',\n            children: [\n                {\n                    path: '/ui/tables/basic',\n                    name: 'Basic',\n                    component: BasicTables,\n                    route: PrivateRoute,\n                },\n                {\n                    path: '/ui/tables/advanced',\n                    name: 'Advanced',\n                    component: AdvancedTables,\n                    route: PrivateRoute,\n                },\n            ],\n        },\n        {\n            path: '/ui/googlemaps',\n            name: 'Google Maps',\n            component: GoogleMaps,\n            route: PrivateRoute,\n        },\n    ],\n};\n\n// flatten the list of all nested routes\nconst flattenRoutes = routes => {\n    let flatRoutes = [];\n\n    routes = routes || [];\n    routes.forEach(item => {\n        flatRoutes.push(item);\n\n        if (typeof item.children !== 'undefined') {\n            flatRoutes = [...flatRoutes, ...flattenRoutes(item.children)];\n        }\n    });\n    return flatRoutes;\n};\n\n// All routes\nconst allRoutes = [rootRoute, dashboardRoutes, ...appRoutes, authRoutes, pageRoutes, uiRoutes];\n\nconst authProtectedRoutes = [dashboardRoutes, ...appRoutes, pageRoutes, uiRoutes];\n\nconst allFlattenRoutes = flattenRoutes(allRoutes);\n\nexport { allRoutes, authProtectedRoutes, allFlattenRoutes };\n","import React, { Component } from 'react';\r\nimport { BrowserRouter, Switch } from 'react-router-dom';\r\nimport Loadable from 'react-loadable';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { allFlattenRoutes as routes } from './index';\r\nimport { isUserAuthenticated } from '../helpers/authUtils';\r\nimport * as layoutConstants from '../constants/layout';\r\n\r\n// Lazy loading and code splitting -\r\n// Derieved idea from https://blog.logrocket.com/lazy-loading-components-in-react-16-6-6cea535c0b52\r\nconst loading = () => <div></div>;\r\n\r\n// All layouts/containers\r\nconst AuthLayout = Loadable({\r\n    loader: () => import('../layouts/Auth'),\r\n    render(loaded, props) {\r\n        let Component = loaded.default;\r\n        return <Component {...props} />;\r\n    },\r\n    loading,\r\n});\r\n\r\nconst VerticalLayout = Loadable({\r\n    loader: () => import('../layouts/Vertical'),\r\n    render(loaded, props) {\r\n        let Component = loaded.default;\r\n        return <Component {...props} />;\r\n    },\r\n    loading,\r\n});\r\n\r\nconst HorizontalLayout = Loadable({\r\n    loader: () => import('../layouts/Horizontal'),\r\n    render(loaded, props) {\r\n        let Component = loaded.default;\r\n        return <Component {...props} />;\r\n    },\r\n    loading,\r\n});\r\n\r\nconst DetachedLayout = Loadable({\r\n    loader: () => import('../layouts/Detached'),\r\n    render(loaded, props) {\r\n        let Component = loaded.default;\r\n        return <Component {...props} />;\r\n    },\r\n    loading,\r\n});\r\n\r\nclass Routes extends Component {\r\n    // returns the layout\r\n    getLayout = () => {\r\n        if (!isUserAuthenticated()) return AuthLayout;\r\n\r\n        let layoutCls = VerticalLayout;\r\n\r\n        switch (this.props.layout.layoutType) {\r\n            case layoutConstants.LAYOUT_HORIZONTAL:\r\n                layoutCls = HorizontalLayout;\r\n                break;\r\n            case layoutConstants.LAYOUT_DETACHED:\r\n                layoutCls = DetachedLayout;\r\n                break;\r\n            default:\r\n                layoutCls = VerticalLayout;\r\n                break;\r\n        }\r\n        return layoutCls;\r\n    };\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        let oldLayout = { ...this.props.layout };\r\n        delete oldLayout.showRightSidebar;\r\n        let newLayout = { ...nextProps.layout };\r\n        delete newLayout.showRightSidebar;\r\n        return (\r\n            JSON.stringify(oldLayout) !== JSON.stringify(newLayout) ||\r\n            JSON.stringify(this.props.user) !== JSON.stringify(nextProps.user)\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const Layout = this.getLayout();\r\n        // rendering the router with layout\r\n        return (\r\n            <BrowserRouter>\r\n                <Layout {...this.props}>\r\n                    <Switch>\r\n                        {routes.map((route, index) => {\r\n                            return (\r\n                                !route.children && (\r\n                                    <route.route\r\n                                        key={index}\r\n                                        path={route.path}\r\n                                        roles={route.roles}\r\n                                        exact={route.exact}\r\n                                        component={route.component}></route.route>\r\n                                )\r\n                            );\r\n                        })}\r\n                    </Switch>\r\n                </Layout>\r\n            </BrowserRouter>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        layout: state.Layout,\r\n        user: state.Auth.user,\r\n    };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    null\r\n)(Routes);\r\n","export function configureFakeBackend() {\n    let users = [{ id: 1, username: 'test', password: 'test', firstName: 'Test', lastName: 'User', role: 'Admin' }];\n    let realFetch = window.fetch;\n    window.fetch = function(url, opts) {\n        return new Promise((resolve, reject) => {\n            // wrap in timeout to simulate server api call\n            setTimeout(() => {\n                // authenticate\n                if (url.endsWith('/users/authenticate') && opts.method === 'POST') {\n                    // get parameters from post request\n                    let params = JSON.parse(opts.body);\n\n                    // find if any user matches login credentials\n                    let filteredUsers = users.filter(user => {\n                        return user.username === params.username && user.password === params.password;\n                    });\n\n                    if (filteredUsers.length) {\n                        // if login details are valid return user details and fake jwt token\n                        let user = filteredUsers[0];\n                        let responseJson = {\n                            id: user.id,\n                            username: user.username,\n                            firstName: user.firstName,\n                            lastName: user.lastName,\n                            role: 'Admin',\n                            token:\n                                'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJjb2RlcnRoZW1lcyIsImlhdCI6MTU4NzM1NjY0OSwiZXhwIjoxOTAyODg5NDQ5LCJhdWQiOiJjb2RlcnRoZW1lcy5jb20iLCJzdWIiOiJzdXBwb3J0QGNvZGVydGhlbWVzLmNvbSIsImxhc3ROYW1lIjoiVGVzdCIsIkVtYWlsIjoic3VwcG9ydEBjb2RlcnRoZW1lcy5jb20iLCJSb2xlIjoiQWRtaW4iLCJmaXJzdE5hbWUiOiJIeXBlciJ9.P27f7JNBF-vOaJFpkn-upfEh3zSprYfyhTOYhijykdI',\n                        };\n                        resolve({ ok: true, json: () => responseJson });\n                    } else {\n                        // else return error\n                        reject('Username or password is incorrect');\n                    }\n                    return;\n                }\n\n                // register\n                if (url.endsWith('/users/register') && opts.method === 'POST') {\n                    // get parameters from post request\n                    let params = JSON.parse(opts.body);\n\n                    // add new users\n                    let { firstName, lastName } = params.fullname.split(' ');\n                    let newUser = {\n                        id: users.length + 1,\n                        username: firstName,\n                        password: params.password,\n                        firstName: firstName,\n                        lastName: lastName,\n                        role: 'Admin',\n                    };\n                    users.push({ newUser });\n\n                    let responseJson = {\n                        id: newUser.id,\n                        username: newUser.username,\n                        firstName: newUser.firstName,\n                        lastName: newUser.lastName,\n                        role: newUser.role,\n                        token:\n                            'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJjb2RlcnRoZW1lcyIsImlhdCI6MTU4NzM1NjY0OSwiZXhwIjoxOTAyODg5NDQ5LCJhdWQiOiJjb2RlcnRoZW1lcy5jb20iLCJzdWIiOiJzdXBwb3J0QGNvZGVydGhlbWVzLmNvbSIsImxhc3ROYW1lIjoiVGVzdCIsIkVtYWlsIjoic3VwcG9ydEBjb2RlcnRoZW1lcy5jb20iLCJSb2xlIjoiQWRtaW4iLCJmaXJzdE5hbWUiOiJIeXBlciJ9.P27f7JNBF-vOaJFpkn-upfEh3zSprYfyhTOYhijykdI',\n                    };\n                    resolve({ ok: true, json: () => responseJson });\n                    return;\n                }\n\n                // forget password\n                if (url.endsWith('/users/password-reset') && opts.method === 'POST') {\n                    // get parameters from post request\n                    let params = JSON.parse(opts.body);\n\n                    // find if any user matches login credentials\n                    let filteredUsers = users.filter(user => {\n                        return user.username === params.username;\n                    });\n\n                    if (filteredUsers.length) {\n                        let responseJson = {\n                            message: \"We've sent you a link to reset password to your registered email.\",\n                        };\n                        resolve({ ok: true, json: () => responseJson });\n                    } else {\n                        // else return error\n                        reject('Sorry, we could not find any registered user with entered username');\n                    }\n                    return;\n                }\n\n                // get users\n                if (url.endsWith('/users') && opts.method === 'GET') {\n                    // check for fake auth token in header and return users if valid, this security is implemented server side in a real application\n                    if (\n                        opts.headers &&\n                        opts.headers.Authorization ===\n                            'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJjb2RlcnRoZW1lcyIsImlhdCI6MTU4NzM1NjY0OSwiZXhwIjoxOTAyODg5NDQ5LCJhdWQiOiJjb2RlcnRoZW1lcy5jb20iLCJzdWIiOiJzdXBwb3J0QGNvZGVydGhlbWVzLmNvbSIsImxhc3ROYW1lIjoiVGVzdCIsIkVtYWlsIjoic3VwcG9ydEBjb2RlcnRoZW1lcy5jb20iLCJSb2xlIjoiQWRtaW4iLCJmaXJzdE5hbWUiOiJIeXBlciJ9.P27f7JNBF-vOaJFpkn-upfEh3zSprYfyhTOYhijykdI'\n                    ) {\n                        resolve({ ok: true, json: () => users });\n                    } else {\n                        // return 401 not authorised if token is null or invalid\n                        reject('Unauthorised');\n                    }\n\n                    return;\n                }\n\n                // pass through any requests not handled above\n                realFetch(url, opts).then(response => resolve(response));\n            }, 500);\n        });\n    };\n}\n","// @flow\nimport React, { Component } from 'react';\nimport Routes from './routes/Routes';\n\n// setup fake backend\nimport { configureFakeBackend } from './helpers';\n\n// Themes\nimport './assets/scss/Saas.scss';\n\n// For Dark import Saas-Dark.scss\n// import './assets/scss/Saas-Dark.scss';\n\n// For Modern import Modern.scss\n// import './assets/scss/Modern.scss';\n// For modern dakr import Modern-Dark.scss\n// import './assets/scss/Modern-Dark.scss';\n\n// For Creative demo import Modern.scss\n// import './assets/scss/Creative.scss';\n// For Creative dark demo import Modern.scss\n// import './assets/scss/Creative-Dark.scss';\n\n// configure fake backend\nconfigureFakeBackend();\n\ntype AppProps = {};\n\n/**\n * Main app component\n */\nclass App extends Component<AppProps> {\n    render() {\n        return <Routes></Routes>;\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit http://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log('No internet connection found. App is running in offline mode.');\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","// @flow\nimport {\n    CHANGE_LAYOUT,\n    CHANGE_LAYOUT_WIDTH,\n    CHANGE_SIDEBAR_THEME,\n    CHANGE_SIDEBAR_TYPE,\n    TOGGLE_RIGHT_SIDEBAR,\n    SHOW_RIGHT_SIDEBAR,\n    HIDE_RIGHT_SIDEBAR,\n} from './constants';\n\nimport * as layoutConstants from '../../constants/layout';\n\nconst INIT_STATE = {\n    layoutType: layoutConstants.LAYOUT_VERTICAL,\n    layoutWidth: layoutConstants.LAYOUT_WIDTH_FLUID,\n    leftSideBarTheme: layoutConstants.LEFT_SIDEBAR_THEME_DEFAULT,\n    leftSideBarType: layoutConstants.LEFT_SIDEBAR_TYPE_FIXED,\n    showRightSidebar: false,\n};\n\ntype LayoutAction = { type: string, payload?: string | null };\ntype State = { showRightSidebar?: boolean, +value?: boolean };\n\nconst Layout = (state: State = INIT_STATE, action: LayoutAction) => {\n    switch (action.type) {\n        case CHANGE_LAYOUT:\n            return {\n                ...state,\n                layoutType: action.payload,\n            };\n        case CHANGE_LAYOUT_WIDTH:\n            return {\n                ...state,\n                layoutWidth: action.payload,\n            };\n        case CHANGE_SIDEBAR_THEME:\n            return {\n                ...state,\n                leftSideBarTheme: action.payload,\n            };\n        case CHANGE_SIDEBAR_TYPE:\n            return {\n                ...state,\n                leftSideBarType: action.payload,\n            };\n        case TOGGLE_RIGHT_SIDEBAR:\n            return {\n                ...state,\n                showRightSidebar: !state.showRightSidebar,\n            };\n        case SHOW_RIGHT_SIDEBAR:\n            return {\n                ...state,\n                showRightSidebar: true,\n            };\n        case HIDE_RIGHT_SIDEBAR:\n            return {\n                ...state,\n                showRightSidebar: false,\n            };\n        default:\n            return state;\n    }\n};\n\nexport default Layout;\n","// @flow\nimport {\n    LOGIN_USER,\n    LOGIN_USER_SUCCESS,\n    LOGIN_USER_FAILED,\n    LOGOUT_USER,\n    REGISTER_USER,\n    REGISTER_USER_SUCCESS,\n    REGISTER_USER_FAILED,\n    FORGET_PASSWORD,\n    FORGET_PASSWORD_SUCCESS,\n    FORGET_PASSWORD_FAILED,\n} from './constants';\n\nimport { getLoggedInUser } from '../../helpers/authUtils';\n\nconst INIT_STATE = {\n    user: getLoggedInUser(),\n    loading: false,\n};\n\ntype AuthAction = { type: string, payload: {} | string };\ntype State = { user?: {} | null, loading?: boolean, +value?: boolean };\n\nconst Auth = (state: State = INIT_STATE, action: AuthAction) => {\n    switch (action.type) {\n        case LOGIN_USER:\n            return { ...state, loading: true };\n        case LOGIN_USER_SUCCESS:\n            return { ...state, user: action.payload, loading: false, error: null };\n        case LOGIN_USER_FAILED:\n            return { ...state, error: action.payload, loading: false };\n        case REGISTER_USER:\n            return { ...state, loading: true };\n        case REGISTER_USER_SUCCESS:\n            return { ...state, user: action.payload, loading: false, error: null };\n        case REGISTER_USER_FAILED:\n            return { ...state, error: action.payload, loading: false };\n        case LOGOUT_USER:\n            return { ...state, user: null };\n        case FORGET_PASSWORD:\n            return { ...state, loading: true };\n        case FORGET_PASSWORD_SUCCESS:\n            return { ...state, passwordResetStatus: action.payload, loading: false, error: null };\n        case FORGET_PASSWORD_FAILED:\n            return { ...state, error: action.payload, loading: false };\n        default:\n            return { ...state };\n    }\n};\n\nexport default Auth;\n","// @flow\nimport {\n    INIT_MENU,\n    INIT_MENU_SUCCESS,\n    CHANGE_ACTIVE_MENU_FROM_LOCATION,\n    CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS,\n} from './constants';\n\ntype Action = { type: string, payload: {} };\ntype State = { +value: boolean };\n\nconst AppMenu = (state: State = {}, action: Action) => {\n    switch (action.type) {\n        case INIT_MENU:\n            return action.payload;\n        case INIT_MENU_SUCCESS:\n            return { ...state, ...action.payload };\n        case CHANGE_ACTIVE_MENU_FROM_LOCATION:\n            return { ...state };\n        case CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS:\n            return { ...state, ...action.payload };\n        default:\n            return state;\n    }\n};\n\nexport default AppMenu;\n","// @flow\n\nimport { combineReducers } from 'redux';\nimport Layout from './layout/reducers';\nimport Auth from './auth/reducers';\nimport AppMenu from './appMenu/reducers';\n\nexport default combineReducers({\n    Auth,\n    AppMenu,\n    Layout,\n});\n","/**\n * Fetch data from given url\n * @param {*} url\n * @param {*} options\n */\nconst fetchJSON = (url, options = {}) => {\n    return fetch(url, options)\n        .then(response => {\n            if (!response.status === 200) {\n                throw response.json();\n            }\n            return response.json();\n        })\n        .then(json => {\n            return json;\n        })\n        .catch(error => {\n            throw error;\n        });\n};\n\nexport { fetchJSON };\n","// @flow\r\nimport { Cookies } from 'react-cookie';\r\nimport { all, call, fork, put, takeEvery } from 'redux-saga/effects';\r\n\r\nimport { fetchJSON } from '../../helpers/api';\r\n\r\nimport { LOGIN_USER, LOGOUT_USER, REGISTER_USER, FORGET_PASSWORD } from './constants';\r\n\r\nimport {\r\n    loginUserSuccess,\r\n    loginUserFailed,\r\n    registerUserSuccess,\r\n    registerUserFailed,\r\n    forgetPasswordSuccess,\r\n    forgetPasswordFailed,\r\n} from './actions';\r\n\r\n/**\r\n * Sets the session\r\n * @param {*} user\r\n */\r\nconst setSession = user => {\r\n    let cookies = new Cookies();\r\n    if (user) cookies.set('user', JSON.stringify(user), { path: '/' });\r\n    else cookies.remove('user', { path: '/' });\r\n};\r\n/**\r\n * Login the user\r\n * @param {*} payload - username and password\r\n */\r\nfunction* login({ payload: { username, password } }) {\r\n    const options = {\r\n        body: JSON.stringify({ username, password }),\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    try {\r\n        const response = yield call(fetchJSON, '/users/authenticate', options);\r\n        setSession(response);\r\n        yield put(loginUserSuccess(response));\r\n    } catch (error) {\r\n        let message;\r\n        switch (error.status) {\r\n            case 500:\r\n                message = 'Internal Server Error';\r\n                break;\r\n            case 401:\r\n                message = 'Invalid credentials';\r\n                break;\r\n            default:\r\n                message = error;\r\n        }\r\n        yield put(loginUserFailed(message));\r\n        setSession(null);\r\n    }\r\n}\r\n\r\n/**\r\n * Logout the user\r\n * @param {*} param0\r\n */\r\nfunction* logout({ payload: { history } }) {\r\n    try {\r\n        setSession(null);\r\n        yield call(() => {\r\n            history.push('/account/login');\r\n        });\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Register the user\r\n */\r\nfunction* register({ payload: { fullname, email, password } }) {\r\n    const options = {\r\n        body: JSON.stringify({ fullname, email, password }),\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    try {\r\n        const response = yield call(fetchJSON, '/users/register', options);\r\n        yield put(registerUserSuccess(response));\r\n    } catch (error) {\r\n        let message;\r\n        switch (error.status) {\r\n            case 500:\r\n                message = 'Internal Server Error';\r\n                break;\r\n            case 401:\r\n                message = 'Invalid credentials';\r\n                break;\r\n            default:\r\n                message = error;\r\n        }\r\n        yield put(registerUserFailed(message));\r\n    }\r\n}\r\n\r\n/**\r\n * forget password\r\n */\r\nfunction* forgetPassword({ payload: { username } }) {\r\n    const options = {\r\n        body: JSON.stringify({ username }),\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    try {\r\n        const response = yield call(fetchJSON, '/users/password-reset', options);\r\n        yield put(forgetPasswordSuccess(response.message));\r\n    } catch (error) {\r\n        let message;\r\n        switch (error.status) {\r\n            case 500:\r\n                message = 'Internal Server Error';\r\n                break;\r\n            case 401:\r\n                message = 'Invalid credentials';\r\n                break;\r\n            default:\r\n                message = error;\r\n        }\r\n        yield put(forgetPasswordFailed(message));\r\n    }\r\n}\r\n\r\nexport function* watchLoginUser(): any {\r\n    yield takeEvery(LOGIN_USER, login);\r\n}\r\n\r\nexport function* watchLogoutUser(): any {\r\n    yield takeEvery(LOGOUT_USER, logout);\r\n}\r\n\r\nexport function* watchRegisterUser(): any {\r\n    yield takeEvery(REGISTER_USER, register);\r\n}\r\n\r\nexport function* watchForgetPassword(): any {\r\n    yield takeEvery(FORGET_PASSWORD, forgetPassword);\r\n}\r\n\r\nfunction* authSaga(): any {\r\n    yield all([fork(watchLoginUser), fork(watchLogoutUser), fork(watchRegisterUser), fork(watchForgetPassword)]);\r\n}\r\n\r\nexport default authSaga;\r\n","// @flow\r\nimport { all, call, fork, takeEvery, put } from 'redux-saga/effects';\r\n\r\nimport {\r\n    CHANGE_LAYOUT,\r\n    CHANGE_LAYOUT_WIDTH,\r\n    CHANGE_SIDEBAR_THEME,\r\n    CHANGE_SIDEBAR_TYPE,\r\n    TOGGLE_RIGHT_SIDEBAR,\r\n    SHOW_RIGHT_SIDEBAR,\r\n    HIDE_RIGHT_SIDEBAR,\r\n} from './constants';\r\nimport * as layoutConstants from '../../constants';\r\nimport {\r\n    changeLayoutWidth as changeLayoutWidthAction,\r\n    changeSidebarTheme as changeLeftSidebarThemeAction,\r\n    changeSidebarType as changeSidebarTypeAction,\r\n} from './actions';\r\n\r\n/**\r\n * Changes the body attribute\r\n */\r\nfunction changeBodyAttribute(attribute, value) {\r\n    if (document.body) document.body.setAttribute(attribute, value);\r\n    return true;\r\n}\r\n\r\n/**\r\n * Toggle the class on body\r\n * @param {*} cssClass\r\n */\r\nfunction manageBodyClass(cssClass, action = 'toggle') {\r\n    switch (action) {\r\n        case 'add':\r\n            if (document.body) document.body.classList.add(cssClass);\r\n            break;\r\n        case 'remove':\r\n            if (document.body) document.body.classList.remove(cssClass);\r\n            break;\r\n        default:\r\n            if (document.body) document.body.classList.toggle(cssClass);\r\n            break;\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\n/**\r\n * ---------------------------------------------------------------------------------------------------------------------------\r\n * Note: Following are the functions which allows you to save the user prefrences on backend side by making an api request.\r\n * For now, we are just applying the required logic on frontend side\r\n * ----------------------------------------------------------------------------------------------------------------------------\r\n */\r\n\r\n/**\r\n * Changes the layout type\r\n * @param {*} param0\r\n */\r\nfunction* changeLayout({ payload: layout }) {\r\n    try {\r\n        yield call(changeBodyAttribute, 'data-layout', layout);\r\n        if (layout === layoutConstants.LAYOUT_VERTICAL) {\r\n            yield put(changeLeftSidebarThemeAction(layoutConstants.LEFT_SIDEBAR_THEME_DEFAULT));\r\n            yield put(changeSidebarTypeAction(layoutConstants.LEFT_SIDEBAR_TYPE_FIXED));\r\n        }\r\n\r\n        if (layout === layoutConstants.LAYOUT_HORIZONTAL) {\r\n            yield put(changeLeftSidebarThemeAction(layoutConstants.LEFT_SIDEBAR_THEME_DEFAULT));\r\n            yield put(changeSidebarTypeAction(layoutConstants.LEFT_SIDEBAR_TYPE_FIXED));\r\n        }\r\n\r\n        if (layout === layoutConstants.LAYOUT_DETACHED) {\r\n            yield put(changeLayoutWidthAction(layoutConstants.LAYOUT_WIDTH_FLUID));\r\n            yield put(changeSidebarTypeAction(layoutConstants.LEFT_SIDEBAR_TYPE_SCROLLABLE));\r\n            yield put(changeLeftSidebarThemeAction(layoutConstants.LEFT_SIDEBAR_THEME_DEFAULT));\r\n        }\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Changes the layout width\r\n * @param {*} param0\r\n */\r\nfunction* changeLayoutWidth({ payload: width }) {\r\n    try {\r\n        yield call(changeBodyAttribute, 'data-layout-mode', width);\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Changes the left sidebar theme\r\n * @param {*} param0\r\n */\r\nfunction* changeLeftSidebarTheme({ payload: theme }) {\r\n    try {\r\n        yield call(changeBodyAttribute, 'data-leftbar-theme', theme);\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Changes the left sidebar type\r\n * @param {*} param0\r\n */\r\nfunction* changeLeftSidebarType({ payload: type }) {\r\n    try {\r\n        yield call(changeBodyAttribute, 'data-leftbar-compact-mode', type);\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Toggles the rightsidebar\r\n */\r\nfunction* toggleRightSidebar() {\r\n    try {\r\n        yield call(manageBodyClass, 'right-bar-enabled');\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Show the rightsidebar\r\n */\r\nfunction* showRightSidebar() {\r\n    try {\r\n        yield call(manageBodyClass, 'right-bar-enabled', 'add');\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Hides the rightsidebar\r\n */\r\nfunction* hideRightSidebar() {\r\n    try {\r\n        yield call(manageBodyClass, 'right-bar-enabled', 'remove');\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Watchers\r\n */\r\nexport function* watchChangeLayoutType(): any {\r\n    yield takeEvery(CHANGE_LAYOUT, changeLayout);\r\n}\r\n\r\nexport function* watchChangeLayoutWidth(): any {\r\n    yield takeEvery(CHANGE_LAYOUT_WIDTH, changeLayoutWidth);\r\n}\r\n\r\nexport function* watchChangeLeftSidebarTheme(): any {\r\n    yield takeEvery(CHANGE_SIDEBAR_THEME, changeLeftSidebarTheme);\r\n}\r\n\r\nexport function* watchChangeLeftSidebarType(): any {\r\n    yield takeEvery(CHANGE_SIDEBAR_TYPE, changeLeftSidebarType);\r\n}\r\n\r\nexport function* watchToggleRightSidebar(): any {\r\n    yield takeEvery(TOGGLE_RIGHT_SIDEBAR, toggleRightSidebar);\r\n}\r\n\r\nexport function* watchShowRightSidebar(): any {\r\n    yield takeEvery(SHOW_RIGHT_SIDEBAR, showRightSidebar);\r\n}\r\n\r\nexport function* watchHideRightSidebar(): any {\r\n    yield takeEvery(HIDE_RIGHT_SIDEBAR, hideRightSidebar);\r\n}\r\n\r\nfunction* LayoutSaga(): any {\r\n    yield all([\r\n        fork(watchChangeLayoutType),\r\n        fork(watchChangeLayoutWidth),\r\n        fork(watchChangeLeftSidebarTheme),\r\n        fork(watchChangeLeftSidebarType),\r\n        fork(watchToggleRightSidebar),\r\n        fork(watchShowRightSidebar),\r\n        fork(watchHideRightSidebar),\r\n    ]);\r\n}\r\n\r\nexport default LayoutSaga;\r\n","// @flow\n\nimport MenuItem from './models';\n\n/**\n * Flatten the nested list of menu items\n */\nlet uuid = 1;\n\nconst assignIdAndParent = (menuItems: Array<MenuItem>, parentId?: number) => {\n    menuItems = menuItems || [];\n    menuItems.forEach(item => {\n        const id = item.id || uuid;\n        uuid += 1;\n        item.id = id;\n        item.parentId = item.parentId || parentId;\n        item.active = false;\n\n        if (typeof item.children !== 'undefined') {\n            assignIdAndParent(item.children, id);\n        }\n    });\n};\n\nexport default (menuItems: Array<MenuItem>) => {\n    assignIdAndParent(menuItems);\n    return menuItems;\n};\n","// @flow\r\nimport { all, call, put, fork, takeEvery } from 'redux-saga/effects';\r\n\r\nimport { INIT_MENU, CHANGE_ACTIVE_MENU_FROM_LOCATION } from './constants';\r\nimport { authProtectedRoutes as routes } from '../../routes';\r\nimport assignIds from './utils';\r\nimport { initMenuSuccess, changeActiveMenuFromLocationSuccess } from './actions';\r\n\r\n/**\r\n * Activate menu items from location\r\n * @param {*} menuItems\r\n */\r\nconst getActivatedMenuItemIds = menuItems => {\r\n    var matchingItems = [];\r\n    for (var menuItem of menuItems) {\r\n        if (window.location.pathname.indexOf(menuItem.path) === 0) {\r\n            matchingItems.push(menuItem.id);\r\n        }\r\n\r\n        if (typeof menuItem.children !== 'undefined') {\r\n            matchingItems = [...matchingItems, ...getActivatedMenuItemIds(menuItem.children)];\r\n        }\r\n    }\r\n    return matchingItems;\r\n};\r\n\r\n/**\r\n * Initilizes the menu\r\n */\r\nfunction* initMenuAndItems() {\r\n    try {\r\n        const menuItems = assignIds(routes);\r\n        yield put(initMenuSuccess(menuItems));\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * change the active menu item based on location\r\n */\r\nfunction* changeActiveMenuFromLocation() {\r\n    try {\r\n        const menuItems = assignIds(routes);\r\n        const activatedMenuItemIds = yield call(getActivatedMenuItemIds, menuItems);\r\n        yield put(changeActiveMenuFromLocationSuccess(activatedMenuItemIds));\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Watchers\r\n */\r\nexport function* watchMenuInit(): any {\r\n    yield takeEvery(INIT_MENU, initMenuAndItems);\r\n}\r\n\r\nexport function* watchMenuChange(): any {\r\n    yield takeEvery(CHANGE_ACTIVE_MENU_FROM_LOCATION, changeActiveMenuFromLocation);\r\n}\r\n\r\nfunction* appMenuSaga(): any {\r\n    yield all([fork(watchMenuInit), fork(watchMenuChange)]);\r\n}\r\n\r\nexport default appMenuSaga;\r\n","// @flow\nimport { all } from 'redux-saga/effects';\nimport authSaga from './auth/saga';\nimport layoutSaga from './layout/saga';\nimport appMenuSaga from './appMenu/saga';\n\nexport default function* rootSaga(getState: any): any {\n    yield all([authSaga(), layoutSaga(), appMenuSaga()]);\n}\n","// @flow\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport reducers from './reducers';\nimport sagas from './sagas';\n\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares = [sagaMiddleware];\n\nexport function configureStore(initialState: {}) {\n    const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n    const store = createStore(reducers, initialState, composeEnhancers(applyMiddleware(...middlewares)));\n    sagaMiddleware.run(sagas);\n    return store;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from 'react-redux';\nimport { configureStore } from './redux/store';\n\nReactDOM.render(\n    <Provider store={configureStore()}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","/* AUTH */\nexport const LOGIN_USER = 'LOGIN_USER';\nexport const LOGIN_USER_SUCCESS = 'LOGIN_USER_SUCCESS';\nexport const LOGIN_USER_FAILED = 'LOGIN_USER_FAILED';\nexport const REGISTER_USER = 'REGISTER_USER';\nexport const REGISTER_USER_SUCCESS = 'REGISTER_USER_SUCCESS';\nexport const REGISTER_USER_FAILED = 'REGISTER_USER_FAILED';\nexport const LOGOUT_USER = 'LOGOUT_USER';\nexport const FORGET_PASSWORD = 'FORGET_PASSWORD';\nexport const FORGET_PASSWORD_SUCCESS = 'FORGET_PASSWORD_SUCCESS';\nexport const FORGET_PASSWORD_FAILED = 'FORGET_PASSWORD_FAILED';\n","/* LAYOUT */\nexport const CHANGE_LAYOUT = 'CHANGE_LAYOUT';\nexport const CHANGE_LAYOUT_WIDTH = 'CHANGE_LAYOUT_WIDTH';\nexport const CHANGE_SIDEBAR_THEME = 'CHANGE_SIDEBAR_THEME';\nexport const CHANGE_SIDEBAR_TYPE = 'CHANGE_SIDEBAR_TYPE';\n\n/* RIGHT SIDEBAR */\nexport const TOGGLE_RIGHT_SIDEBAR = 'TOGGLE_RIGHT_SIDEBAR';\nexport const SHOW_RIGHT_SIDEBAR = 'SHOW_RIGHT_SIDEBAR';\nexport const HIDE_RIGHT_SIDEBAR = 'HIDE_RIGHT_SIDEBAR';\n"],"sourceRoot":""}
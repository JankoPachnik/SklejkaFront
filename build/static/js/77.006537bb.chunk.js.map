{"version":3,"sources":["pages/forms/Advanced.js","components/Datepicker.js","components/PageTitle.js"],"names":["ReactSelect","className","href","classNamePrefix","options","value","label","isMulti","Typeaheads","id","labelKey","multiple","placeholder","DatePickers","lg","hideAddon","monthsShown","dateFormat","minDate","Date","maxDate","setDate","getDate","showTimeSelect","timeFormat","timeIntervals","timeCaption","showTimeSelectOnly","InputMasks","mask","FormAdvanced","Fragment","breadCrumbItems","path","active","title","DatepickerInput","Component","constructor","props","super","onDateValueChange","console","log","this","bind","render","type","onClick","onChange","DatepickerInputWithAddon","readOnly","HyperDatepicker","handleDateSelectChange","date","setState","startDate","state","input","customInput","selected","PageTitle","to","map","item","index","key"],"mappings":"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","file":"static/js/77.006537bb.chunk.js","sourcesContent":["// @flow\r\nimport React from 'react';\r\n\r\nimport { Row, Col, Card, CardBody } from 'reactstrap';\r\nimport Select from 'react-select';\r\nimport { Typeahead } from 'react-bootstrap-typeahead';\r\nimport 'react-bootstrap-typeahead/css/Typeahead.css';\r\nimport 'react-bootstrap-typeahead/css/Typeahead-bs4.css';\r\nimport MaskedInput from 'react-text-mask';\r\n\r\nimport HyperDatepicker from '../../components/Datepicker';\r\nimport PageTitle from '../../components/PageTitle';\r\n\r\nconst ReactSelect = () => {\r\n    return (\r\n        <Card>\r\n            <CardBody>\r\n                <h4 className=\"header-title\">\r\n                    <a href=\"https://github.com/JedWatson/react-select\">React select</a>\r\n                </h4>\r\n                <p className=\"mb-1 mt-3 font-weight-bold text-muted\">Single Selection</p>\r\n                <p className=\"text-muted font-14\">React-Select based Select element</p>\r\n                <Select\r\n                    className=\"react-select\"\r\n                    classNamePrefix=\"react-select\"\r\n                    options={[\r\n                        { value: 'chocolate', label: 'Chocolate' },\r\n                        { value: 'strawberry', label: 'Strawberry' },\r\n                        { value: 'vanilla', label: 'Vanilla' },\r\n                    ]}></Select>\r\n\r\n                <p className=\"mb-1 mt-3 font-weight-bold text-muted\">Multiple Selection</p>\r\n                <p className=\"text-muted font-14\">React-Select based Select (Multiple) element</p>\r\n                <Select\r\n                    isMulti={true}\r\n                    options={[\r\n                        { value: 'chocolate', label: 'Chocolate' },\r\n                        { value: 'strawberry', label: 'Strawberry' },\r\n                        { value: 'vanilla', label: 'Vanilla' },\r\n                    ]}\r\n                    className=\"react-select\"\r\n                    classNamePrefix=\"react-select\"></Select>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n};\r\n\r\nconst Typeaheads = () => {\r\n    return (\r\n        <Card>\r\n            <CardBody>\r\n                <h4 className=\"header-title\">\r\n                    <a href=\"http://ericgio.github.io/react-bootstrap-typeahead/\">Typeahead</a>\r\n                </h4>\r\n                <p className=\"mb-1 mt-3 font-weight-bold text-muted\">Single Selection</p>\r\n                <p className=\"text-muted font-14\">Typeahead based Select element</p>\r\n                <Typeahead\r\n                    id=\"select2\"\r\n                    labelKey=\"label\"\r\n                    multiple={false}\r\n                    options={[\r\n                        { id: 1, value: 'chocolate', label: 'Chocolate' },\r\n                        { id: 2, value: 'strawberry', label: 'Strawberry' },\r\n                        { id: 3, value: 'vanilla', label: 'Vanilla' },\r\n                    ]}\r\n                    placeholder=\"Choose a state...\"\r\n                />\r\n\r\n                <p className=\"mb-1 mt-3 font-weight-bold text-muted\">Multiple Selection</p>\r\n                <p className=\"text-muted font-14\">Typeahead based Select (Multiple) element</p>\r\n                <Typeahead\r\n                    id=\"select3\"\r\n                    labelKey=\"label\"\r\n                    multiple={true}\r\n                    options={[\r\n                        { id: 1, value: 'chocolate', label: 'Chocolate' },\r\n                        { id: 2, value: 'strawberry', label: 'Strawberry' },\r\n                        { id: 3, value: 'vanilla', label: 'Vanilla' },\r\n                    ]}\r\n                    placeholder=\"Choose a state...\"\r\n                />\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n};\r\n\r\nconst DatePickers = () => {\r\n    return (\r\n        <Card>\r\n            <CardBody>\r\n                <h4 className=\"header-title\">Date &amp; Time Picker</h4>\r\n                <p className=\"text-muted font-14\">\r\n                    A simple date picker using <a href=\"https://reactdatepicker.com/\">ReactJS Datepicker</a>\r\n                </p>\r\n\r\n                <Row>\r\n                    <Col lg={6}>\r\n                        <div className=\"form-group\">\r\n                            <label>Single Date</label> <br />\r\n                            <HyperDatepicker hideAddon={true} />\r\n                        </div>\r\n                    </Col>\r\n                    <Col lg={6}>\r\n                        <div className=\"form-group\">\r\n                            <label>Single Date with multiple months</label> <br />\r\n                            <HyperDatepicker hideAddon={true} monthsShown={2} />\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                    <Col lg={6}>\r\n                        <div className=\"form-group\">\r\n                            <label>Custom date format</label> <br />\r\n                            <HyperDatepicker hideAddon={true} dateFormat=\"yyyy-MM-dd\" />\r\n                        </div>\r\n                    </Col>\r\n                    <Col lg={6}>\r\n                        <div className=\"form-group\">\r\n                            <label>Specific date range</label> <br />\r\n                            <HyperDatepicker\r\n                                hideAddon={true}\r\n                                minDate={new Date()}\r\n                                maxDate={new Date(new Date().setDate(new Date().getDate() + 7))}\r\n                            />\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                    <Col lg={6}>\r\n                        <div className=\"form-group\">\r\n                            <label>Select Time</label> <br />\r\n                            <HyperDatepicker\r\n                                hideAddon={true}\r\n                                showTimeSelect\r\n                                timeFormat=\"HH:mm\"\r\n                                timeIntervals={60}\r\n                                dateFormat=\"MMMM d, yyyy h:mm aa\"\r\n                                timeCaption=\"time\"\r\n                            />\r\n                        </div>\r\n                    </Col>\r\n                    <Col lg={6}>\r\n                        <div className=\"form-group\">\r\n                            <label>Time only</label> <br />\r\n                            <HyperDatepicker\r\n                                hideAddon={true}\r\n                                showTimeSelect\r\n                                showTimeSelectOnly\r\n                                timeIntervals={60}\r\n                                dateFormat=\"h:mm aa\"\r\n                                timeCaption=\"Time\"\r\n                            />\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n};\r\n\r\nconst InputMasks = () => {\r\n    return (\r\n        <Card>\r\n            <CardBody>\r\n                <h4 className=\"header-title\">Input Masks</h4>\r\n                <p className=\"text-muted font-14\">\r\n                    Input masks by{' '}\r\n                    <a href=\"https://github.com/text-mask/text-mask/tree/master/react#readme\">react-text-mask</a>\r\n                </p>\r\n\r\n                <Row>\r\n                    <Col lg={6}>\r\n                        <div className=\"form-group\">\r\n                            <label>Phone Number with Area Code</label> <br />\r\n                            <MaskedInput\r\n                                mask={[\r\n                                    '(',\r\n                                    /[1-9]/,\r\n                                    /\\d/,\r\n                                    ')',\r\n                                    ' ',\r\n                                    /\\d/,\r\n                                    /\\d/,\r\n                                    /\\d/,\r\n                                    /\\d/,\r\n                                    '-',\r\n                                    /\\d/,\r\n                                    /\\d/,\r\n                                    /\\d/,\r\n                                    /\\d/,\r\n                                ]}\r\n                                placeholder=\"(__) ____-____\"\r\n                                className=\"form-control\"\r\n                            />\r\n                        </div>\r\n                    </Col>\r\n                    <Col lg={6}>\r\n                        <div className=\"form-group\">\r\n                            <label>US Phone Number</label> <br />\r\n                            <MaskedInput\r\n                                mask={[\r\n                                    '(',\r\n                                    /[1-9]/,\r\n                                    /\\d/,\r\n                                    /\\d/,\r\n                                    ')',\r\n                                    ' ',\r\n                                    /\\d/,\r\n                                    /\\d/,\r\n                                    /\\d/,\r\n                                    '-',\r\n                                    /\\d/,\r\n                                    /\\d/,\r\n                                    /\\d/,\r\n                                    /\\d/,\r\n                                ]}\r\n                                placeholder=\"(___) ___-____\"\r\n                                className=\"form-control\"\r\n                            />\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                    <Col lg={6}>\r\n                        <div className=\"form-group\">\r\n                            <label>Date</label> <br />\r\n                            <MaskedInput\r\n                                mask={[/\\d/, /\\d/, '/', /\\d/, /\\d/, '/', /\\d/, /\\d/, /\\d/, /\\d/]}\r\n                                placeholder=\"__/__/____\"\r\n                                className=\"form-control\"\r\n                            />\r\n                        </div>\r\n                    </Col>\r\n                    <Col lg={6}>\r\n                        <div className=\"form-group\">\r\n                            <label>Time</label> <br />\r\n                            <MaskedInput\r\n                                mask={[/\\d/, /\\d/, ':', /\\d/, /\\d/, ':', /\\d/, /\\d/]}\r\n                                placeholder=\"__:__:__\"\r\n                                className=\"form-control\"\r\n                            />\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n};\r\n\r\nconst FormAdvanced = () => {\r\n    return (\r\n        <React.Fragment>\r\n            <PageTitle\r\n                breadCrumbItems={[\r\n                    { label: 'Forms', path: '/forms/advanced' },\r\n                    { label: 'Form Advanced', path: '/forms/advanced', active: true },\r\n                ]}\r\n                title={'Form Advanced'}\r\n            />\r\n\r\n            <Row>\r\n                <Col lg={6}>\r\n                    <ReactSelect />\r\n                </Col>\r\n                <Col lg={6}>\r\n                    <Typeaheads />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col>\r\n                    <DatePickers />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col>\r\n                    <InputMasks />\r\n                </Col>\r\n            </Row>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default FormAdvanced;\r\n","// @flow\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport DatePicker from 'react-datepicker';\r\n\r\ntype DatepickerInputProps = {\r\n    onClick?: PropTypes.func,\r\n    value?: string,\r\n};\r\nclass DatepickerInput extends Component<DatepickerInputProps> {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onDateValueChange = this.onDateValueChange.bind(this);\r\n    }\r\n\r\n    onDateValueChange = () => {\r\n        console.log('date value changed');\r\n    };\r\n    render() {\r\n        return (\r\n            <input\r\n                type=\"text\"\r\n                className=\"form-control date\"\r\n                id=\"dash-daterange\"\r\n                onClick={this.props.onClick}\r\n                value={this.props.value}\r\n                onChange={this.onDateValueChange}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\ntype DatepickerInputWithAddonProps = {\r\n    onClick?: PropTypes.func,\r\n    value?: string,\r\n};\r\n\r\nclass DatepickerInputWithAddon extends Component<DatepickerInputWithAddonProps> {\r\n    render() {\r\n        return (\r\n            <div className=\"input-group\">\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"form-control form-control-light\"\r\n                    id=\"dash-daterange\"\r\n                    onClick={this.props.onClick}\r\n                    value={this.props.value}\r\n                    readOnly\r\n                />\r\n\r\n                <div className=\"input-group-append\">\r\n                    <span className=\"input-group-text bg-primary border-primary text-white\">\r\n                        <i className=\"mdi mdi-calendar-range font-13\"></i>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\ntype HyperDatepickerProps = {\r\n    hideAddon?: boolean,\r\n};\r\n\r\ntype HyperDatepickerState = {\r\n    startDate?: Date,\r\n};\r\n\r\nclass HyperDatepicker extends Component<HyperDatepickerProps, HyperDatepickerState> {\r\n    constructor(props: HyperDatepickerProps) {\r\n        super(props);\r\n        this.state = {\r\n            startDate: new Date(),\r\n        };\r\n        this.handleDateSelectChange = this.handleDateSelectChange.bind(this);\r\n    }\r\n\r\n    handleDateSelectChange = (date: any) => {\r\n        this.setState({\r\n            startDate: date,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const input = (this.props.hideAddon || false) === true ? <DatepickerInput /> : <DatepickerInputWithAddon />;\r\n\r\n        return (\r\n            <DatePicker\r\n                customInput={input}\r\n                selected={this.state.startDate}\r\n                onChange={this.handleDateSelectChange}\r\n                {...this.props}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default HyperDatepicker;\r\n","// @flow\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Col, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\n\r\ntype PageTitleProps = {\r\n    breadCrumbItems: PropTypes.object,\r\n    title: string,\r\n};\r\n\r\n/**\r\n * PageTitle\r\n */\r\nconst PageTitle = (props: PageTitleProps) => {\r\n    return (\r\n        <Row>\r\n            <Col>\r\n                <div className=\"page-title-box\">\r\n                    <div className=\"page-title-right\">\r\n                        <Breadcrumb>\r\n                            <BreadcrumbItem>\r\n                                <Link to=\"/\">Sklejeczka</Link>\r\n                            </BreadcrumbItem>\r\n                            {props.breadCrumbItems.map((item, index) => {\r\n                                return item.active ? (\r\n                                    <BreadcrumbItem active key={index}>\r\n                                        {item.label}\r\n                                    </BreadcrumbItem>\r\n                                ) : (\r\n                                    <BreadcrumbItem key={index}>\r\n                                        <Link to={item.path}>{item.label}</Link>\r\n                                    </BreadcrumbItem>\r\n                                );\r\n                            })}\r\n                        </Breadcrumb>\r\n                    </div>\r\n                    <h4 className=\"page-title\">{props.title}</h4>\r\n                </div>\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default PageTitle;\r\n"],"sourceRoot":""}
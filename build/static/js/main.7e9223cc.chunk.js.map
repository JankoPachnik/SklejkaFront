{"version":3,"sources":["redux/appMenu/constants.js","constants/layout.js","redux/layout/actions.js","redux/auth/actions.js","helpers/authUtils.js","redux/appMenu/actions.js","routes/index.js","routes/Routes.js","helpers/fake-backend.js","App.js","serviceWorker.js","redux/layout/reducers.js","redux/auth/reducers.js","redux/appMenu/reducers.js","redux/reducers.js","helpers/api.js","redux/auth/saga.js","redux/layout/saga.js","redux/appMenu/utils.js","redux/appMenu/saga.js","redux/sagas.js","redux/store.js","index.js","redux/auth/constants.js","redux/layout/constants.js"],"names":["INIT_MENU","INIT_MENU_SUCCESS","CHANGE_ACTIVE_MENU_FROM_LOCATION","CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS","LAYOUT_VERTICAL","LAYOUT_HORIZONTAL","LAYOUT_DETACHED","LAYOUT_WIDTH_FLUID","LAYOUT_WIDTH_BOXED","LEFT_SIDEBAR_THEME_DEFAULT","LEFT_SIDEBAR_THEME_LIGHT","LEFT_SIDEBAR_THEME_DARK","LEFT_SIDEBAR_TYPE_FIXED","LEFT_SIDEBAR_TYPE_CONDENSED","LEFT_SIDEBAR_TYPE_SCROLLABLE","changeLayout","layout","type","CHANGE_LAYOUT","payload","changeLayoutWidth","width","CHANGE_LAYOUT_WIDTH","changeSidebarTheme","theme","CHANGE_SIDEBAR_THEME","changeSidebarType","sidebarType","CHANGE_SIDEBAR_TYPE","showRightSidebar","SHOW_RIGHT_SIDEBAR","hideRightSidebar","HIDE_RIGHT_SIDEBAR","loginUser","username","password","LOGIN_USER","loginUserSuccess","user","LOGIN_USER_SUCCESS","loginUserFailed","error","LOGIN_USER_FAILED","registerUser","fullname","email","REGISTER_USER","registerUserSuccess","REGISTER_USER_SUCCESS","registerUserFailed","REGISTER_USER_FAILED","logoutUser","history","LOGOUT_USER","forgetPassword","FORGET_PASSWORD","forgetPasswordSuccess","passwordResetStatus","FORGET_PASSWORD_SUCCESS","forgetPasswordFailed","FORGET_PASSWORD_FAILED","isUserAuthenticated","getLoggedInUser","decoded","jwtDecode","token","currentTime","Date","now","exp","console","warn","Cookies","get","JSON","parse","initMenu","initMenuSuccess","menuItems","changeActiveMenuFromLocation","changeActiveMenuFromLocationSuccess","activatedMenuItemIds","Login","React","lazy","Logout","Register","ForgetPassword","Confirm","EcommerceDashboard","CalendarApp","ProjectDetail","ProjectForm","EcommerceProducts","Orders","OrderDetails","Customers","ChatApp","Kanban","EmailDetail","Starter","Profile","ErrorPageNotFound","ServerError","FAQ","Pricing","Accordions","Alerts","Badges","Buttons","Cards","Carousel","Dropdowns","ListGroups","Modals","Tabs","Toasts","Grid","Popovers","Progress","Ribbons","Tooltips","Typography","Spinners","Widgets","DragDrop","RangeSliders","Ratings","MDIIcons","Dripicons","Unicons","BasicForms","FormValidation","FormAdvanced","FormWizard","FileUpload","Editors","ApexChart","BriteChart","ChartJs","BasicTables","AdvancedTables","GoogleMaps","PrivateRoute","Component","component","roles","rest","render","props","to","pathname","state","from","location","loggedInUser","indexOf","role","rootRoute","path","exact","route","dashboardRoutes","name","icon","header","children","badge","variant","text","appRoutes","pageRoutes","authRoutes","Route","uiRoutes","flattenRoutes","routes","flatRoutes","forEach","item","push","allRoutes","authProtectedRoutes","allFlattenRoutes","loading","AuthLayout","Loadable","loader","loaded","default","VerticalLayout","HorizontalLayout","DetachedLayout","Routes","getLayout","layoutCls","this","layoutType","layoutConstants","shouldComponentUpdate","nextProps","nextState","oldLayout","newLayout","stringify","Layout","map","index","key","connect","Auth","users","id","firstName","lastName","realFetch","window","fetch","url","opts","Promise","resolve","reject","setTimeout","endsWith","method","params","body","filteredUsers","filter","length","responseJson","ok","json","split","newUser","message","headers","Authorization","then","response","configureFakeBackend","App","Boolean","hostname","match","INIT_STATE","layoutWidth","leftSideBarTheme","leftSideBarType","action","TOGGLE_RIGHT_SIDEBAR","AppMenu","combineReducers","fetchJSON","options","status","catch","login","logout","register","watchLoginUser","watchLogoutUser","watchRegisterUser","watchForgetPassword","authSaga","setSession","cookies","set","remove","call","put","takeEvery","all","fork","changeLeftSidebarTheme","changeLeftSidebarType","toggleRightSidebar","watchChangeLayoutType","watchChangeLayoutWidth","watchChangeLeftSidebarTheme","watchChangeLeftSidebarType","watchToggleRightSidebar","watchShowRightSidebar","watchHideRightSidebar","LayoutSaga","changeBodyAttribute","attribute","value","document","setAttribute","manageBodyClass","cssClass","classList","add","toggle","changeLeftSidebarThemeAction","changeSidebarTypeAction","changeLayoutWidthAction","uuid","assignIdAndParent","parentId","active","initMenuAndItems","watchMenuInit","watchMenuChange","appMenuSaga","getActivatedMenuItemIds","matchingItems","menuItem","assignIds","rootSaga","getState","layoutSaga","sagaMiddleware","createSagaMiddleware","middlewares","ReactDOM","store","initialState","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducers","applyMiddleware","run","sagas","configureStore","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7e9223cc.chunk.js","sourcesContent":["/* APP MENU */\r\nexport const INIT_MENU = 'INIT_MENU';\r\nexport const INIT_MENU_SUCCESS = 'INIT_MENU_SUCCESS';\r\nexport const CHANGE_ACTIVE_MENU_FROM_LOCATION = 'CHANGE_ACTIVE_MENU_FROM_LOCATION';\r\nexport const CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS = 'CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS';\r\n","/* Layout types and other constants */\r\n\r\nexport const LAYOUT_VERTICAL = 'vertical';\r\nexport const LAYOUT_HORIZONTAL = 'topnav';\r\nexport const LAYOUT_DETACHED = 'detached';\r\n\r\nexport const LAYOUT_WIDTH_FLUID = 'fluid';\r\nexport const LAYOUT_WIDTH_BOXED = 'boxed';\r\n\r\nexport const LEFT_SIDEBAR_THEME_DEFAULT = 'default';\r\nexport const LEFT_SIDEBAR_THEME_LIGHT = 'light';\r\nexport const LEFT_SIDEBAR_THEME_DARK = 'dark';\r\n\r\nexport const LEFT_SIDEBAR_TYPE_FIXED = 'fixed';\r\nexport const LEFT_SIDEBAR_TYPE_CONDENSED = 'condensed';\r\nexport const LEFT_SIDEBAR_TYPE_SCROLLABLE = 'scrollable';\r\n","// @flow\r\nimport {\r\n    CHANGE_LAYOUT,\r\n    CHANGE_LAYOUT_WIDTH,\r\n    CHANGE_SIDEBAR_THEME,\r\n    CHANGE_SIDEBAR_TYPE,\r\n    TOGGLE_RIGHT_SIDEBAR,\r\n    SHOW_RIGHT_SIDEBAR,\r\n    HIDE_RIGHT_SIDEBAR,\r\n} from './constants';\r\n\r\ntype LayoutAction = { type: string, payload?: string | null };\r\n\r\nexport const changeLayout = (layout: string): LayoutAction => ({\r\n    type: CHANGE_LAYOUT,\r\n    payload: layout,\r\n});\r\n\r\nexport const changeLayoutWidth = (width: string): LayoutAction => ({\r\n    type: CHANGE_LAYOUT_WIDTH,\r\n    payload: width,\r\n});\r\n\r\nexport const changeSidebarTheme = (theme: string): LayoutAction => ({\r\n    type: CHANGE_SIDEBAR_THEME,\r\n    payload: theme,\r\n});\r\n\r\nexport const changeSidebarType = (sidebarType: string): LayoutAction => ({\r\n    type: CHANGE_SIDEBAR_TYPE,\r\n    payload: sidebarType,\r\n});\r\n\r\nexport const toggleRightSidebar = (): LayoutAction => ({\r\n    type: TOGGLE_RIGHT_SIDEBAR,\r\n    payload: null,\r\n});\r\n\r\nexport const showRightSidebar = (): LayoutAction => ({\r\n    type: SHOW_RIGHT_SIDEBAR,\r\n    payload: null,\r\n});\r\n\r\nexport const hideRightSidebar = (): LayoutAction => ({\r\n    type: HIDE_RIGHT_SIDEBAR,\r\n    payload: null,\r\n});\r\n","// @flow\r\nimport {\r\n    LOGIN_USER,\r\n    LOGIN_USER_SUCCESS,\r\n    LOGIN_USER_FAILED,\r\n    LOGOUT_USER,\r\n    REGISTER_USER,\r\n    REGISTER_USER_SUCCESS,\r\n    REGISTER_USER_FAILED,\r\n    FORGET_PASSWORD,\r\n    FORGET_PASSWORD_SUCCESS,\r\n    FORGET_PASSWORD_FAILED,\r\n} from './constants';\r\n\r\ntype AuthAction = { type: string, payload: {} | string };\r\n\r\nexport const loginUser = (username: string, password: string): AuthAction => ({\r\n    type: LOGIN_USER,\r\n    payload: { username, password },\r\n});\r\n\r\nexport const loginUserSuccess = (user: string): AuthAction => ({\r\n    type: LOGIN_USER_SUCCESS,\r\n    payload: user,\r\n});\r\n\r\nexport const loginUserFailed = (error: string): AuthAction => ({\r\n    type: LOGIN_USER_FAILED,\r\n    payload: error,\r\n});\r\n\r\nexport const registerUser = (fullname: string, email: string, password: string): AuthAction => ({\r\n    type: REGISTER_USER,\r\n    payload: { fullname, email, password },\r\n});\r\n\r\nexport const registerUserSuccess = (user: {}): AuthAction => ({\r\n    type: REGISTER_USER_SUCCESS,\r\n    payload: user,\r\n});\r\n\r\nexport const registerUserFailed = (error: string): AuthAction => ({\r\n    type: REGISTER_USER_FAILED,\r\n    payload: error,\r\n});\r\n\r\nexport const logoutUser = (history: any): AuthAction => ({\r\n    type: LOGOUT_USER,\r\n    payload: { history },\r\n});\r\n\r\nexport const forgetPassword = (username: string): AuthAction => ({\r\n    type: FORGET_PASSWORD,\r\n    payload: { username },\r\n});\r\n\r\nexport const forgetPasswordSuccess = (passwordResetStatus: string): AuthAction => ({\r\n    type: FORGET_PASSWORD_SUCCESS,\r\n    payload: passwordResetStatus,\r\n});\r\n\r\nexport const forgetPasswordFailed = (error: string): AuthAction => ({\r\n    type: FORGET_PASSWORD_FAILED,\r\n    payload: error,\r\n});\r\n","// @flow\r\nimport jwtDecode from 'jwt-decode';\r\nimport { Cookies } from 'react-cookie';\r\n\r\n/**\r\n * Checks if user is authenticated\r\n */\r\nconst isUserAuthenticated = () => {\r\n    const user = getLoggedInUser();\r\n    if (!user) {\r\n        return false;\r\n    }\r\n    const decoded = jwtDecode(user.token);\r\n    const currentTime = Date.now() / 1000;\r\n    if (decoded.exp < currentTime) {\r\n        console.warn('access token expired');\r\n        return false;\r\n    } else {\r\n        return true;\r\n    }\r\n};\r\n\r\n/**\r\n * Returns the logged in user\r\n */\r\nconst getLoggedInUser = () => {\r\n    const cookies = new Cookies();\r\n    const user = cookies.get('user');\r\n    return user ? (typeof user == 'object' ? user : JSON.parse(user)) : null;\r\n};\r\n\r\nexport { isUserAuthenticated, getLoggedInUser };\r\n","// @flow\r\nimport {\r\n    INIT_MENU,\r\n    INIT_MENU_SUCCESS,\r\n    CHANGE_ACTIVE_MENU_FROM_LOCATION,\r\n    CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS,\r\n} from './constants';\r\n\r\ntype DefaultMenuAction = { type: string, payload: {} };\r\n\r\nexport const initMenu = (): DefaultMenuAction => ({\r\n    type: INIT_MENU,\r\n    payload: {},\r\n});\r\n\r\nexport const initMenuSuccess = (menuItems: Array<{}>): DefaultMenuAction => ({\r\n    type: INIT_MENU_SUCCESS,\r\n    payload: { menuItems },\r\n});\r\n\r\nexport const changeActiveMenuFromLocation = (): DefaultMenuAction => ({\r\n    type: CHANGE_ACTIVE_MENU_FROM_LOCATION,\r\n    payload: {},\r\n});\r\n\r\nexport const changeActiveMenuFromLocationSuccess = (activatedMenuItemIds: Array<string>): DefaultMenuAction => ({\r\n    type: CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS,\r\n    payload: { activatedMenuItemIds },\r\n});\r\n","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Route } from 'react-router-dom';\r\n\r\nimport { isUserAuthenticated, getLoggedInUser } from '../helpers/authUtils';\r\n\r\n// lazy load all the views\r\n\r\n// auth\r\nconst Login = React.lazy(() => import('../pages/auth/Login'));\r\nconst Logout = React.lazy(() => import('../pages/auth/Logout'));\r\nconst Register = React.lazy(() => import('../pages/auth/Register'));\r\nconst ForgetPassword = React.lazy(() => import('../pages/auth/ForgetPassword'));\r\nconst Confirm = React.lazy(() => import('../pages/auth/Confirm'));\r\n// dashboard\r\nconst EcommerceDashboard = React.lazy(() => import('../pages/dashboards/Ecommerce'));\r\n//const CRMDashboard = React.lazy(() => import('../pages/dashboards/CRM'));\r\n//const AnalyticsDashboard = React.lazy(() => import('../pages/dashboards/Analytics'));\r\n//const ProjectDashboard = React.lazy(() => import('../pages/dashboards/Project'));\r\n// apps\r\nconst CalendarApp = React.lazy(() => import('../pages/apps/Calendar'));\r\n//const Projects = React.lazy(() => import('../pages/apps/Projects/'));\r\nconst ProjectDetail = React.lazy(() => import('../pages/apps/Projects/Detail/'));\r\n//const ProjectGannt = React.lazy(() => import('../pages/apps/Projects/Gantt/'));\r\nconst ProjectForm = React.lazy(() => import('../pages/apps/Projects/ProjectForm'));\r\n// - ecommece pages\r\nconst EcommerceProducts = React.lazy(() => import('../pages/apps/Ecommerce/Products'));\r\n//const ProductDetails = React.lazy(() => import('../pages/apps/Ecommerce/ProductDetails'));\r\nconst Orders = React.lazy(() => import('../pages/apps/Ecommerce/Orders'));\r\nconst OrderDetails = React.lazy(() => import('../pages/apps/Ecommerce/OrderDetails'));\r\nconst Customers = React.lazy(() => import('../pages/apps/Ecommerce/Customers'));\r\n//const Cart = React.lazy(() => import('../pages/apps/Ecommerce/Cart'));\r\n//const Checkout = React.lazy(() => import('../pages/apps/Ecommerce/Checkout/'));\r\n//const Sellers = React.lazy(() => import('../pages/apps/Ecommerce/Sellers'));\r\n// chat\r\nconst ChatApp = React.lazy(() => import('../pages/apps/Chat/'));\r\n// social\r\n//const SocialFeed = React.lazy(() => import('../pages/apps/SocialFeed/'));\r\n// tasks\r\n//const TaskList = React.lazy(() => import('../pages/apps/Tasks/List/'));\r\nconst Kanban = React.lazy(() => import('../pages/apps/Tasks/Board/'));\r\n\r\n// - email\r\n//const Inbox = React.lazy(() => import('../pages/apps/Email/Inbox'));\r\nconst EmailDetail = React.lazy(() => import('../pages/apps/Email/Detail'));\r\n\r\n// pages\r\nconst Starter = React.lazy(() => import('../pages/Starter'));\r\nconst Profile = React.lazy(() => import('../pages/profile'));\r\nconst ErrorPageNotFound = React.lazy(() => import('../pages/error/PageNotFound'));\r\nconst ServerError = React.lazy(() => import('../pages/error/ServerError'));\r\n\r\n// - other\r\n//const Invoice = React.lazy(() => import('../pages/other/Invoice'));\r\nconst FAQ = React.lazy(() => import('../pages/other/FAQ'));\r\nconst Pricing = React.lazy(() => import('../pages/other/Pricing'));\r\n//const Timeline = React.lazy(() => import('../pages/other/Timeline'));\r\n\r\n// uikit\r\nconst Accordions = React.lazy(() => import('../pages/uikit/Accordions'));\r\nconst Alerts = React.lazy(() => import('../pages/uikit/Alerts'));\r\nconst Badges = React.lazy(() => import('../pages/uikit/Badges'));\r\nconst Buttons = React.lazy(() => import('../pages/uikit/Buttons'));\r\nconst Cards = React.lazy(() => import('../pages/uikit/Cards'));\r\nconst Carousel = React.lazy(() => import('../pages/uikit/Carousel'));\r\nconst Dropdowns = React.lazy(() => import('../pages/uikit/Dropdowns'));\r\nconst ListGroups = React.lazy(() => import('../pages/uikit/ListGroups'));\r\nconst Modals = React.lazy(() => import('../pages/uikit/Modals'));\r\nconst Tabs = React.lazy(() => import('../pages/uikit/Tabs'));\r\nconst Toasts = React.lazy(() => import('../pages/uikit/Toasts'));\r\nconst Grid = React.lazy(() => import('../pages/uikit/Grid'));\r\nconst Popovers = React.lazy(() => import('../pages/uikit/Popovers'));\r\nconst Progress = React.lazy(() => import('../pages/uikit/Progress'));\r\nconst Ribbons = React.lazy(() => import('../pages/uikit/Ribbons'));\r\nconst Tooltips = React.lazy(() => import('../pages/uikit/Tooltips'));\r\nconst Typography = React.lazy(() => import('../pages/uikit/Typography'));\r\nconst Spinners = React.lazy(() => import('../pages/uikit/Spinners'));\r\nconst Widgets = React.lazy(() => import('../pages/uikit/Widgets'));\r\nconst DragDrop = React.lazy(() => import('../pages/uikit/DragDrop'));\r\nconst RangeSliders = React.lazy(() => import('../pages/uikit/RangeSliders'));\r\nconst Ratings = React.lazy(() => import('../pages/uikit/Ratings'));\r\n\r\nconst MDIIcons = React.lazy(() => import('../pages/uikit/MDIIcons'));\r\nconst Dripicons = React.lazy(() => import('../pages/uikit/Dripicons'));\r\nconst Unicons = React.lazy(() => import('../pages/uikit/Unicons'));\r\n// forms\r\nconst BasicForms = React.lazy(() => import('../pages/forms/Basic'));\r\nconst FormValidation = React.lazy(() => import('../pages/forms/Validation'));\r\nconst FormAdvanced = React.lazy(() => import('../pages/forms/Advanced'));\r\nconst FormWizard = React.lazy(() => import('../pages/forms/Wizard'));\r\nconst FileUpload = React.lazy(() => import('../pages/forms/FileUpload'));\r\nconst Editors = React.lazy(() => import('../pages/forms/Editors'));\r\n// charts\r\nconst ApexChart = React.lazy(() => import('../pages/charts/Apex'));\r\nconst BriteChart = React.lazy(() => import('../pages/charts/Brite'));\r\nconst ChartJs = React.lazy(() => import('../pages/charts/ChartJs'));\r\n// tables\r\nconst BasicTables = React.lazy(() => import('../pages/tables/Basic'));\r\nconst AdvancedTables = React.lazy(() => import('../pages/tables/Advanced'));\r\n// maps\r\nconst GoogleMaps = React.lazy(() => import('../pages/GoogleMaps'));\r\n\r\n// handle auth and authorization\r\n\r\nconst PrivateRoute = ({ component: Component, roles, ...rest }) => (\r\n    <Route\r\n        {...rest}\r\n        render={props => {\r\n            if (!isUserAuthenticated()) {\r\n                // not logged in so redirect to login page with the return url\r\n                return <Redirect to={{ pathname: '/account/login', state: { from: props.location } }} />;\r\n            }\r\n\r\n            const loggedInUser = getLoggedInUser();\r\n            // check if route is restricted by role\r\n            if (roles && roles.indexOf(loggedInUser.role) === -1) {\r\n                // role not authorised so redirect to home page\r\n                return <Redirect to={{ pathname: '/' }} />;\r\n            }\r\n\r\n            // authorised so return component\r\n            return <Component {...props} />;\r\n        }}\r\n    />\r\n);\r\n\r\n// root routes\r\nconst rootRoute = {\r\n    path: '/',\r\n    exact: true,\r\n    component: () => <Redirect to=\"/dashboard/ecommerce\" />,\r\n    route: PrivateRoute,\r\n};\r\n\r\n// dashboards\r\nconst dashboardRoutes = {\r\n    path: '/dashboard',\r\n    name: 'Dashboards',\r\n    icon: 'uil-home-alt',\r\n    header: 'Navigation',\r\n    children: [\r\n        /*{\r\n            path: '/dashboard/analytics',\r\n            name: 'Analytics',\r\n            component: AnalyticsDashboard,\r\n            route: PrivateRoute,\r\n        },\r\n        {\r\n            path: '/dashboard/crm',\r\n            name: 'CRM',\r\n            component: CRMDashboard,\r\n            route: PrivateRoute,\r\n        },*/\r\n        {\r\n            path: '/dashboard/ecommerce',\r\n            name: 'Ecommerce',\r\n            badge: {\r\n                variant: 'success',\r\n                text: '3',\r\n            },\r\n            component: EcommerceDashboard,\r\n            route: PrivateRoute,\r\n        },\r\n        /*{\r\n            path: '/dashboard/project',\r\n            name: 'Project',\r\n            component: ProjectDashboard,\r\n            route: PrivateRoute,\r\n        },*/\r\n    ],\r\n};\r\n\r\nconst calendarAppRoutes = {\r\n    path: '/apps/calendar',\r\n    name: 'Calendar',\r\n    route: PrivateRoute,\r\n    roles: ['Admin'],\r\n    icon: 'uil-calender',\r\n    component: CalendarApp,\r\n    header: 'Apps',\r\n};\r\n\r\nconst chatAppRoutes = {\r\n    path: '/apps/chat',\r\n    name: 'Chat',\r\n    route: PrivateRoute,\r\n    roles: ['Admin'],\r\n    icon: 'uil-comments-alt',\r\n    component: ChatApp,\r\n};\r\n\r\nconst ecommerceAppRoutes = {\r\n    path: '/apps/ecommerce',\r\n    name: 'eCommerce',\r\n    route: PrivateRoute,\r\n    roles: ['Admin'],\r\n    icon: 'uil-store',\r\n    children: [\r\n        {\r\n            path: '/apps/ecommerce/products',\r\n            name: 'Products',\r\n            component: EcommerceProducts,\r\n            route: PrivateRoute,\r\n        },\r\n        /*{\r\n            path: '/apps/ecommerce/details',\r\n            name: 'Product Details',\r\n            component: ProductDetails,\r\n            route: PrivateRoute,\r\n        },*/\r\n        {\r\n            path: '/apps/ecommerce/orders',\r\n            name: 'Orders',\r\n            component: Orders,\r\n            route: PrivateRoute,\r\n        },\r\n        {\r\n            path: '/apps/ecommerce/order/details',\r\n            name: 'Order Details',\r\n            component: OrderDetails,\r\n            route: PrivateRoute,\r\n        },\r\n        {\r\n            path: '/apps/ecommerce/customers',\r\n            name: 'Customers',\r\n            component: Customers,\r\n            route: PrivateRoute,\r\n        },\r\n        /*{\r\n            path: '/apps/ecommerce/shopping-cart',\r\n            name: 'Shopping Cart',\r\n            component: Cart,\r\n            route: PrivateRoute,\r\n        },\r\n        {\r\n            path: '/apps/ecommerce/checkout',\r\n            name: 'Checkout',\r\n            component: Checkout,\r\n            route: PrivateRoute,\r\n        },\r\n        {\r\n            path: '/apps/ecommerce/sellers',\r\n            name: 'Sellers',\r\n            component: Sellers,\r\n            route: PrivateRoute,\r\n        },*/\r\n    ],\r\n};\r\n\r\nconst emailAppRoutes = {\r\n    path: '/apps/email',\r\n    name: 'Email',\r\n    route: PrivateRoute,\r\n    roles: ['Admin'],\r\n    icon: 'uil-envelope',\r\n    children: [\r\n        /*{\r\n            path: '/apps/email/inbox',\r\n            name: 'Inbox',\r\n            component: Inbox,\r\n            route: PrivateRoute,\r\n        },*/\r\n        {\r\n            path: '/apps/email/details',\r\n            name: 'Email Details',\r\n            component: EmailDetail,\r\n            route: PrivateRoute,\r\n        },\r\n    ],\r\n};\r\n\r\nconst projectAppRoutes = {\r\n    path: '/apps/projects',\r\n    name: 'Projects',\r\n    route: PrivateRoute,\r\n    roles: ['Admin'],\r\n    icon: 'uil-briefcase',\r\n\r\n    children: [\r\n        /*{\r\n            path: '/apps/projects/list',\r\n            name: 'List',\r\n            component: Projects,\r\n            route: PrivateRoute,\r\n        },*/\r\n        {\r\n            path: '/apps/projects/:id/details',\r\n            name: 'Detail',\r\n            component: ProjectDetail,\r\n            route: PrivateRoute,\r\n        },\r\n        /*{\r\n            path: '/apps/projects/gantt',\r\n            name: 'Gantt',\r\n            component: ProjectGannt,\r\n            route: PrivateRoute,\r\n        },*/\r\n        {\r\n            path: '/apps/projects/new',\r\n            name: 'Create Project',\r\n            component: ProjectForm,\r\n            route: PrivateRoute,\r\n        },\r\n    ],\r\n};\r\n\r\n/*const socialAppRoutes = {\r\n    path: '/apps/social',\r\n    name: 'Social Feed',\r\n    route: PrivateRoute,\r\n    roles: ['Admin'],\r\n    icon: 'uil-rss',\r\n    component: SocialFeed,\r\n};*/\r\n\r\nconst taskAppRoutes = {\r\n    path: '/apps/tasks',\r\n    name: 'Tasks',\r\n    route: PrivateRoute,\r\n    roles: ['Admin'],\r\n    icon: 'uil-clipboard-alt',\r\n    children: [\r\n        /*{\r\n            path: '/apps/tasks/list',\r\n            name: 'Task List',\r\n            component: TaskList,\r\n            route: PrivateRoute,\r\n        },*/\r\n        {\r\n            path: '/apps/tasks/kanban',\r\n            name: 'Kanban',\r\n            component: Kanban,\r\n            route: PrivateRoute,\r\n        },\r\n    ],\r\n};\r\n\r\nconst appRoutes = [\r\n    calendarAppRoutes,\r\n    chatAppRoutes,\r\n    ecommerceAppRoutes,\r\n    emailAppRoutes,\r\n    projectAppRoutes,\r\n    //socialAppRoutes,\r\n    taskAppRoutes,\r\n];\r\n\r\n// pages\r\nconst pageRoutes = {\r\n    path: '/pages',\r\n    name: 'Pages',\r\n    icon: 'uil-copy-alt',\r\n    header: 'Custom',\r\n    children: [\r\n        {\r\n            path: '/pages/starter',\r\n            name: 'Starter',\r\n            component: Starter,\r\n            route: PrivateRoute,\r\n        },\r\n        {\r\n            path: '/pages/profile',\r\n            name: 'Profile',\r\n            component: Profile,\r\n            route: PrivateRoute,\r\n        },\r\n        /*{\r\n            path: '/pages/invoice',\r\n            name: 'Invoice',\r\n            component: Invoice,\r\n            route: PrivateRoute,\r\n        },*/\r\n        {\r\n            path: '/pages/faq',\r\n            name: 'FAQ',\r\n            component: FAQ,\r\n            route: PrivateRoute,\r\n        },\r\n        {\r\n            path: '/pages/pricing',\r\n            name: 'Pricing',\r\n            component: Pricing,\r\n            route: PrivateRoute,\r\n        },\r\n        {\r\n            path: '/pages/error-404',\r\n            name: 'Error - 404',\r\n            component: ErrorPageNotFound,\r\n            route: PrivateRoute,\r\n        },\r\n        {\r\n            path: '/pages/error-500',\r\n            name: 'Error - 500',\r\n            component: ServerError,\r\n            route: PrivateRoute,\r\n        },\r\n        /*{\r\n            path: '/pages/timeline',\r\n            name: 'Timeline',\r\n            component: Timeline,\r\n            route: PrivateRoute,\r\n        },*/\r\n    ],\r\n};\r\n\r\n// auth\r\nconst authRoutes = {\r\n    path: '/account',\r\n    name: 'Auth',\r\n    children: [\r\n        {\r\n            path: '/account/login',\r\n            name: 'Login',\r\n            component: Login,\r\n            route: Route,\r\n        },\r\n        {\r\n            path: '/account/logout',\r\n            name: 'Logout',\r\n            component: Logout,\r\n            route: Route,\r\n        },\r\n        {\r\n            path: '/account/register',\r\n            name: 'Register',\r\n            component: Register,\r\n            route: Route,\r\n        },\r\n        {\r\n            path: '/account/confirm',\r\n            name: 'Confirm',\r\n            component: Confirm,\r\n            route: Route,\r\n        },\r\n        {\r\n            path: '/account/forget-password',\r\n            name: 'Forget Password',\r\n            component: ForgetPassword,\r\n            route: Route,\r\n        },\r\n    ],\r\n};\r\n\r\n// ui\r\nconst uiRoutes = {\r\n    path: '/ui',\r\n    name: 'Components',\r\n    icon: 'uil-package',\r\n    header: 'UI Elements',\r\n    children: [\r\n        {\r\n            path: '/ui/base',\r\n            name: 'Base UI',\r\n            children: [\r\n                {\r\n                    path: '/ui/accordions',\r\n                    name: 'Accordions',\r\n                    component: Accordions,\r\n                    route: PrivateRoute,\r\n                },\r\n                {\r\n                    path: '/ui/alerts',\r\n                    name: 'Alerts',\r\n                    component: Alerts,\r\n                    route: PrivateRoute,\r\n                },\r\n                {\r\n                    path: '/ui/badges',\r\n                    name: 'Badges',\r\n                    component: Badges,\r\n                    route: PrivateRoute,\r\n                },\r\n                {\r\n                    path: '/ui/buttons',\r\n                    name: 'Buttons',\r\n                    component: Buttons,\r\n                    route: PrivateRoute,\r\n                },\r\n                {\r\n                    path: '/ui/cards',\r\n                    name: 'Cards',\r\n                    component: Cards,\r\n                    route: PrivateRoute,\r\n                },\r\n                {\r\n                    path: '/ui/carousel',\r\n                    name: 'Carousel',\r\n                    component: Carousel,\r\n                    route: PrivateRoute,\r\n                },\r\n                {\r\n                    path: '/ui/dropdowns',\r\n                    name: 'Dropdowns',\r\n                    component: Dropdowns,\r\n                    route: PrivateRoute,\r\n                },\r\n                {\r\n                    path: '/ui/grid',\r\n                    name: 'Grid',\r\n                    component: Grid,\r\n                    route: PrivateRoute,\r\n                },\r\n                {\r\n                    path: '/ui/listgroups',\r\n                    name: 'List Groups',\r\n                    component: ListGroups,\r\n                    route: PrivateRoute,\r\n                },\r\n                {\r\n                    path: '/ui/modals',\r\n                    name: 'Modals',\r\n                    component: Modals,\r\n                    route: PrivateRoute,\r\n                },\r\n                {\r\n                    path: '/ui/popovers',\r\n                    name: 'Popovers',\r\n                    component: Popovers,\r\n                    route: PrivateRoute,\r\n                },\r\n                {\r\n                    path: '/ui/progress',\r\n                    name: 'Progress',\r\n                    component: Progress,\r\n                    route: PrivateRoute,\r\n                },\r\n                {\r\n                    path: '/ui/ribbons',\r\n                    name: 'Ribbons',\r\n                    component: Ribbons,\r\n                    route: PrivateRoute,\r\n                },\r\n                {\r\n                    path: '/ui/spinners',\r\n                    name: 'Spinners',\r\n                    component: Spinners,\r\n                    route: PrivateRoute,\r\n                },\r\n                {\r\n                    path: '/ui/tabs',\r\n                    name: 'Tabs',\r\n                    component: Tabs,\r\n                    route: PrivateRoute,\r\n                },\r\n                {\r\n                    path: '/ui/toasts',\r\n                    name: 'Toasts',\r\n                    component: Toasts,\r\n                    route: PrivateRoute,\r\n                },\r\n                {\r\n                    path: '/ui/tooltips',\r\n                    name: 'Tooltips',\r\n                    component: Tooltips,\r\n                    route: PrivateRoute,\r\n                },\r\n                {\r\n                    path: '/ui/typography',\r\n                    name: 'Typography',\r\n                    component: Typography,\r\n                    route: PrivateRoute,\r\n                },\r\n                {\r\n                    path: '/ui/widgets',\r\n                    name: 'Widgets',\r\n                    component: Widgets,\r\n                    route: PrivateRoute,\r\n                },\r\n            ],\r\n        },\r\n        {\r\n            path: '/ui/extended',\r\n            name: 'Extended UI',\r\n            children: [\r\n                {\r\n                    path: '/ui/dragdrop',\r\n                    name: 'Drag and Drop',\r\n                    component: DragDrop,\r\n                    route: PrivateRoute,\r\n                },\r\n                {\r\n                    path: '/ui/rangesliders',\r\n                    name: 'Range Sliders',\r\n                    component: RangeSliders,\r\n                    route: PrivateRoute,\r\n                },\r\n                {\r\n                    path: '/ui/ratings',\r\n                    name: 'Ratings',\r\n                    component: Ratings,\r\n                    route: PrivateRoute,\r\n                },\r\n            ],\r\n        },\r\n        {\r\n            path: '/ui/icons',\r\n            name: 'Icons',\r\n            children: [\r\n                {\r\n                    path: '/ui/icons/dripicons',\r\n                    name: 'Dripicons',\r\n                    component: Dripicons,\r\n                    route: PrivateRoute,\r\n                },\r\n                {\r\n                    path: '/ui/icons/mdi',\r\n                    name: 'Material Design',\r\n                    component: MDIIcons,\r\n                    route: PrivateRoute,\r\n                },\r\n                {\r\n                    path: '/ui/icons/unicons',\r\n                    name: 'Unicons',\r\n                    component: Unicons,\r\n                    route: Unicons,\r\n                },\r\n            ],\r\n        },\r\n        {\r\n            path: '/ui/forms',\r\n            name: 'Forms',\r\n            children: [\r\n                {\r\n                    path: '/ui/forms/basic',\r\n                    name: 'Basic Elements',\r\n                    component: BasicForms,\r\n                    route: PrivateRoute,\r\n                },\r\n                {\r\n                    path: '/ui/forms/advanced',\r\n                    name: 'Form Advanced',\r\n                    component: FormAdvanced,\r\n                    route: PrivateRoute,\r\n                },\r\n                {\r\n                    path: '/ui/forms/validation',\r\n                    name: 'Form Validation',\r\n                    component: FormValidation,\r\n                    route: PrivateRoute,\r\n                },\r\n                {\r\n                    path: '/ui/forms/wizard',\r\n                    name: 'Form Wizard',\r\n                    component: FormWizard,\r\n                    route: PrivateRoute,\r\n                },\r\n                {\r\n                    path: '/ui/forms/upload',\r\n                    name: 'File Upload',\r\n                    component: FileUpload,\r\n                    route: PrivateRoute,\r\n                },\r\n                {\r\n                    path: '/ui/forms/editors',\r\n                    name: 'Editors',\r\n                    component: Editors,\r\n                    route: PrivateRoute,\r\n                },\r\n            ],\r\n        },\r\n        {\r\n            path: '/ui/charts',\r\n            name: 'Charts',\r\n            children: [\r\n                {\r\n                    path: '/ui/charts/apex',\r\n                    name: 'Apex',\r\n                    component: ApexChart,\r\n                    route: PrivateRoute,\r\n                },\r\n                {\r\n                    path: '/ui/charts/brite',\r\n                    name: 'Brite',\r\n                    component: BriteChart,\r\n                    route: PrivateRoute,\r\n                },\r\n                {\r\n                    path: '/ui/charts/chartjs',\r\n                    name: 'Chartjs',\r\n                    component: ChartJs,\r\n                    route: PrivateRoute,\r\n                },\r\n            ],\r\n        },\r\n        {\r\n            path: '/ui/tables',\r\n            name: 'Tables',\r\n            children: [\r\n                {\r\n                    path: '/ui/tables/basic',\r\n                    name: 'Basic',\r\n                    component: BasicTables,\r\n                    route: PrivateRoute,\r\n                },\r\n                {\r\n                    path: '/ui/tables/advanced',\r\n                    name: 'Advanced',\r\n                    component: AdvancedTables,\r\n                    route: PrivateRoute,\r\n                },\r\n            ],\r\n        },\r\n        {\r\n            path: '/ui/googlemaps',\r\n            name: 'Google Maps',\r\n            component: GoogleMaps,\r\n            route: PrivateRoute,\r\n        },\r\n    ],\r\n};\r\n\r\n// flatten the list of all nested routes\r\nconst flattenRoutes = routes => {\r\n    let flatRoutes = [];\r\n\r\n    routes = routes || [];\r\n    routes.forEach(item => {\r\n        flatRoutes.push(item);\r\n\r\n        if (typeof item.children !== 'undefined') {\r\n            flatRoutes = [...flatRoutes, ...flattenRoutes(item.children)];\r\n        }\r\n    });\r\n    return flatRoutes;\r\n};\r\n\r\n// All routes\r\nconst allRoutes = [rootRoute, dashboardRoutes, ...appRoutes, authRoutes, pageRoutes, uiRoutes];\r\n\r\nconst authProtectedRoutes = [dashboardRoutes, ...appRoutes, pageRoutes, uiRoutes];\r\n\r\nconst allFlattenRoutes = flattenRoutes(allRoutes);\r\n\r\nexport { allRoutes, authProtectedRoutes, allFlattenRoutes };\r\n","import React, { Component } from 'react';\r\nimport { BrowserRouter, Switch } from 'react-router-dom';\r\nimport Loadable from 'react-loadable';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { allFlattenRoutes as routes } from './index';\r\nimport { isUserAuthenticated } from '../helpers/authUtils';\r\nimport * as layoutConstants from '../constants/layout';\r\n\r\n// Lazy loading and code splitting -\r\n// Derieved idea from https://blog.logrocket.com/lazy-loading-components-in-react-16-6-6cea535c0b52\r\nconst loading = () => <div></div>;\r\n\r\n// All layouts/containers\r\nconst AuthLayout = Loadable({\r\n    loader: () => import('../layouts/Auth'),\r\n    render(loaded, props) {\r\n        let Component = loaded.default;\r\n        return <Component {...props} />;\r\n    },\r\n    loading,\r\n});\r\n\r\nconst VerticalLayout = Loadable({\r\n    loader: () => import('../layouts/Vertical'),\r\n    render(loaded, props) {\r\n        let Component = loaded.default;\r\n        return <Component {...props} />;\r\n    },\r\n    loading,\r\n});\r\n\r\nconst HorizontalLayout = Loadable({\r\n    loader: () => import('../layouts/Horizontal'),\r\n    render(loaded, props) {\r\n        let Component = loaded.default;\r\n        return <Component {...props} />;\r\n    },\r\n    loading,\r\n});\r\n\r\nconst DetachedLayout = Loadable({\r\n    loader: () => import('../layouts/Detached'),\r\n    render(loaded, props) {\r\n        let Component = loaded.default;\r\n        return <Component {...props} />;\r\n    },\r\n    loading,\r\n});\r\n\r\nclass Routes extends Component {\r\n    // returns the layout\r\n    getLayout = () => {\r\n        if (!isUserAuthenticated()) return AuthLayout;\r\n\r\n        let layoutCls = VerticalLayout;\r\n\r\n        switch (this.props.layout.layoutType) {\r\n            case layoutConstants.LAYOUT_HORIZONTAL:\r\n                layoutCls = HorizontalLayout;\r\n                break;\r\n            case layoutConstants.LAYOUT_DETACHED:\r\n                layoutCls = DetachedLayout;\r\n                break;\r\n            default:\r\n                layoutCls = VerticalLayout;\r\n                break;\r\n        }\r\n        return layoutCls;\r\n    };\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        let oldLayout = { ...this.props.layout };\r\n        delete oldLayout.showRightSidebar;\r\n        let newLayout = { ...nextProps.layout };\r\n        delete newLayout.showRightSidebar;\r\n        return (\r\n            JSON.stringify(oldLayout) !== JSON.stringify(newLayout) ||\r\n            JSON.stringify(this.props.user) !== JSON.stringify(nextProps.user)\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const Layout = this.getLayout();\r\n        // rendering the router with layout\r\n        return (\r\n            <BrowserRouter>\r\n                <Layout {...this.props}>\r\n                    <Switch>\r\n                        {routes.map((route, index) => {\r\n                            return (\r\n                                !route.children && (\r\n                                    <route.route\r\n                                        key={index}\r\n                                        path={route.path}\r\n                                        roles={route.roles}\r\n                                        exact={route.exact}\r\n                                        component={route.component}></route.route>\r\n                                )\r\n                            );\r\n                        })}\r\n                    </Switch>\r\n                </Layout>\r\n            </BrowserRouter>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        layout: state.Layout,\r\n        user: state.Auth.user,\r\n    };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    null\r\n)(Routes);\r\n","export function configureFakeBackend() {\r\n    let users = [{ id: 1, username: 'test', password: 'test', firstName: 'Test', lastName: 'User', role: 'Admin' }];\r\n    let realFetch = window.fetch;\r\n    window.fetch = function(url, opts) {\r\n        return new Promise((resolve, reject) => {\r\n            // wrap in timeout to simulate server api call\r\n            setTimeout(() => {\r\n                // authenticate\r\n                if (url.endsWith('/users/authenticate') && opts.method === 'POST') {\r\n                    // get parameters from post request\r\n                    let params = JSON.parse(opts.body);\r\n\r\n                    // find if any user matches login credentials\r\n                    let filteredUsers = users.filter(user => {\r\n                        return user.username === params.username && user.password === params.password;\r\n                    });\r\n\r\n                    if (filteredUsers.length) {\r\n                        // if login details are valid return user details and fake jwt token\r\n                        let user = filteredUsers[0];\r\n                        let responseJson = {\r\n                            id: user.id,\r\n                            username: user.username,\r\n                            firstName: user.firstName,\r\n                            lastName: user.lastName,\r\n                            role: 'Admin',\r\n                            token:\r\n                                'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJjb2RlcnRoZW1lcyIsImlhdCI6MTU4NzM1NjY0OSwiZXhwIjoxOTAyODg5NDQ5LCJhdWQiOiJjb2RlcnRoZW1lcy5jb20iLCJzdWIiOiJzdXBwb3J0QGNvZGVydGhlbWVzLmNvbSIsImxhc3ROYW1lIjoiVGVzdCIsIkVtYWlsIjoic3VwcG9ydEBjb2RlcnRoZW1lcy5jb20iLCJSb2xlIjoiQWRtaW4iLCJmaXJzdE5hbWUiOiJIeXBlciJ9.P27f7JNBF-vOaJFpkn-upfEh3zSprYfyhTOYhijykdI',\r\n                        };\r\n                        resolve({ ok: true, json: () => responseJson });\r\n                    } else {\r\n                        // else return error\r\n                        reject('Username or password is incorrect');\r\n                    }\r\n                    return;\r\n                }\r\n\r\n                // register\r\n                if (url.endsWith('/users/register') && opts.method === 'POST') {\r\n                    // get parameters from post request\r\n                    let params = JSON.parse(opts.body);\r\n\r\n                    // add new users\r\n                    let { firstName, lastName } = params.fullname.split(' ');\r\n                    let newUser = {\r\n                        id: users.length + 1,\r\n                        username: firstName,\r\n                        password: params.password,\r\n                        firstName: firstName,\r\n                        lastName: lastName,\r\n                        role: 'Admin',\r\n                    };\r\n                    users.push({ newUser });\r\n\r\n                    let responseJson = {\r\n                        id: newUser.id,\r\n                        username: newUser.username,\r\n                        firstName: newUser.firstName,\r\n                        lastName: newUser.lastName,\r\n                        role: newUser.role,\r\n                        token:\r\n                            'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJjb2RlcnRoZW1lcyIsImlhdCI6MTU4NzM1NjY0OSwiZXhwIjoxOTAyODg5NDQ5LCJhdWQiOiJjb2RlcnRoZW1lcy5jb20iLCJzdWIiOiJzdXBwb3J0QGNvZGVydGhlbWVzLmNvbSIsImxhc3ROYW1lIjoiVGVzdCIsIkVtYWlsIjoic3VwcG9ydEBjb2RlcnRoZW1lcy5jb20iLCJSb2xlIjoiQWRtaW4iLCJmaXJzdE5hbWUiOiJIeXBlciJ9.P27f7JNBF-vOaJFpkn-upfEh3zSprYfyhTOYhijykdI',\r\n                    };\r\n                    resolve({ ok: true, json: () => responseJson });\r\n                    return;\r\n                }\r\n\r\n                // forget password\r\n                if (url.endsWith('/users/password-reset') && opts.method === 'POST') {\r\n                    // get parameters from post request\r\n                    let params = JSON.parse(opts.body);\r\n\r\n                    // find if any user matches login credentials\r\n                    let filteredUsers = users.filter(user => {\r\n                        return user.username === params.username;\r\n                    });\r\n\r\n                    if (filteredUsers.length) {\r\n                        let responseJson = {\r\n                            message: \"We've sent you a link to reset password to your registered email.\",\r\n                        };\r\n                        resolve({ ok: true, json: () => responseJson });\r\n                    } else {\r\n                        // else return error\r\n                        reject('Sorry, we could not find any registered user with entered username');\r\n                    }\r\n                    return;\r\n                }\r\n\r\n                // get users\r\n                if (url.endsWith('/users') && opts.method === 'GET') {\r\n                    // check for fake auth token in header and return users if valid, this security is implemented server side in a real application\r\n                    if (\r\n                        opts.headers &&\r\n                        opts.headers.Authorization ===\r\n                            'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJjb2RlcnRoZW1lcyIsImlhdCI6MTU4NzM1NjY0OSwiZXhwIjoxOTAyODg5NDQ5LCJhdWQiOiJjb2RlcnRoZW1lcy5jb20iLCJzdWIiOiJzdXBwb3J0QGNvZGVydGhlbWVzLmNvbSIsImxhc3ROYW1lIjoiVGVzdCIsIkVtYWlsIjoic3VwcG9ydEBjb2RlcnRoZW1lcy5jb20iLCJSb2xlIjoiQWRtaW4iLCJmaXJzdE5hbWUiOiJIeXBlciJ9.P27f7JNBF-vOaJFpkn-upfEh3zSprYfyhTOYhijykdI'\r\n                    ) {\r\n                        resolve({ ok: true, json: () => users });\r\n                    } else {\r\n                        // return 401 not authorised if token is null or invalid\r\n                        reject('Unauthorised');\r\n                    }\r\n\r\n                    return;\r\n                }\r\n\r\n                // pass through any requests not handled above\r\n                realFetch(url, opts).then(response => resolve(response));\r\n            }, 500);\r\n        });\r\n    };\r\n}\r\n","// @flow\r\nimport React, { Component } from 'react';\r\nimport Routes from './routes/Routes';\r\n\r\n// setup fake backend\r\nimport { configureFakeBackend } from './helpers';\r\n\r\n// Themes\r\nimport './assets/scss/Saas.scss';\r\n\r\n// For Dark import Saas-Dark.scss\r\n// import './assets/scss/Saas-Dark.scss';\r\n\r\n// For Modern import Modern.scss\r\n// import './assets/scss/Modern.scss';\r\n// For modern dakr import Modern-Dark.scss\r\n// import './assets/scss/Modern-Dark.scss';\r\n\r\n// For Creative demo import Modern.scss\r\n// import './assets/scss/Creative.scss';\r\n// For Creative dark demo import Modern.scss\r\n// import './assets/scss/Creative-Dark.scss';\r\n\r\n// configure fake backend\r\nconfigureFakeBackend();\r\n\r\ntype AppProps = {};\r\n\r\n/**\r\n * Main app component\r\n */\r\nclass App extends Component<AppProps> {\r\n    render() {\r\n        return <Routes></Routes>;\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n        // [::1] is the IPv6 localhost address.\r\n        window.location.hostname === '[::1]' ||\r\n        // 127.0.0.1/8 is considered localhost for IPv4.\r\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\nexport function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return;\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config);\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                            'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n                    );\r\n                });\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing;\r\n                if (installingWorker == null) {\r\n                    return;\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                    'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n                            );\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration);\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.');\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration);\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error);\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl)\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type');\r\n            if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload();\r\n                    });\r\n                });\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log('No internet connection found. App is running in offline mode.');\r\n        });\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister();\r\n        });\r\n    }\r\n}\r\n","// @flow\r\nimport {\r\n    CHANGE_LAYOUT,\r\n    CHANGE_LAYOUT_WIDTH,\r\n    CHANGE_SIDEBAR_THEME,\r\n    CHANGE_SIDEBAR_TYPE,\r\n    TOGGLE_RIGHT_SIDEBAR,\r\n    SHOW_RIGHT_SIDEBAR,\r\n    HIDE_RIGHT_SIDEBAR,\r\n} from './constants';\r\n\r\nimport * as layoutConstants from '../../constants/layout';\r\n\r\nconst INIT_STATE = {\r\n    layoutType: layoutConstants.LAYOUT_VERTICAL,\r\n    layoutWidth: layoutConstants.LAYOUT_WIDTH_FLUID,\r\n    leftSideBarTheme: layoutConstants.LEFT_SIDEBAR_THEME_DEFAULT,\r\n    leftSideBarType: layoutConstants.LEFT_SIDEBAR_TYPE_FIXED,\r\n    showRightSidebar: false,\r\n};\r\n\r\ntype LayoutAction = { type: string, payload?: string | null };\r\ntype State = { showRightSidebar?: boolean, +value?: boolean };\r\n\r\nconst Layout = (state: State = INIT_STATE, action: LayoutAction) => {\r\n    switch (action.type) {\r\n        case CHANGE_LAYOUT:\r\n            return {\r\n                ...state,\r\n                layoutType: action.payload,\r\n            };\r\n        case CHANGE_LAYOUT_WIDTH:\r\n            return {\r\n                ...state,\r\n                layoutWidth: action.payload,\r\n            };\r\n        case CHANGE_SIDEBAR_THEME:\r\n            return {\r\n                ...state,\r\n                leftSideBarTheme: action.payload,\r\n            };\r\n        case CHANGE_SIDEBAR_TYPE:\r\n            return {\r\n                ...state,\r\n                leftSideBarType: action.payload,\r\n            };\r\n        case TOGGLE_RIGHT_SIDEBAR:\r\n            return {\r\n                ...state,\r\n                showRightSidebar: !state.showRightSidebar,\r\n            };\r\n        case SHOW_RIGHT_SIDEBAR:\r\n            return {\r\n                ...state,\r\n                showRightSidebar: true,\r\n            };\r\n        case HIDE_RIGHT_SIDEBAR:\r\n            return {\r\n                ...state,\r\n                showRightSidebar: false,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default Layout;\r\n","// @flow\r\nimport {\r\n    LOGIN_USER,\r\n    LOGIN_USER_SUCCESS,\r\n    LOGIN_USER_FAILED,\r\n    LOGOUT_USER,\r\n    REGISTER_USER,\r\n    REGISTER_USER_SUCCESS,\r\n    REGISTER_USER_FAILED,\r\n    FORGET_PASSWORD,\r\n    FORGET_PASSWORD_SUCCESS,\r\n    FORGET_PASSWORD_FAILED,\r\n} from './constants';\r\n\r\nimport { getLoggedInUser } from '../../helpers/authUtils';\r\n\r\nconst INIT_STATE = {\r\n    user: getLoggedInUser(),\r\n    loading: false,\r\n};\r\n\r\ntype AuthAction = { type: string, payload: {} | string };\r\ntype State = { user?: {} | null, loading?: boolean, +value?: boolean };\r\n\r\nconst Auth = (state: State = INIT_STATE, action: AuthAction) => {\r\n    switch (action.type) {\r\n        case LOGIN_USER:\r\n            return { ...state, loading: true };\r\n        case LOGIN_USER_SUCCESS:\r\n            return { ...state, user: action.payload, loading: false, error: null };\r\n        case LOGIN_USER_FAILED:\r\n            return { ...state, error: action.payload, loading: false };\r\n        case REGISTER_USER:\r\n            return { ...state, loading: true };\r\n        case REGISTER_USER_SUCCESS:\r\n            return { ...state, user: action.payload, loading: false, error: null };\r\n        case REGISTER_USER_FAILED:\r\n            return { ...state, error: action.payload, loading: false };\r\n        case LOGOUT_USER:\r\n            return { ...state, user: null };\r\n        case FORGET_PASSWORD:\r\n            return { ...state, loading: true };\r\n        case FORGET_PASSWORD_SUCCESS:\r\n            return { ...state, passwordResetStatus: action.payload, loading: false, error: null };\r\n        case FORGET_PASSWORD_FAILED:\r\n            return { ...state, error: action.payload, loading: false };\r\n        default:\r\n            return { ...state };\r\n    }\r\n};\r\n\r\nexport default Auth;\r\n","// @flow\r\nimport {\r\n    INIT_MENU,\r\n    INIT_MENU_SUCCESS,\r\n    CHANGE_ACTIVE_MENU_FROM_LOCATION,\r\n    CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS,\r\n} from './constants';\r\n\r\ntype Action = { type: string, payload: {} };\r\ntype State = { +value: boolean };\r\n\r\nconst AppMenu = (state: State = {}, action: Action) => {\r\n    switch (action.type) {\r\n        case INIT_MENU:\r\n            return action.payload;\r\n        case INIT_MENU_SUCCESS:\r\n            return { ...state, ...action.payload };\r\n        case CHANGE_ACTIVE_MENU_FROM_LOCATION:\r\n            return { ...state };\r\n        case CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS:\r\n            return { ...state, ...action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default AppMenu;\r\n","// @flow\r\n\r\nimport { combineReducers } from 'redux';\r\nimport Layout from './layout/reducers';\r\nimport Auth from './auth/reducers';\r\nimport AppMenu from './appMenu/reducers';\r\n\r\nexport default combineReducers({\r\n    Auth,\r\n    AppMenu,\r\n    Layout,\r\n});\r\n","/**\r\n * Fetch data from given url\r\n * @param {*} url\r\n * @param {*} options\r\n */\r\nconst fetchJSON = (url, options = {}) => {\r\n    return fetch(url, options)\r\n        .then(response => {\r\n            if (!response.status === 200) {\r\n                throw response.json();\r\n            }\r\n            return response.json();\r\n        })\r\n        .then(json => {\r\n            return json;\r\n        })\r\n        .catch(error => {\r\n            throw error;\r\n        });\r\n};\r\n\r\nexport { fetchJSON };\r\n","// @flow\r\nimport { Cookies } from 'react-cookie';\r\nimport { all, call, fork, put, takeEvery } from 'redux-saga/effects';\r\n\r\nimport { fetchJSON } from '../../helpers/api';\r\n\r\nimport { LOGIN_USER, LOGOUT_USER, REGISTER_USER, FORGET_PASSWORD } from './constants';\r\n\r\nimport {\r\n    loginUserSuccess,\r\n    loginUserFailed,\r\n    registerUserSuccess,\r\n    registerUserFailed,\r\n    forgetPasswordSuccess,\r\n    forgetPasswordFailed,\r\n} from './actions';\r\n\r\n/**\r\n * Sets the session\r\n * @param {*} user\r\n */\r\nconst setSession = user => {\r\n    let cookies = new Cookies();\r\n    if (user) cookies.set('user', JSON.stringify(user), { path: '/' });\r\n    else cookies.remove('user', { path: '/' });\r\n};\r\n/**\r\n * Login the user\r\n * @param {*} payload - username and password\r\n */\r\nfunction* login({ payload: { username, password } }) {\r\n    const options = {\r\n        body: JSON.stringify({ username, password }),\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    try {\r\n        const response = yield call(fetchJSON, '/users/authenticate', options);\r\n        setSession(response);\r\n        yield put(loginUserSuccess(response));\r\n    } catch (error) {\r\n        let message;\r\n        switch (error.status) {\r\n            case 500:\r\n                message = 'Internal Server Error';\r\n                break;\r\n            case 401:\r\n                message = 'Invalid credentials';\r\n                break;\r\n            default:\r\n                message = error;\r\n        }\r\n        yield put(loginUserFailed(message));\r\n        setSession(null);\r\n    }\r\n}\r\n\r\n/**\r\n * Logout the user\r\n * @param {*} param0\r\n */\r\nfunction* logout({ payload: { history } }) {\r\n    try {\r\n        setSession(null);\r\n        yield call(() => {\r\n            history.push('/account/login');\r\n        });\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Register the user\r\n */\r\nfunction* register({ payload: { fullname, email, password } }) {\r\n    const options = {\r\n        body: JSON.stringify({ fullname, email, password }),\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    try {\r\n        const response = yield call(fetchJSON, '/users/register', options);\r\n        yield put(registerUserSuccess(response));\r\n    } catch (error) {\r\n        let message;\r\n        switch (error.status) {\r\n            case 500:\r\n                message = 'Internal Server Error';\r\n                break;\r\n            case 401:\r\n                message = 'Invalid credentials';\r\n                break;\r\n            default:\r\n                message = error;\r\n        }\r\n        yield put(registerUserFailed(message));\r\n    }\r\n}\r\n\r\n/**\r\n * forget password\r\n */\r\nfunction* forgetPassword({ payload: { username } }) {\r\n    const options = {\r\n        body: JSON.stringify({ username }),\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    try {\r\n        const response = yield call(fetchJSON, '/users/password-reset', options);\r\n        yield put(forgetPasswordSuccess(response.message));\r\n    } catch (error) {\r\n        let message;\r\n        switch (error.status) {\r\n            case 500:\r\n                message = 'Internal Server Error';\r\n                break;\r\n            case 401:\r\n                message = 'Invalid credentials';\r\n                break;\r\n            default:\r\n                message = error;\r\n        }\r\n        yield put(forgetPasswordFailed(message));\r\n    }\r\n}\r\n\r\nexport function* watchLoginUser(): any {\r\n    yield takeEvery(LOGIN_USER, login);\r\n}\r\n\r\nexport function* watchLogoutUser(): any {\r\n    yield takeEvery(LOGOUT_USER, logout);\r\n}\r\n\r\nexport function* watchRegisterUser(): any {\r\n    yield takeEvery(REGISTER_USER, register);\r\n}\r\n\r\nexport function* watchForgetPassword(): any {\r\n    yield takeEvery(FORGET_PASSWORD, forgetPassword);\r\n}\r\n\r\nfunction* authSaga(): any {\r\n    yield all([fork(watchLoginUser), fork(watchLogoutUser), fork(watchRegisterUser), fork(watchForgetPassword)]);\r\n}\r\n\r\nexport default authSaga;\r\n","// @flow\r\nimport { all, call, fork, takeEvery, put } from 'redux-saga/effects';\r\n\r\nimport {\r\n    CHANGE_LAYOUT,\r\n    CHANGE_LAYOUT_WIDTH,\r\n    CHANGE_SIDEBAR_THEME,\r\n    CHANGE_SIDEBAR_TYPE,\r\n    TOGGLE_RIGHT_SIDEBAR,\r\n    SHOW_RIGHT_SIDEBAR,\r\n    HIDE_RIGHT_SIDEBAR,\r\n} from './constants';\r\nimport * as layoutConstants from '../../constants';\r\nimport {\r\n    changeLayoutWidth as changeLayoutWidthAction,\r\n    changeSidebarTheme as changeLeftSidebarThemeAction,\r\n    changeSidebarType as changeSidebarTypeAction,\r\n} from './actions';\r\n\r\n/**\r\n * Changes the body attribute\r\n */\r\nfunction changeBodyAttribute(attribute, value) {\r\n    if (document.body) document.body.setAttribute(attribute, value);\r\n    return true;\r\n}\r\n\r\n/**\r\n * Toggle the class on body\r\n * @param {*} cssClass\r\n */\r\nfunction manageBodyClass(cssClass, action = 'toggle') {\r\n    switch (action) {\r\n        case 'add':\r\n            if (document.body) document.body.classList.add(cssClass);\r\n            break;\r\n        case 'remove':\r\n            if (document.body) document.body.classList.remove(cssClass);\r\n            break;\r\n        default:\r\n            if (document.body) document.body.classList.toggle(cssClass);\r\n            break;\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\n/**\r\n * ---------------------------------------------------------------------------------------------------------------------------\r\n * Note: Following are the functions which allows you to save the user prefrences on backend side by making an api request.\r\n * For now, we are just applying the required logic on frontend side\r\n * ----------------------------------------------------------------------------------------------------------------------------\r\n */\r\n\r\n/**\r\n * Changes the layout type\r\n * @param {*} param0\r\n */\r\nfunction* changeLayout({ payload: layout }) {\r\n    try {\r\n        yield call(changeBodyAttribute, 'data-layout', layout);\r\n        if (layout === layoutConstants.LAYOUT_VERTICAL) {\r\n            yield put(changeLeftSidebarThemeAction(layoutConstants.LEFT_SIDEBAR_THEME_DEFAULT));\r\n            yield put(changeSidebarTypeAction(layoutConstants.LEFT_SIDEBAR_TYPE_FIXED));\r\n        }\r\n\r\n        if (layout === layoutConstants.LAYOUT_HORIZONTAL) {\r\n            yield put(changeLeftSidebarThemeAction(layoutConstants.LEFT_SIDEBAR_THEME_DEFAULT));\r\n            yield put(changeSidebarTypeAction(layoutConstants.LEFT_SIDEBAR_TYPE_FIXED));\r\n        }\r\n\r\n        if (layout === layoutConstants.LAYOUT_DETACHED) {\r\n            yield put(changeLayoutWidthAction(layoutConstants.LAYOUT_WIDTH_FLUID));\r\n            yield put(changeSidebarTypeAction(layoutConstants.LEFT_SIDEBAR_TYPE_SCROLLABLE));\r\n            yield put(changeLeftSidebarThemeAction(layoutConstants.LEFT_SIDEBAR_THEME_DEFAULT));\r\n        }\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Changes the layout width\r\n * @param {*} param0\r\n */\r\nfunction* changeLayoutWidth({ payload: width }) {\r\n    try {\r\n        yield call(changeBodyAttribute, 'data-layout-mode', width);\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Changes the left sidebar theme\r\n * @param {*} param0\r\n */\r\nfunction* changeLeftSidebarTheme({ payload: theme }) {\r\n    try {\r\n        yield call(changeBodyAttribute, 'data-leftbar-theme', theme);\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Changes the left sidebar type\r\n * @param {*} param0\r\n */\r\nfunction* changeLeftSidebarType({ payload: type }) {\r\n    try {\r\n        yield call(changeBodyAttribute, 'data-leftbar-compact-mode', type);\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Toggles the rightsidebar\r\n */\r\nfunction* toggleRightSidebar() {\r\n    try {\r\n        yield call(manageBodyClass, 'right-bar-enabled');\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Show the rightsidebar\r\n */\r\nfunction* showRightSidebar() {\r\n    try {\r\n        yield call(manageBodyClass, 'right-bar-enabled', 'add');\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Hides the rightsidebar\r\n */\r\nfunction* hideRightSidebar() {\r\n    try {\r\n        yield call(manageBodyClass, 'right-bar-enabled', 'remove');\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Watchers\r\n */\r\nexport function* watchChangeLayoutType(): any {\r\n    yield takeEvery(CHANGE_LAYOUT, changeLayout);\r\n}\r\n\r\nexport function* watchChangeLayoutWidth(): any {\r\n    yield takeEvery(CHANGE_LAYOUT_WIDTH, changeLayoutWidth);\r\n}\r\n\r\nexport function* watchChangeLeftSidebarTheme(): any {\r\n    yield takeEvery(CHANGE_SIDEBAR_THEME, changeLeftSidebarTheme);\r\n}\r\n\r\nexport function* watchChangeLeftSidebarType(): any {\r\n    yield takeEvery(CHANGE_SIDEBAR_TYPE, changeLeftSidebarType);\r\n}\r\n\r\nexport function* watchToggleRightSidebar(): any {\r\n    yield takeEvery(TOGGLE_RIGHT_SIDEBAR, toggleRightSidebar);\r\n}\r\n\r\nexport function* watchShowRightSidebar(): any {\r\n    yield takeEvery(SHOW_RIGHT_SIDEBAR, showRightSidebar);\r\n}\r\n\r\nexport function* watchHideRightSidebar(): any {\r\n    yield takeEvery(HIDE_RIGHT_SIDEBAR, hideRightSidebar);\r\n}\r\n\r\nfunction* LayoutSaga(): any {\r\n    yield all([\r\n        fork(watchChangeLayoutType),\r\n        fork(watchChangeLayoutWidth),\r\n        fork(watchChangeLeftSidebarTheme),\r\n        fork(watchChangeLeftSidebarType),\r\n        fork(watchToggleRightSidebar),\r\n        fork(watchShowRightSidebar),\r\n        fork(watchHideRightSidebar),\r\n    ]);\r\n}\r\n\r\nexport default LayoutSaga;\r\n","// @flow\r\n\r\nimport MenuItem from './models';\r\n\r\n/**\r\n * Flatten the nested list of menu items\r\n */\r\nlet uuid = 1;\r\n\r\nconst assignIdAndParent = (menuItems: Array<MenuItem>, parentId?: number) => {\r\n    menuItems = menuItems || [];\r\n    menuItems.forEach(item => {\r\n        const id = item.id || uuid;\r\n        uuid += 1;\r\n        item.id = id;\r\n        item.parentId = item.parentId || parentId;\r\n        item.active = false;\r\n\r\n        if (typeof item.children !== 'undefined') {\r\n            assignIdAndParent(item.children, id);\r\n        }\r\n    });\r\n};\r\n\r\nexport default (menuItems: Array<MenuItem>) => {\r\n    assignIdAndParent(menuItems);\r\n    return menuItems;\r\n};\r\n","// @flow\r\nimport { all, call, put, fork, takeEvery } from 'redux-saga/effects';\r\n\r\nimport { INIT_MENU, CHANGE_ACTIVE_MENU_FROM_LOCATION } from './constants';\r\nimport { authProtectedRoutes as routes } from '../../routes';\r\nimport assignIds from './utils';\r\nimport { initMenuSuccess, changeActiveMenuFromLocationSuccess } from './actions';\r\n\r\n/**\r\n * Activate menu items from location\r\n * @param {*} menuItems\r\n */\r\nconst getActivatedMenuItemIds = menuItems => {\r\n    var matchingItems = [];\r\n    for (var menuItem of menuItems) {\r\n        if (window.location.pathname.indexOf(menuItem.path) === 0) {\r\n            matchingItems.push(menuItem.id);\r\n        }\r\n\r\n        if (typeof menuItem.children !== 'undefined') {\r\n            matchingItems = [...matchingItems, ...getActivatedMenuItemIds(menuItem.children)];\r\n        }\r\n    }\r\n    return matchingItems;\r\n};\r\n\r\n/**\r\n * Initilizes the menu\r\n */\r\nfunction* initMenuAndItems() {\r\n    try {\r\n        const menuItems = assignIds(routes);\r\n        yield put(initMenuSuccess(menuItems));\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * change the active menu item based on location\r\n */\r\nfunction* changeActiveMenuFromLocation() {\r\n    try {\r\n        const menuItems = assignIds(routes);\r\n        const activatedMenuItemIds = yield call(getActivatedMenuItemIds, menuItems);\r\n        yield put(changeActiveMenuFromLocationSuccess(activatedMenuItemIds));\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Watchers\r\n */\r\nexport function* watchMenuInit(): any {\r\n    yield takeEvery(INIT_MENU, initMenuAndItems);\r\n}\r\n\r\nexport function* watchMenuChange(): any {\r\n    yield takeEvery(CHANGE_ACTIVE_MENU_FROM_LOCATION, changeActiveMenuFromLocation);\r\n}\r\n\r\nfunction* appMenuSaga(): any {\r\n    yield all([fork(watchMenuInit), fork(watchMenuChange)]);\r\n}\r\n\r\nexport default appMenuSaga;\r\n","// @flow\r\nimport { all } from 'redux-saga/effects';\r\nimport authSaga from './auth/saga';\r\nimport layoutSaga from './layout/saga';\r\nimport appMenuSaga from './appMenu/saga';\r\n\r\nexport default function* rootSaga(getState: any): any {\r\n    yield all([authSaga(), layoutSaga(), appMenuSaga()]);\r\n}\r\n","// @flow\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport reducers from './reducers';\r\nimport sagas from './sagas';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst middlewares = [sagaMiddleware];\r\n\r\nexport function configureStore(initialState: {}) {\r\n    const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\n    const store = createStore(reducers, initialState, composeEnhancers(applyMiddleware(...middlewares)));\r\n    sagaMiddleware.run(sagas);\r\n    return store;\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport { configureStore } from './redux/store';\r\n\r\nReactDOM.render(\r\n    <Provider store={configureStore()}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","/* AUTH */\r\nexport const LOGIN_USER = 'LOGIN_USER';\r\nexport const LOGIN_USER_SUCCESS = 'LOGIN_USER_SUCCESS';\r\nexport const LOGIN_USER_FAILED = 'LOGIN_USER_FAILED';\r\nexport const REGISTER_USER = 'REGISTER_USER';\r\nexport const REGISTER_USER_SUCCESS = 'REGISTER_USER_SUCCESS';\r\nexport const REGISTER_USER_FAILED = 'REGISTER_USER_FAILED';\r\nexport const LOGOUT_USER = 'LOGOUT_USER';\r\nexport const FORGET_PASSWORD = 'FORGET_PASSWORD';\r\nexport const FORGET_PASSWORD_SUCCESS = 'FORGET_PASSWORD_SUCCESS';\r\nexport const FORGET_PASSWORD_FAILED = 'FORGET_PASSWORD_FAILED';\r\n","/* LAYOUT */\r\nexport const CHANGE_LAYOUT = 'CHANGE_LAYOUT';\r\nexport const CHANGE_LAYOUT_WIDTH = 'CHANGE_LAYOUT_WIDTH';\r\nexport const CHANGE_SIDEBAR_THEME = 'CHANGE_SIDEBAR_THEME';\r\nexport const CHANGE_SIDEBAR_TYPE = 'CHANGE_SIDEBAR_TYPE';\r\n\r\n/* RIGHT SIDEBAR */\r\nexport const TOGGLE_RIGHT_SIDEBAR = 'TOGGLE_RIGHT_SIDEBAR';\r\nexport const SHOW_RIGHT_SIDEBAR = 'SHOW_RIGHT_SIDEBAR';\r\nexport const HIDE_RIGHT_SIDEBAR = 'HIDE_RIGHT_SIDEBAR';\r\n"],"sourceRoot":""}
{"version":3,"sources":["pages/uikit/Modals.js","components/PageTitle.js"],"names":["ModalSizesAndPosition","Component","constructor","props","super","toggle","this","setState","prevState","modal","openModalWithSize","size","className","openModalWithClass","state","bind","render","Fragment","color","onClick","isOpen","ModalColorVariant","openModalWithHeaderClass","headerClassName","openModalWithBodyClass","bodyClass","ModalWithForm","React","action","htmlFor","type","id","required","placeholder","href","NestedModal","toggleNested","nestedModal","closeAll","toggleMultiple","onClosed","undefined","Modals","breadCrumbItems","label","path","active","title","md","PageTitle","to","map","item","index","key"],"mappings":"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","file":"static/js/87.be0cd378.chunk.js","sourcesContent":["// @flow\r\nimport React, { Component } from 'react';\r\nimport { Row, Col, Card, CardBody, Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\n\r\nimport PageTitle from '../../components/PageTitle';\r\n\r\ntype ModalProps = {};\r\n\r\ntype ModalState = {\r\n    modal?: boolean,\r\n    size?: string | null,\r\n    className?: string | null,\r\n};\r\n\r\nclass ModalSizesAndPosition extends Component<ModalProps, ModalState> {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            modal: false,\r\n        };\r\n\r\n        this.toggle = this.toggle.bind(this);\r\n        this.openModalWithSize = this.openModalWithSize.bind(this);\r\n        this.openModalWithClass = this.openModalWithClass.bind(this);\r\n    }\r\n\r\n    /**\r\n     * Show/hide the modal\r\n     */\r\n    /*:: toggle: () => void */\r\n    toggle = () => {\r\n        this.setState(prevState => ({\r\n            modal: !prevState.modal,\r\n        }));\r\n    };\r\n\r\n    /**\r\n     * Opens large modal\r\n     */\r\n    /*:: openModalWithSize: () => void */\r\n    openModalWithSize = size => {\r\n        this.setState({ size: size, className: null });\r\n        this.toggle();\r\n    };\r\n\r\n    /**\r\n     * Opens modal with custom class\r\n     */\r\n    /*:: openModalWithClass: () => void */\r\n    openModalWithClass = className => {\r\n        this.setState({ className: className, size: null });\r\n        this.toggle();\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Card>\r\n                    <CardBody>\r\n                        <h4 className=\"header-title\">Bootstrap Modals</h4>\r\n\r\n                        <p className=\"text-muted\">\r\n                            A rendered modal with header, body, and set of actions in the footer.\r\n                        </p>\r\n\r\n                        <div className=\"button-list\">\r\n                            <Button color=\"primary\" onClick={this.toggle}>\r\n                                Standard Modal\r\n                            </Button>\r\n                            <Button color=\"info\" onClick={() => this.openModalWithSize('lg')}>\r\n                                Large Modal\r\n                            </Button>\r\n                            <Button color=\"success\" onClick={() => this.openModalWithSize('sm')}>\r\n                                Small Modal\r\n                            </Button>\r\n                            <Button color=\"primary\" onClick={() => this.openModalWithClass('modal-full-width')}>\r\n                                Full width Modal\r\n                            </Button>\r\n                            <Button\r\n                                color=\"secondary\"\r\n                                onClick={() => this.openModalWithClass('modal-dialog-scrollable')}>\r\n                                Scrollable Modal\r\n                            </Button>\r\n                        </div>\r\n                    </CardBody>\r\n                </Card>\r\n                <Card>\r\n                    <CardBody>\r\n                        <h4 className=\"header-title\">Modal Position</h4>\r\n\r\n                        <p className=\"text-muted\">\r\n                            Specify the position for the modal. You can display modal at top, bottom, center or right of\r\n                            page by specifying classes <code>modal-top</code>, <code>modal-bottom</code>,{' '}\r\n                            <code>modal-dialog-centered</code> and <code>modal-right</code>\r\n                            respectively.\r\n                        </p>\r\n\r\n                        <div className=\"button-list\">\r\n                            <Button color=\"info\" onClick={() => this.openModalWithClass('modal-top')}>\r\n                                Top\r\n                            </Button>\r\n                            <Button color=\"success\" onClick={() => this.openModalWithClass('modal-right')}>\r\n                                Right\r\n                            </Button>\r\n                            <Button color=\"primary\" onClick={() => this.openModalWithClass('modal-bottom')}>\r\n                                Bottom\r\n                            </Button>\r\n                            <Button color=\"secondary\" onClick={() => this.openModalWithClass('modal-dialog-centered')}>\r\n                                Center\r\n                            </Button>\r\n                        </div>\r\n\r\n                        <Modal\r\n                            isOpen={this.state.modal}\r\n                            toggle={this.toggle}\r\n                            className={this.state.className}\r\n                            size={this.state.size}>\r\n                            <ModalHeader toggle={this.toggle}>Modal title</ModalHeader>\r\n                            <ModalBody>\r\n                                <h6>Text in a modal</h6>\r\n                                <p>Duis mollis, est non commodo luctus, nisi erat porttitor ligula.</p>\r\n                                <hr />\r\n                                <h6>Overflowing text to show scroll behavior</h6>\r\n                                <p>\r\n                                    Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac\r\n                                    facilisis in, egestas eget quam. Morbi leo risus, porta ac consectetur ac,\r\n                                    vestibulum at eros.\r\n                                </p>\r\n                                <p>\r\n                                    Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis\r\n                                    lacus vel augue laoreet rutrum faucibus dolor auctor.\r\n                                </p>\r\n                                <p>\r\n                                    Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel\r\n                                    scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non\r\n                                    metus auctor fringilla.\r\n                                </p>\r\n                                <p>\r\n                                    Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac\r\n                                    facilisis in, egestas eget quam. Morbi leo risus, porta ac consectetur ac,\r\n                                    vestibulum at eros.\r\n                                </p>\r\n                            </ModalBody>\r\n                            <ModalFooter>\r\n                                <Button color=\"primary\" onClick={this.toggle}>\r\n                                    Do Something\r\n                                </Button>{' '}\r\n                                <Button color=\"secondary\" onClick={this.toggle}>\r\n                                    Cancel\r\n                                </Button>\r\n                            </ModalFooter>\r\n                        </Modal>\r\n                    </CardBody>\r\n                </Card>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\ntype ModalColorVariantProps = {};\r\n\r\ntype ModalColorVariantState = {\r\n    modal?: boolean,\r\n    bodyClass?: string | null,\r\n    headerClassName?: string | null,\r\n};\r\n\r\nclass ModalColorVariant extends Component<ModalColorVariantProps, ModalColorVariantState> {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            modal: false,\r\n        };\r\n\r\n        this.toggle = this.toggle.bind(this);\r\n        this.openModalWithHeaderClass = this.openModalWithHeaderClass.bind(this);\r\n        this.openModalWithBodyClass = this.openModalWithBodyClass.bind(this);\r\n    }\r\n\r\n    /**\r\n     * Show/hide the modal\r\n     */\r\n    /*:: toggle: () => void */\r\n    toggle = () => {\r\n        this.setState(prevState => ({\r\n            modal: !prevState.modal,\r\n        }));\r\n    };\r\n\r\n    /**\r\n     * Opens modal with custom header\r\n     */\r\n    /*:: openModalWithHeaderClass: () => void */\r\n    openModalWithHeaderClass = className => {\r\n        this.setState({ headerClassName: className });\r\n        this.toggle();\r\n    };\r\n\r\n    /**\r\n     * Opens modal with custom body\r\n     */\r\n    /*:: openModalWithBodyClass: () => void */\r\n    openModalWithBodyClass = className => {\r\n        this.setState({ headerClassName: className, bodyClass: className });\r\n        this.toggle();\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Card>\r\n                    <CardBody>\r\n                        <h4 className=\"header-title\">Colored Header Modals</h4>\r\n\r\n                        <p className=\"text-muted\">A rendered modal with header having contexual background color.</p>\r\n\r\n                        <div className=\"button-list\">\r\n                            <Button\r\n                                color=\"primary\"\r\n                                onClick={() => this.openModalWithHeaderClass('modal-colored-header bg-primary')}>\r\n                                Primary\r\n                            </Button>\r\n                            <Button\r\n                                color=\"success\"\r\n                                onClick={() => this.openModalWithHeaderClass('modal-colored-header bg-success')}>\r\n                                Success\r\n                            </Button>\r\n                            <Button\r\n                                color=\"danger\"\r\n                                onClick={() => this.openModalWithHeaderClass('modal-colored-header bg-danger')}>\r\n                                Danger\r\n                            </Button>\r\n                            <Button\r\n                                color=\"warning\"\r\n                                onClick={() => this.openModalWithHeaderClass('modal-colored-header bg-warning')}>\r\n                                Warning\r\n                            </Button>\r\n                            <Button\r\n                                color=\"secondary\"\r\n                                onClick={() => this.openModalWithHeaderClass('modal-colored-header bg-secondary')}>\r\n                                Secondary\r\n                            </Button>\r\n                            <Button\r\n                                color=\"dark\"\r\n                                onClick={() => this.openModalWithHeaderClass('modal-colored-header bg-dark')}>\r\n                                Dark\r\n                            </Button>\r\n                        </div>\r\n                    </CardBody>\r\n                </Card>\r\n                <Card>\r\n                    <CardBody>\r\n                        <h4 className=\"header-title\">Filled Modals</h4>\r\n\r\n                        <p className=\"text-muted\">\r\n                            A rendered modal with header, body and footer having contexual background color.\r\n                        </p>\r\n\r\n                        <div className=\"button-list\">\r\n                            <Button\r\n                                color=\"primary\"\r\n                                onClick={() => this.openModalWithBodyClass('modal-colored-header bg-primary')}>\r\n                                Primary\r\n                            </Button>\r\n                            <Button\r\n                                color=\"success\"\r\n                                onClick={() => this.openModalWithBodyClass('modal-colored-header bg-success')}>\r\n                                Success\r\n                            </Button>\r\n                            <Button\r\n                                color=\"danger\"\r\n                                onClick={() => this.openModalWithBodyClass('modal-colored-header bg-danger')}>\r\n                                Danger\r\n                            </Button>\r\n                            <Button\r\n                                color=\"warning\"\r\n                                onClick={() => this.openModalWithBodyClass('modal-colored-header bg-warning')}>\r\n                                Warning\r\n                            </Button>\r\n                            <Button\r\n                                color=\"secondary\"\r\n                                onClick={() => this.openModalWithBodyClass('modal-colored-header bg-secondary')}>\r\n                                Secondary\r\n                            </Button>\r\n                            <Button\r\n                                color=\"dark\"\r\n                                onClick={() => this.openModalWithBodyClass('modal-colored-header bg-dark')}>\r\n                                Dark\r\n                            </Button>\r\n                        </div>\r\n\r\n                        <Modal isOpen={this.state.modal} toggle={this.toggle}>\r\n                            <ModalHeader toggle={this.toggle} className={this.state.headerClassName}>\r\n                                Modal title\r\n                            </ModalHeader>\r\n                            <ModalBody className={this.state.bodyClass}>\r\n                                <h6>Text in a modal</h6>\r\n                                <p>Duis mollis, est non commodo luctus, nisi erat porttitor ligula.</p>\r\n                                <hr />\r\n                                <h6>Overflowing text to show scroll behavior</h6>\r\n                                <p>\r\n                                    Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac\r\n                                    facilisis in, egestas eget quam. Morbi leo risus, porta ac consectetur ac,\r\n                                    vestibulum at eros.\r\n                                </p>\r\n                                <p>\r\n                                    Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis\r\n                                    lacus vel augue laoreet rutrum faucibus dolor auctor.\r\n                                </p>\r\n                                <p>\r\n                                    Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel\r\n                                    scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non\r\n                                    metus auctor fringilla.\r\n                                </p>\r\n                                <p>\r\n                                    Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac\r\n                                    facilisis in, egestas eget quam. Morbi leo risus, porta ac consectetur ac,\r\n                                    vestibulum at eros.\r\n                                </p>\r\n                            </ModalBody>\r\n                            <ModalFooter className={this.state.bodyClass}>\r\n                                <Button color=\"primary\" onClick={this.toggle}>\r\n                                    Do Something\r\n                                </Button>{' '}\r\n                                <Button color=\"secondary\" onClick={this.toggle}>\r\n                                    Cancel\r\n                                </Button>\r\n                            </ModalFooter>\r\n                        </Modal>\r\n                    </CardBody>\r\n                </Card>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\ntype ModalWithFormProps = {};\r\n\r\ntype ModalWithFormState = {\r\n    modal?: boolean,\r\n};\r\n\r\nclass ModalWithForm extends React.Component<ModalWithFormProps, ModalWithFormState> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            modal: false,\r\n        };\r\n\r\n        this.toggle = this.toggle.bind(this);\r\n    }\r\n\r\n    /*:: toggle: () => void */\r\n    toggle() {\r\n        this.setState(prevState => ({\r\n            modal: !prevState.modal,\r\n        }));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Card>\r\n                <CardBody>\r\n                    <h4 className=\"header-title\">Modal with Pages</h4>\r\n\r\n                    <p className=\"text-muted\">Examples of custom modals.</p>\r\n\r\n                    <Button color=\"primary\" onClick={this.toggle}>\r\n                        Sign Up\r\n                    </Button>\r\n\r\n                    {/* Sign up Modal */}\r\n                    <Modal isOpen={this.state.modal} toggle={this.toggle}>\r\n                        <ModalHeader toggle={this.toggle}>Sign Up</ModalHeader>\r\n                        <ModalBody>\r\n                            <form className=\"pl-3 pr-3\" action=\"#\">\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"username\">Name</label>\r\n                                    <input\r\n                                        className=\"form-control\"\r\n                                        type=\"email\"\r\n                                        id=\"username\"\r\n                                        required=\"\"\r\n                                        placeholder=\"Michael Zenaty\"\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"emailaddress\">Email address</label>\r\n                                    <input\r\n                                        className=\"form-control\"\r\n                                        type=\"email\"\r\n                                        id=\"emailaddress\"\r\n                                        required=\"\"\r\n                                        placeholder=\"john@deo.com\"\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"password\">Password</label>\r\n                                    <input\r\n                                        className=\"form-control\"\r\n                                        type=\"password\"\r\n                                        required=\"\"\r\n                                        id=\"password\"\r\n                                        placeholder=\"Enter your password\"\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <div className=\"custom-control custom-checkbox\">\r\n                                        <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck1\" />\r\n                                        <label className=\"custom-control-label\" htmlFor=\"customCheck1\">\r\n                                            I accept <a href=\"/\">Terms and Conditions</a>\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"form-group text-center\">\r\n                                    <button className=\"btn btn-primary\" type=\"submit\">\r\n                                        Sign Up Free\r\n                                    </button>\r\n                                </div>\r\n                            </form>\r\n                        </ModalBody>\r\n                    </Modal>\r\n                </CardBody>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\ntype NestedModalProps = {};\r\n\r\ntype NestedModalState = {\r\n    toggleMultiple?: boolean,\r\n    nestedModal?: boolean,\r\n    closeAll?: boolean,\r\n};\r\n\r\nclass NestedModal extends React.Component<NestedModalProps, NestedModalState> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            toggleMultiple: false,\r\n            nestedModal: false,\r\n        };\r\n\r\n        this.toggle = this.toggle.bind(this);\r\n        this.toggleNested = this.toggleNested.bind(this);\r\n    }\r\n\r\n    /**\r\n     * Show/hide the modal\r\n     */\r\n    /*:: toggle: () => void */\r\n    toggle() {\r\n        this.setState(prevState => ({\r\n            toggleMultiple: !prevState.toggleMultiple,\r\n        }));\r\n    }\r\n\r\n    /**\r\n     * show/hide nested modal\r\n     */\r\n    /*:: toggle: () => void */\r\n    toggleNested = () => {\r\n        this.setState({\r\n            nestedModal: !this.state.nestedModal,\r\n            closeAll: false,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Card>\r\n                <CardBody>\r\n                    <h4 className=\"header-title\">Multiple Modals</h4>\r\n\r\n                    <p className=\"text-muted\">\r\n                        Display a series of modals one by one to guide your users on multiple aspects or take step wise\r\n                        input.\r\n                    </p>\r\n\r\n                    <Button color=\"primary\" onClick={this.toggle}>\r\n                        Open\r\n                    </Button>\r\n\r\n                    <Modal isOpen={this.state.toggleMultiple} toggle={this.toggle}>\r\n                        <ModalHeader toggle={this.toggle}>Modal title</ModalHeader>\r\n                        <ModalBody>\r\n                            Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt\r\n                            ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco\r\n                            laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in\r\n                            voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat\r\n                            cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\r\n                            <Button color=\"success\" onClick={this.toggleNested}>\r\n                                Show Nested Modal\r\n                            </Button>\r\n                            <Modal\r\n                                isOpen={this.state.nestedModal}\r\n                                toggle={this.toggleNested}\r\n                                onClosed={this.state.closeAll ? this.toggle : undefined}>\r\n                                <ModalHeader>Nested Modal title</ModalHeader>\r\n                                <ModalBody>Stuff and things</ModalBody>\r\n                                <ModalFooter>\r\n                                    <Button color=\"primary\" onClick={this.toggleNested}>\r\n                                        Done\r\n                                    </Button>{' '}\r\n                                </ModalFooter>\r\n                            </Modal>\r\n                        </ModalBody>\r\n                        <ModalFooter>\r\n                            <Button color=\"primary\" onClick={this.toggle}>\r\n                                Do Something\r\n                            </Button>{' '}\r\n                            <Button color=\"secondary\" onClick={this.toggle}>\r\n                                Cancel\r\n                            </Button>\r\n                        </ModalFooter>\r\n                    </Modal>\r\n                </CardBody>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nconst Modals = () => {\r\n    return (\r\n        <React.Fragment>\r\n            <PageTitle\r\n                breadCrumbItems={[\r\n                    { label: 'UI', path: '/ui/modals' },\r\n                    { label: 'Base UI', path: '/ui/modals' },\r\n                    { label: 'Modals', path: '/ui/modals', active: true },\r\n                ]}\r\n                title={'Modals'}\r\n            />\r\n\r\n            <Row>\r\n                <Col md={6}>\r\n                    <ModalSizesAndPosition />\r\n                </Col>\r\n\r\n                <Col md={6}>\r\n                    <ModalColorVariant />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col md={6}>\r\n                    <ModalWithForm />\r\n                </Col>\r\n\r\n                <Col md={6}>\r\n                    <NestedModal />\r\n                </Col>\r\n            </Row>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Modals;\r\n","// @flow\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Col, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\n\r\ntype PageTitleProps = {\r\n    breadCrumbItems: PropTypes.object,\r\n    title: string,\r\n};\r\n\r\n/**\r\n * PageTitle\r\n */\r\nconst PageTitle = (props: PageTitleProps) => {\r\n    return (\r\n        <Row>\r\n            <Col>\r\n                <div className=\"page-title-box\">\r\n                    <div className=\"page-title-right\">\r\n                        <Breadcrumb>\r\n                            <BreadcrumbItem>\r\n                                <Link to=\"/\">Sklejeczka</Link>\r\n                            </BreadcrumbItem>\r\n                            {props.breadCrumbItems.map((item, index) => {\r\n                                return item.active ? (\r\n                                    <BreadcrumbItem active key={index}>\r\n                                        {item.label}\r\n                                    </BreadcrumbItem>\r\n                                ) : (\r\n                                    <BreadcrumbItem key={index}>\r\n                                        <Link to={item.path}>{item.label}</Link>\r\n                                    </BreadcrumbItem>\r\n                                );\r\n                            })}\r\n                        </Breadcrumb>\r\n                    </div>\r\n                    <h4 className=\"page-title\">{props.title}</h4>\r\n                </div>\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default PageTitle;\r\n"],"sourceRoot":""}
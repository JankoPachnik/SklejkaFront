{"version":3,"sources":["pages/uikit/Tooltips.js","components/PageTitle.js"],"names":["Basic","className","href","id","placement","target","Direction","text","map","tooltip","i","Fragment","key","type","color","HtmlContent","Tooltips","breadCrumbItems","label","path","active","title","xl","PageTitle","props","to","item","index"],"mappings":"oHACA,qFAKA,MAAMA,EAAQ,IAEN,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,wBAAIC,UAAU,gBAAd,YACA,uBAAGA,UAAU,sBAAb,+CAEA,uBAAGA,UAAU,cAAb,kCACoC,IAChC,uBAAGC,KAAK,IAAIC,GAAG,YAAf,gBAEK,IAJT,kLAMsF,IAClF,uBAAGD,KAAK,IAAIC,GAAG,YAAf,QAEK,IATT,mMAWwG,IACpG,uBAAGD,KAAK,IAAIC,GAAG,YAAf,YAEK,IAdT,mHAkBA,kBAAC,IAAD,CAAqBC,UAAU,MAAMC,OAAO,YAA5C,gBAGA,kBAAC,IAAD,CAAqBD,UAAU,QAAQC,OAAO,YAA9C,mBAGA,kBAAC,IAAD,CAAqBD,UAAU,SAASC,OAAO,YAA/C,0BAQVC,EAAY,IAEV,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,wBAAIL,UAAU,gBAAd,mBACA,uBAAGA,UAAU,sBAAb,qEAEC,CACG,CACIG,UAAW,MACXG,KAAM,OAEV,CACIH,UAAW,SACXG,KAAM,UAEV,CACIH,UAAW,OACXG,KAAM,QAEV,CACIH,UAAW,QACXG,KAAM,UAEZC,IAAI,CAACC,EAASC,IAER,kBAAC,IAAMC,SAAP,CAAgBC,IAAKF,GACjB,kBAAC,IAAD,CAAQP,GAAE,kBAAaM,EAAQL,WAAaS,KAAK,SAASC,MAAM,UAAUb,UAAU,QAApF,cACgBQ,EAAQF,MAExB,kBAAC,IAAD,CAAqBH,UAAWK,EAAQL,UAAWC,OAAM,kBAAaI,EAAQL,YAA9E,cACgBK,EAAQL,eAU9CW,EAAc,IAEZ,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,wBAAId,UAAU,gBAAd,aACA,uBAAGA,UAAU,sBAAb,+BAEA,kBAAC,IAAD,CAAQE,GAAG,WAAWU,KAAK,SAASC,MAAM,UAAUb,UAAU,QAA9D,0BAGA,kBAAC,IAAD,CAAqBG,UAAU,SAASC,OAAO,YAA/C,gBACiB,uBAAGH,KAAK,KAAR,WAsClBc,UA/BE,IAET,kBAAC,IAAML,SAAP,KACI,kBAAC,IAAD,CACIM,gBAAiB,CACb,CAAEC,MAAO,KAAMC,KAAM,gBACrB,CAAED,MAAO,UAAWC,KAAM,gBAC1B,CAAED,MAAO,WAAYC,KAAM,eAAgBC,QAAQ,IAEvDC,MAAO,aAGX,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKC,GAAI,GACL,kBAACtB,EAAD,OAEJ,kBAAC,IAAD,CAAKsB,GAAI,GACL,kBAAChB,EAAD,QAIR,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKgB,GAAI,GACL,kBAACP,EAAD,OAEJ,kBAAC,IAAD,CAAKO,GAAI,O,gCChIzB,kEA2CeC,IA9BIC,GAEX,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,yBAAKvB,UAAU,kBACX,yBAAKA,UAAU,oBACX,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAMwB,GAAG,KAAT,eAEHD,EAAMP,gBAAgBT,IAAI,CAACkB,EAAMC,IACvBD,EAAKN,OACR,kBAAC,IAAD,CAAgBA,QAAM,EAACR,IAAKe,GACvBD,EAAKR,OAGV,kBAAC,IAAD,CAAgBN,IAAKe,GACjB,kBAAC,IAAD,CAAMF,GAAIC,EAAKP,MAAOO,EAAKR,WAM/C,wBAAIjB,UAAU,cAAcuB,EAAMH","file":"static/js/91.17dbdee3.chunk.js","sourcesContent":["// @flow\r\nimport React from 'react';\r\nimport { Row, Col, Card, CardBody, UncontrolledTooltip, Button } from 'reactstrap';\r\n\r\nimport PageTitle from '../../components/PageTitle';\r\n\r\nconst Basic = () => {\r\n    return (\r\n        <Card>\r\n            <CardBody>\r\n                <h4 className=\"header-title\">Examples</h4>\r\n                <p className=\"text-muted font-14\">Hover over the links below to see tooltips.</p>\r\n\r\n                <p className=\"muted mb-0\">\r\n                    Tight pants next level keffiyeh{' '}\r\n                    <a href=\"/\" id=\"tooltip1\">\r\n                        you probably\r\n                    </a>{' '}\r\n                    haven't heard of them. Photo booth beard raw denim letterpress vegan messenger bag stumptown.\r\n                    Farm-to-table seitan, mcsweeney's fixie sustainable quinoa 8-bit american apparel{' '}\r\n                    <a href=\"/\" id=\"tooltip2\">\r\n                        have\r\n                    </a>{' '}\r\n                    a terry richardson vinyl chambray. Beard stumptown, cardigans banh mi lomo thundercats. Tofu\r\n                    biodiesel williamsburg marfa, four loko mcsweeney's cleanse vegan chambray. A really ironic artisan{' '}\r\n                    <a href=\"/\" id=\"tooltip3\">\r\n                        whatever\r\n                    </a>{' '}\r\n                    keytar, scenester farm-to-table banksy Austin twitter handle freegan cred raw denim single-origin\r\n                    coffee viral.\r\n                </p>\r\n                <UncontrolledTooltip placement=\"top\" target=\"tooltip1\">\r\n                    Hello world!\r\n                </UncontrolledTooltip>\r\n                <UncontrolledTooltip placement=\"right\" target=\"tooltip2\">\r\n                    Another tooltip\r\n                </UncontrolledTooltip>\r\n                <UncontrolledTooltip placement=\"bottom\" target=\"tooltip3\">\r\n                    Another one here too\r\n                </UncontrolledTooltip>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n};\r\n\r\nconst Direction = () => {\r\n    return (\r\n        <Card>\r\n            <CardBody>\r\n                <h4 className=\"header-title\">Four Directions</h4>\r\n                <p className=\"text-muted font-14\">Four options are available: top, right, bottom, and left aligned.</p>\r\n\r\n                {[\r\n                    {\r\n                        placement: 'top',\r\n                        text: 'Top',\r\n                    },\r\n                    {\r\n                        placement: 'bottom',\r\n                        text: 'Bottom',\r\n                    },\r\n                    {\r\n                        placement: 'left',\r\n                        text: 'Left',\r\n                    },\r\n                    {\r\n                        placement: 'right',\r\n                        text: 'Right',\r\n                    },\r\n                ].map((tooltip, i) => {\r\n                    return (\r\n                        <React.Fragment key={i}>\r\n                            <Button id={`tooltip-${tooltip.placement}`} type=\"button\" color=\"primary\" className=\"mr-1\">\r\n                                Tooltip on {tooltip.text}\r\n                            </Button>\r\n                            <UncontrolledTooltip placement={tooltip.placement} target={`tooltip-${tooltip.placement}`}>\r\n                                Tooltip on {tooltip.placement}\r\n                            </UncontrolledTooltip>\r\n                        </React.Fragment>\r\n                    );\r\n                })}\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n};\r\n\r\nconst HtmlContent = () => {\r\n    return (\r\n        <Card>\r\n            <CardBody>\r\n                <h4 className=\"header-title\">Html Tags</h4>\r\n                <p className=\"text-muted font-14\">And with custom HTML added:</p>\r\n\r\n                <Button id=\"html-tag\" type=\"button\" color=\"primary\" className=\"mr-1\">\r\n                    Tooltip with html tags\r\n                </Button>\r\n                <UncontrolledTooltip placement=\"bottom\" target=\"html-tag\">\r\n                    Tooltip with <a href=\"/\">Link</a>\r\n                </UncontrolledTooltip>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n};\r\n\r\nconst Tooltips = () => {\r\n    return (\r\n        <React.Fragment>\r\n            <PageTitle\r\n                breadCrumbItems={[\r\n                    { label: 'UI', path: '/ui/tooltips' },\r\n                    { label: 'Base UI', path: '/ui/tooltips' },\r\n                    { label: 'Tooltips', path: '/ui/tooltips', active: true },\r\n                ]}\r\n                title={'Tooltips'}\r\n            />\r\n\r\n            <Row>\r\n                <Col xl={6}>\r\n                    <Basic />\r\n                </Col>\r\n                <Col xl={6}>\r\n                    <Direction />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col xl={6}>\r\n                    <HtmlContent />\r\n                </Col>\r\n                <Col xl={6}></Col>\r\n            </Row>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Tooltips;\r\n","// @flow\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Col, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\n\r\ntype PageTitleProps = {\r\n    breadCrumbItems: PropTypes.object,\r\n    title: string,\r\n};\r\n\r\n/**\r\n * PageTitle\r\n */\r\nconst PageTitle = (props: PageTitleProps) => {\r\n    return (\r\n        <Row>\r\n            <Col>\r\n                <div className=\"page-title-box\">\r\n                    <div className=\"page-title-right\">\r\n                        <Breadcrumb>\r\n                            <BreadcrumbItem>\r\n                                <Link to=\"/\">Sklejeczka</Link>\r\n                            </BreadcrumbItem>\r\n                            {props.breadCrumbItems.map((item, index) => {\r\n                                return item.active ? (\r\n                                    <BreadcrumbItem active key={index}>\r\n                                        {item.label}\r\n                                    </BreadcrumbItem>\r\n                                ) : (\r\n                                    <BreadcrumbItem key={index}>\r\n                                        <Link to={item.path}>{item.label}</Link>\r\n                                    </BreadcrumbItem>\r\n                                );\r\n                            })}\r\n                        </Breadcrumb>\r\n                    </div>\r\n                    <h4 className=\"page-title\">{props.title}</h4>\r\n                </div>\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default PageTitle;\r\n"],"sourceRoot":""}